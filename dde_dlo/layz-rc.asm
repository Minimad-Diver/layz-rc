
CODE 0000	; 00000000
	halt 0	;program exit point


CODE 0006	; 00000008
	proc	; operator!=(Float:,Float:)
	; line 0000006f
	break	; 0000000c
	;$lcl oper2 00000010
	;$lcl oper1 0000000c
	; line 0000006f
	break	; 00000010
	load.s.pri 00000010
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000000	; floatcmp
	stack 0000000c
	const.alt 00000000
	neq
	retn


DATA 0007	; 00000000
dump 0000001f 00000000 00000000 00000000 00000000 00000004 0000005e 00000000 
dump 0000000c 00000000 
dump 00000000 00000000 00000000 00000000 00000000 00000001 00000001 00000000 
dump 00000001 00000000 
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
dump 00000000 00000000 
dump 00000019 0000003f 00000000 00000000 00000000 00000000 00000000 00000000 
dump 00000000 00000000 
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
dump 00000000 00000000 

DATA 0009	; 000000c8
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000
dump 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000

CODE 0009	; 00000058
	proc	; _coutTask
	; line 00000018
	break	; 0000005c
	; line 0000001a
	break	; 00000060
	load.pri 000010c8
	push.pri
	load.pri 000010cc
	pop.alt
	eq
	jzer 00000000
	;$exp
	; line 0000001b
	break	; 00000088
	const.pri 00000064
	push.pri
	;$par
	const.pri 00001198
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call setTimeout
	;$exp
	; line 0000001c
	break	; 000000b8
	const.pri 00000000
	retn
l.00000000		; 000000c8
	; line 0000001f
	break	; 000000c8
	;$lcl i fffffffc
	stack fffffffc
	const.pri 00000000
	stor.s fffffffc
	;$exp
	; line 00000020
	break	; 000000e4
l.00000001		; 000000e8
	; line 00000020
	break	; 000000e8
	load.s.pri fffffffc
	push.pri
	const.pri 00000077
	pop.alt
	xchg
	sless
	jzer 00000003
	load.pri 000010c8
	push.pri
	load.pri 000010cc
	pop.alt
	neq
	jzer 00000003
	const.pri 00000001
	jump 00000004
l.00000003
	const.pri 00000000
l.00000004
	jzer 00000002
	;$exp
	; line 00000022
	break	; 00000158
	const.pri 000010d0
	push.pri
	load.s.pri fffffffc
	bounds 000000c7
	pop.alt
	add
	align.pri 00000001
	push.pri
	const.pri 000000c8
	push.pri
	load.pri 000010c8
	bounds 00000fff
	pop.alt
	add
	align.pri 00000001
	lodb.i 00000001
	pop.alt
	strb.i 00000001
	;$exp
	; line 00000023
	break	; 000001cc
	push.pri
	const.pri 000010c8
	inc.i
	pop.pri
	load.pri 000010c8
	const.alt 00000fff
	and
	stor 000010c8
	;$exp
	; line 00000024
	break	; 00000200
	load.s.pri fffffffc
	push.pri
	addr.pri fffffffc
	inc.i
	pop.pri
	;$exp
	jump 00000001
l.00000002		; 00000228
	; line 00000026
	break	; 00000228
	const.pri 000010d0
	push.pri
	load.s.pri fffffffc
	bounds 000000c7
	pop.alt
	add
	align.pri 00000001
	push.pri
	const.pri 00000000
	pop.alt
	strb.i 00000001
	;$exp
	; line 00000027
	break	; 00000270
	const.pri 000010d0
	pushr.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000001	; print
	stack 00000008
	;$exp
	; line 00000028
	break	; 0000029c
	const.pri 00000028
	push.pri
	;$par
	const.pri 000011a4
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call setTimeout
	;$exp
	stack 00000004
	const.pri 00000000
	retn


DATA 0009	; 00001198
dump 5f636f75 74546173 6b000000 5f636f75 74546173 6b000000 

CODE 0009	; 000002e0
	proc	; __assert
	; line 0000005c
	break	; 000002e4
	;$lcl msg 00000014
	;$lcl line 00000010
	;$lcl isOk 0000000c
	; line 0000005e
	break	; 000002e8
	load.s.pri 00000014
	align.pri 00000001
	lodb.i 00000001
	not
	jzer 0000000e
	;$exp
	; line 0000005e
	break	; 00000310
	const.pri 000011b0
	push.pri
	;$par
	load.s.pri 00000010
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
l.0000000e		; 0000034c
	; line 0000005f
	break	; 0000034c
	load.s.pri 0000000c
	not
	jzer 0000000f
	;$exp
	; line 00000060
	break	; 00000364
	load.s.pri 00000014
	pushr.pri
	;$par
	load.s.pri 00000010
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 000011c8
	pushr.pri
	;$par
	const.pri 0000000c
	push.pri
	sysreq 00000002	; printf
	stack 00000010
	heap fffffffc
	;$exp
	; line 00000061
	break	; 000003c0
	const.pri 000011e4
	pushr.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000001	; print
	stack 00000008
	;$exp
	; line 00000062
	break	; 000003ec
	;$lcl i fffffffc
	stack fffffffc
	const.pri 00000001
	stor.s fffffffc
	;$exp
	; line 00000063
	break	; 00000408
l.00000010		; 0000040c
	; line 00000063
	break	; 0000040c
	load.s.pri fffffffc
	jzer 00000011
	;$exp
	; line 00000063
	break	; 00000420
	load.s.pri fffffffc
	push.pri
	addr.pri fffffffc
	inc.i
	pop.pri
	;$exp
	jump 00000010
l.00000011		; 00000448
	stack 00000004
l.0000000f		; 00000450
	const.pri 00000000
	retn


DATA 0009	; 000011b0
dump 5f5f6173 73657274 2829206d 69737369 6e67206d 73672100 0d0a0d0a 2a204153 
dump 53455254 494f4e20 40256420 25730d0a 00000000 2a2a2a2a 2a2a2a2a 2a2a2a2a 
dump 2a2a2a2a 2a2a2a2a 2a2a0a0d 3e3e3e20 5245424f 4f54494e 472e2e2e 0a0d0a0d 
dump 0a0d0000 

CODE 0009	; 0000045c
	proc	; _errToStr
	; line 00000078
	break	; 00000460
	;$lcl errcode 0000000c
	; line 0000007a
	break	; 00000464
	;$lcl s ffffffcc
	stack ffffffcc
	const.pri 00000000
	addr.alt ffffffcc
	fill 00000034
	; line 0000007b
	break	; 00000488
	load.s.pri 0000000c
	switch 00000012
l.00000014		; 0000049c
	; line 0000007c
	break	; 0000049c
	addr.pri ffffffcc
	push.pri
	const.pri 00001214
	pop.alt
	movs 0000000c
	;$exp
	jump 00000013
l.00000015		; 000004c8
	; line 0000007d
	break	; 000004c8
	addr.pri ffffffcc
	push.pri
	const.pri 00001220
	pop.alt
	movs 0000000c
	;$exp
	jump 00000013
l.00000016		; 000004f4
	; line 0000007e
	break	; 000004f4
	addr.pri ffffffcc
	push.pri
	const.pri 0000122c
	pop.alt
	movs 00000010
	;$exp
	jump 00000013
l.00000017		; 00000520
	; line 0000007f
	break	; 00000520
	addr.pri ffffffcc
	push.pri
	const.pri 0000123c
	pop.alt
	movs 00000018
	;$exp
	jump 00000013
l.00000018		; 0000054c
	; line 00000080
	break	; 0000054c
	addr.pri ffffffcc
	push.pri
	const.pri 00001254
	pop.alt
	movs 00000014
	;$exp
	jump 00000013
l.00000019		; 00000578
	; line 00000081
	break	; 00000578
	addr.pri ffffffcc
	push.pri
	const.pri 00001268
	pop.alt
	movs 0000000c
	;$exp
	jump 00000013
l.0000001a		; 000005a4
	; line 00000082
	break	; 000005a4
	addr.pri ffffffcc
	push.pri
	const.pri 00001274
	pop.alt
	movs 0000000c
	;$exp
	jump 00000013
l.0000001b		; 000005d0
	; line 00000083
	break	; 000005d0
	addr.pri ffffffcc
	push.pri
	const.pri 00001280
	pop.alt
	movs 00000010
	;$exp
	jump 00000013
l.0000001c		; 000005fc
	; line 00000084
	break	; 000005fc
	addr.pri ffffffcc
	push.pri
	const.pri 00001290
	pop.alt
	movs 0000000c
	;$exp
	jump 00000013
l.0000001d		; 00000628
	; line 00000085
	break	; 00000628
	addr.pri ffffffcc
	push.pri
	const.pri 0000129c
	pop.alt
	movs 00000014
	;$exp
	jump 00000013
l.0000001e		; 00000654
	; line 00000086
	break	; 00000654
	addr.pri ffffffcc
	push.pri
	const.pri 000012b0
	pop.alt
	movs 00000008
	;$exp
	jump 00000013
l.0000001f		; 00000680
	; line 00000087
	break	; 00000680
	addr.pri ffffffcc
	push.pri
	const.pri 000012b8
	pop.alt
	movs 0000000c
	;$exp
	jump 00000013
l.00000020		; 000006ac
	; line 00000088
	break	; 000006ac
	addr.pri ffffffcc
	push.pri
	const.pri 000012c4
	pop.alt
	movs 00000014
	;$exp
	jump 00000013
l.00000021		; 000006d8
	; line 00000089
	break	; 000006d8
	addr.pri ffffffcc
	push.pri
	const.pri 000012d8
	pop.alt
	movs 00000014
	;$exp
	jump 00000013
l.00000022		; 00000704
	; line 0000008a
	break	; 00000704
	addr.pri ffffffcc
	push.pri
	const.pri 000012ec
	pop.alt
	movs 00000018
	;$exp
	jump 00000013
l.00000023		; 00000730
	; line 0000008b
	break	; 00000730
	addr.pri ffffffcc
	push.pri
	const.pri 00001304
	pop.alt
	movs 00000014
	;$exp
	jump 00000013
l.00000024		; 0000075c
	; line 0000008c
	break	; 0000075c
	addr.pri ffffffcc
	push.pri
	const.pri 00001318
	pop.alt
	movs 00000014
	;$exp
	jump 00000013
l.00000025		; 00000788
	; line 0000008e
	break	; 00000788
	addr.pri ffffffcc
	push.pri
	const.pri 0000132c
	pop.alt
	movs 00000008
	;$exp
	jump 00000013
l.00000026		; 000007b4
	; line 00000090
	break	; 000007b4
	addr.pri ffffffcc
	push.pri
	const.pri 00001334
	pop.alt
	movs 00000014
	;$exp
	jump 00000013
l.00000027		; 000007e0
	; line 00000091
	break	; 000007e0
	addr.pri ffffffcc
	push.pri
	const.pri 00001348
	pop.alt
	movs 00000014
	;$exp
	jump 00000013
l.00000028		; 0000080c
	; line 00000092
	break	; 0000080c
	addr.pri ffffffcc
	push.pri
	const.pri 0000135c
	pop.alt
	movs 00000014
	;$exp
	jump 00000013
l.00000029		; 00000838
	; line 00000093
	break	; 00000838
	addr.pri ffffffcc
	push.pri
	const.pri 00001370
	pop.alt
	movs 00000014
	;$exp
	jump 00000013
l.0000002a		; 00000864
	; line 00000094
	break	; 00000864
	addr.pri ffffffcc
	push.pri
	const.pri 00001384
	pop.alt
	movs 00000014
	;$exp
	jump 00000013
l.0000002b		; 00000890
	; line 00000095
	break	; 00000890
	addr.pri ffffffcc
	push.pri
	const.pri 00001398
	pop.alt
	movs 00000010
	;$exp
	jump 00000013
l.0000002c		; 000008bc
	; line 00000096
	break	; 000008bc
	addr.pri ffffffcc
	push.pri
	const.pri 000013a8
	pop.alt
	movs 00000010
	;$exp
	jump 00000013
l.0000002d		; 000008e8
	; line 00000097
	break	; 000008e8
	addr.pri ffffffcc
	push.pri
	const.pri 000013b8
	pop.alt
	movs 00000010
	;$exp
	jump 00000013
l.0000002e		; 00000914
	; line 00000099
	break	; 00000914
	addr.pri ffffffcc
	push.pri
	const.pri 000013c8
	pop.alt
	movs 00000010
	;$exp
	jump 00000013
l.0000002f		; 00000940
	; line 0000009a
	break	; 00000940
	addr.pri ffffffcc
	push.pri
	const.pri 000013d8
	pop.alt
	movs 0000000c
	;$exp
	jump 00000013
l.00000030		; 0000096c
	; line 0000009b
	break	; 0000096c
	addr.pri ffffffcc
	push.pri
	const.pri 000013e4
	pop.alt
	movs 0000000c
	;$exp
	jump 00000013
l.00000031		; 00000998
	; line 0000009d
	break	; 00000998
	addr.pri ffffffcc
	push.pri
	const.pri 000013f0
	pop.alt
	movs 00000008
	;$exp
	jump 00000013
l.00000032		; 000009c4
	; line 0000009e
	break	; 000009c4
	addr.pri ffffffcc
	push.pri
	const.pri 000013f8
	pop.alt
	movs 00000010
	;$exp
	jump 00000013
l.00000033		; 000009f0
	; line 0000009f
	break	; 000009f0
	load.s.pri 0000000c
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00001408
	pushr.pri
	;$par
	const.pri 0000000d
	push.pri
	;$par
	addr.pri ffffffcc
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000003	; sprintf
	stack 00000014
	heap fffffffc
	;$exp
	jump 00000013
l.00000012		; 00000a60
	casetbl
	case 0000001f 00000033
	case fffffc7a 00000030
	case fffffc7b 0000002f
	case fffffc7c 0000002e
	case fffffd12 0000002d
	case fffffd3c 0000002c
	case fffffd3d 0000002b
	case fffffd3e 0000002a
	case fffffd3f 00000029
	case fffffd40 00000028
	case fffffd41 00000027
	case fffffd42 00000026
	case ffffff99 00000024
	case ffffff9b 00000032
	case ffffff9c 00000031
	case ffffffeb 00000025
	case fffffff0 00000023
	case fffffff1 00000022
	case fffffff2 00000021
	case fffffff3 00000020
	case fffffff4 0000001f
	case fffffff5 0000001e
	case fffffff6 0000001d
	case fffffff7 0000001c
	case fffffff8 0000001b
	case fffffff9 0000001a
	case fffffffa 00000019
	case fffffffb 00000018
	case fffffffc 00000017
	case fffffffd 00000016
	case fffffffe 00000015
	case ffffffff 00000014
l.00000013		; 00000b64
	; line 000000a1
	break	; 00000b64
	addr.pri ffffffcc
	load.s.alt 00000010
	movs 00000034
	stack 00000034
	retn


DATA 0009	; 00001214
dump 2a455f45 52524f52 00000000 2a455f50 4152414d 00000000 2a455f55 4e4b4e4f 
dump 574e5f48 444c0000 2a455f41 4c524541 44595f53 55425343 52494245 44000000 
dump 2a455f4e 4f545f53 55425343 52494245 44000000 2a455f46 4154414c 00000000 
dump 2a455f42 41445f48 444c0000 2a455f42 41445f53 54415445 00000000 2a455f50 
dump 494e5f4b 4f000000 2a455f4e 4f5f4d4f 52455f48 414e444c 45530000 2a455f44 
dump 4f4e4500 2a455f4f 56455246 4c4f5700 2a455f4e 4f545f53 5550504f 52544544 
dump 00000000 2a455f4e 4f5f4d4f 52455f54 494d4552 53000000 2a455f4e 4f5f4d4f 
dump 52455f53 454d4150 484f5245 53000000 2a455f53 45525649 43455f4c 4f434b45 
dump 44000000 2a455f46 45415455 52455f4c 4f434b45 44000000 21455f46 554c4c00 
dump 21455f4e 4d45415f 44415441 54595045 00000000 21455f4e 4d45415f 53454e54 
dump 454e4345 00000000 21455f4e 4d45415f 4c415449 54554445 00000000 21455f4e 
dump 4d45415f 4c4f4e47 49545544 45000000 21455f4e 4d45415f 414c5449 54554445 
dump 00000000 21455f4e 4d45415f 53415443 4e540000 21455f4e 4d45415f 5155414c 
dump 49545900 21455f4e 4d45415f 464f524d 41540000 2a455f55 4e4b4f57 4e5f504f 
dump 52540000 21455f54 494d454f 55540000 21455f46 52414d45 00000000 2a455f4d 
dump 454d0000 21455f53 494d5f53 54415445 00000000 2a554e4b 4f574e20 4552524f 
dump 52202325 64000000 

CODE 0009	; 00000b8c
	proc	; errchk
	; line 000000aa
	break	; 00000b90
	;$lcl xs 00000014
	;$lcl xe 00000010
	;$lcl e 0000000c
	; line 000000ab
	break	; 00000b94
	load.s.pri 0000000c
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sless
	jzer 00000034
	;$exp
	; line 000000ac
	break	; 00000bc0
	load.s.pri 0000000c
	push.pri
	load.s.pri 00000010
	pop.alt
	eq
	jzer 00000035
	;$exp
	; line 000000ad
	break	; 00000be8
	load.s.pri 00000014
	align.pri 00000001
	lodb.i 00000001
	jzer 00000036
	;$exp
	; line 000000ad
	break	; 00000c0c
	load.s.pri 00000014
	pushr.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000001	; print
	stack 00000008
	;$exp
	; line 000000ad
	break	; 00000c38
	const.pri 0000141c
	pushr.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000001	; print
	stack 00000008
	;$exp
l.00000036		; 00000c64
	jump 00000037
l.00000035		; 00000c6c
	; line 000000b1
	break	; 00000c6c
	heap 00000034
	push.alt
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _errToStr
	pop.pri
	pushr.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000001	; print
	stack 00000008
	heap ffffffcc
	;$exp
	; line 000000b1
	break	; 00000cc8
	const.pri 00001420
	pushr.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000001	; print
	stack 00000008
	;$exp
l.00000037		; 00000cf4
l.00000034		; 00000cf4
	; line 000000b3
	break	; 00000cf4
	load.s.pri 0000000c
	retn


DATA 0009	; 0000141c
dump 0a000000 0a000000 

CODE 0009	; 00000d04
	proc	; memcmp
	; line 000000c2
	break	; 00000d08
	;$lcl src2cells 00000024
	;$lcl src1cells 00000020
	;$lcl bytes 0000001c
	;$lcl src2ofs 00000018
	;$lcl src2 00000014
	;$lcl src1ofs 00000010
	;$lcl src1 0000000c
	; line 000000c3
	break	; 00000d0c
	const.pri 00001424
	push.pri
	;$par
	const.pri 000000c3
	push.pri
	;$par
	load.s.pri 00000010
	push.pri
	load.s.pri 0000001c
	pop.alt
	add
	push.pri
	load.s.pri 00000020
	const.alt 00000004
	smul
	pop.alt
	xchg
	sleq
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 000000c4
	break	; 00000d80
	const.pri 00001440
	push.pri
	;$par
	const.pri 000000c4
	push.pri
	;$par
	load.s.pri 00000018
	push.pri
	load.s.pri 0000001c
	pop.alt
	add
	push.pri
	load.s.pri 00000024
	const.alt 00000004
	smul
	pop.alt
	xchg
	sleq
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 000000c5
	break	; 00000df4
	;$lcl i fffffffc
	stack fffffffc
	const.pri 00000000
	stor.s fffffffc
	;$exp
	jump 00000041
l.0000003f		; 00000e18
	; line 000000c5
	break	; 00000e18
	load.s.pri fffffffc
	push.pri
	addr.pri fffffffc
	inc.i
	pop.pri
	;$exp
l.00000041
	load.s.pri fffffffc
	push.pri
	load.s.pri 0000001c
	pop.alt
	xchg
	sless
	jzer 00000040
	;$exp
	; line 000000c6
	break	; 00000e60
	load.s.pri 0000000c
	push.pri
	load.s.pri 00000010
	push.pri
	load.s.pri fffffffc
	pop.alt
	add
	pop.alt
	add
	align.pri 00000001
	lodb.i 00000001
	push.pri
	load.s.pri 00000014
	push.pri
	load.s.pri 00000018
	push.pri
	load.s.pri fffffffc
	pop.alt
	add
	pop.alt
	add
	align.pri 00000001
	lodb.i 00000001
	pop.alt
	neq
	jzer 00000042
	;$exp
	; line 000000c6
	break	; 00000ef8
	const.pri 00000001
	stack 00000004
	retn
l.00000042		; 00000f10
	jump 0000003f
l.00000040		; 00000f18
	stack 00000004
	; line 000000c8
	break	; 00000f20
	const.pri 00000000
	retn


DATA 0009	; 00001424
dump 6d656d63 6d703a73 72633120 6f757420 6f662072 616e6765 00000000 6d656d63 
dump 6d703a73 72633220 6f757420 6f662072 616e6765 00000000 

CODE 0009	; 00000f30
	proc	; _funcidx
	; line 000000de
	break	; 00000f34
	;$lcl cb 0000000c
	; line 000000e0
	break	; 00000f38
	;$lcl f fffffffc
	stack fffffffc
	load.s.pri 0000000c
	pushr.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000004	; funcidx
	stack 00000008
	stor.s fffffffc
	;$exp
	; line 000000e2
	break	; 00000f74
	load.s.pri fffffffc
	const.alt ffffffff
	eq
	jzer 00000048
	;$exp
	; line 000000e2
	break	; 00000f94
	const.pri 0000145c
	load.s.pri 0000000c
	pushr.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000002	; printf
	stack 00000008
	;$exp
l.00000048		; 00000fc8
	; line 000000e3
	break	; 00000fc8
	load.s.pri fffffffc
	stack 00000004
	retn


DATA 0009	; 0000145c
dump 2a756e6b 6f776e20 63616c6c 6261636b 203c2573 3e0a0000 

CODE 0009	; 00000fe0
	proc	; setTimeout
	; line 000000f2
	break	; 00000fe4
	;$lcl ms 00000010
	;$lcl cb 0000000c
	; line 000000f4
	break	; 00000fe8
	;$lcl f fffffffc
	stack fffffffc
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _clearTimeoutInterval
	stor.s fffffffc
	;$exp
	; line 000000f6
	break	; 0000101c
	const.pri 00001474
	push.pri
	;$par
	const.pri ffffffff
	push.pri
	;$par
	load.s.pri 00000010
	push.pri
	const.pri 00000001
	pop.alt
	xchg
	sless
	jzer 00000049
	const.pri 00000001
	jump 0000004a
l.00000049
	load.s.pri 00000010
l.0000004a
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	load.s.pri fffffffc
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	sysreq 00000005	; rM2M_TimerAddExt
	stack 00000010
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call errchk
	;$exp
	stack 00000004
	const.pri 00000000
	retn


DATA 0009	; 00001474
dump 73657454 696d656f 75743a20 6f757420 6f662074 696d6572 73000000 

CODE 0009	; 000010dc
	proc	; setInterval
	; line 000000fd
	break	; 000010e0
	;$lcl ms 00000010
	;$lcl cb 0000000c
	; line 000000fe
	break	; 000010e4
	;$lcl f fffffffc
	stack fffffffc
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _clearTimeoutInterval
	stor.s fffffffc
	;$exp
	; line 00000100
	break	; 00001118
	load.s.pri 00000010
	const.alt 000003e8
	eq
	jzer 0000004b
	;$exp
	; line 00000100
	break	; 00001138
	const.pri 00001490
	push.pri
	;$par
	const.pri ffffffff
	push.pri
	;$par
	load.s.pri fffffffc
	push.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000006	; rM2M_TimerAdd
	stack 00000008
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call errchk
	;$exp
	jump 0000004c
l.0000004b		; 0000119c
	; line 00000101
	break	; 0000119c
	const.pri 000014ac
	push.pri
	;$par
	const.pri ffffffff
	push.pri
	;$par
	load.s.pri 00000010
	push.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	load.s.pri fffffffc
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	sysreq 00000005	; rM2M_TimerAddExt
	stack 00000010
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call errchk
	;$exp
l.0000004c		; 00001210
	stack 00000004
	const.pri 00000000
	retn


DATA 0009	; 00001490
dump 73657449 6e746572 76616c3a 206f7574 206f6620 74696d65 72730000 73657449 
dump 6e746572 76616c3a 206f7574 206f6620 74696d65 72730000 

CODE 0009	; 00001224
	proc	; _clearTimeoutInterval
	; line 00000107
	break	; 00001228
	;$lcl cb 0000000c
	; line 00000108
	break	; 0000122c
	;$lcl f fffffffc
	stack fffffffc
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _funcidx
	stor.s fffffffc
	;$exp
	; line 00000109
	break	; 00001260
	load.s.pri fffffffc
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sless
	jzer 0000004d
	;$exp
	; line 00000109
	break	; 0000128c
	load.s.pri fffffffc
	stack 00000004
	retn
l.0000004d		; 000012a4
	; line 0000010a
	break	; 000012a4
	const.pri 000014c8
	push.pri
	;$par
	const.pri ffffffff
	push.pri
	;$par
	load.s.pri fffffffc
	push.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000007	; rM2M_TimerRemove
	stack 00000008
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call errchk
	;$exp
	; line 0000010b
	break	; 00001300
	const.pri 000014c8
	push.pri
	;$par
	const.pri ffffffff
	push.pri
	;$par
	load.s.pri fffffffc
	push.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000008	; rM2M_TimerRemoveExt
	stack 00000008
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call errchk
	;$exp
	; line 0000010c
	break	; 0000135c
	load.s.pri fffffffc
	stack 00000004
	retn


DATA 0009	; 000014c8
dump 00000000 

CODE 000b	; 00001374
	proc	; setSysLed
	; line 00000022
	break	; 00001378
	;$lcl count 00000014
	;$lcl mode 00000010
	;$lcl rgb 0000000c
	; line 00000023
	break	; 0000137c
	; line 00000025
	break	; 00001380
	load.s.pri 0000000c
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sgeq
	jzer 00000050
	load.pri 000014cc
	not
	jzer 00000050
	const.pri 00000001
	jump 00000051
l.00000050
	const.pri 00000000
l.00000051
	jzer 0000004f
	;$exp
	; line 00000026
	break	; 000013e0
	const.pri 00000001
	stor 000014cc
	;$exp
	; line 00000027
	break	; 000013f4
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000009	; Led_Init
	stack 00000008
	;$exp
l.0000004f		; 00001420
	; line 00000029
	break	; 00001420
	load.s.pri 0000000c
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sgrtr
	jzer 00000052
	;$exp
	; line 0000002a
	break	; 0000144c
	load.s.pri 00000010
	switch 00000053
l.00000055		; 00001460
	; line 0000002b
	break	; 00001460
	load.s.pri 0000000c
	push.pri
	;$par
	load.s.pri 00000014
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 0000000a	; Led_Flicker
	stack 0000000c
	;$exp
	jump 00000054
l.00000056		; 000014a0
	; line 0000002c
	break	; 000014a0
	load.s.pri 0000000c
	push.pri
	;$par
	load.s.pri 00000014
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 0000000b	; Led_Blink
	stack 0000000c
	;$exp
	jump 00000054
l.00000057		; 000014e0
	; line 0000002d
	break	; 000014e0
	load.s.pri 0000000c
	push.pri
	;$par
	load.s.pri 00000014
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 0000000c	; Led_Flash
	stack 0000000c
	;$exp
	jump 00000054
l.00000058		; 00001520
	; line 0000002e
	break	; 00001520
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 0000000d	; Led_On
	stack 00000008
	;$exp
	jump 00000054
l.00000053		; 00001554
	casetbl
	case 00000003 00000058
	case 00000001 00000056
	case 00000002 00000055
	case 00000003 00000057
l.00000054		; 00001578
	jump 00000059
l.00000052		; 00001580
	; line 00000031
	break	; 00001580
	load.s.pri 0000000c
	const.alt 00000000
	eq
	jzer 0000005a
	;$exp
	; line 00000031
	break	; 000015a0
	const.pri 00000000
	push.pri
	sysreq 0000000e	; Led_Off
	stack 00000004
	;$exp
	jump 0000005b
l.0000005a		; 000015c8
	; line 00000032
	break	; 000015c8
	load.s.pri 0000000c
	const.alt ffffffff
	eq
	jzer 0000005c
	;$exp
	; line 00000033
	break	; 000015e8
	const.pri 00000000
	stor 000014cc
	;$exp
	; line 00000034
	break	; 000015fc
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000009	; Led_Init
	stack 00000008
	;$exp
	jump 0000005d
l.0000005c		; 00001630
	; line 00000036
	break	; 00001630
	const.pri 00000000
	push.pri
	sysreq 0000000f	; Led_Close
	stack 00000004
	;$exp
l.0000005d		; 00001650
l.0000005b		; 00001650
l.00000059		; 00001650
	const.pri 00000000
	retn


DATA 000b	; 000014cc
dump 00000000 
dump 00000000
dump 00000000
dump 00000000
dump ffffffff 

CODE 000b	; 0000165c
	proc	; lightTask
	; line 0000003f
	break	; 00001660
	; line 00000041
	break	; 00001664
	; line 00000042
	break	; 00001668
	; line 00000043
	break	; 0000166c
	; line 00000044
	break	; 00001670
	load.pri 000014e8
	const.alt 00000040
	add
	const.alt 000000ff
	and
	stor 000014e8
	;$exp
	; line 00000047
	break	; 0000169c
	load.pri 000014e8
	const.alt 00000020
	eq
	jzer 0000005e
	;$exp
	; line 00000047
	break	; 000016bc
	load.pri 000014e0
	push.pri
	const.pri 000014e0
	inc.i
	pop.pri
	;$exp
l.0000005e		; 000016dc
	; line 00000048
	break	; 000016dc
	load.pri 000014e0
	push.pri
	const.pri 00000001
	pop.alt
	xchg
	sgrtr
	jzer 0000005f
	;$exp
	; line 00000049
	break	; 00001708
	const.pri 00000000
	stor 000014e0
	;$exp
	; line 0000004a
	break	; 0000171c
	load.pri 000014e4
	push.pri
	const.pri 00000001
	pop.alt
	xchg
	shl
	stor 000014e4
	;$exp
	; line 0000004b
	break	; 00001748
	load.pri 000014e4
	not
	jzer 00000060
	;$exp
	; line 0000004b
	break	; 00001760
	const.pri 00000001
	stor 000014e4
	;$exp
l.00000060		; 00001774
	; line 0000004c
	break	; 00001774
	load.pri 000014dc
	push.pri
	load.pri 000014e4
	pop.alt
	and
	not
	jzer 00000061
	;$exp
	; line 0000004d
	break	; 000017a0
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000010	; rM2M_GpioSet
	stack 0000000c
	;$exp
	; line 0000004e
	break	; 000017d8
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000003
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000010	; rM2M_GpioSet
	stack 0000000c
	;$exp
	; line 0000004f
	break	; 00001810
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000004
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000010	; rM2M_GpioSet
	stack 0000000c
	;$exp
l.00000061		; 00001848
l.0000005f		; 00001848
	; line 00000052
	break	; 00001848
	load.pri 000014dc
	push.pri
	load.pri 000014e4
	pop.alt
	and
	jzer 00000062
	;$exp
	; line 00000053
	break	; 00001870
	load.pri 000014d0
	push.pri
	load.pri 000014e8
	pop.alt
	xchg
	sgrtr
	jzer 00000063
	const.pri 00000001
	jump 00000064
l.00000063
	const.pri 00000000
l.00000064
	push.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000010	; rM2M_GpioSet
	stack 0000000c
	;$exp
	; line 00000054
	break	; 000018e0
	load.pri 000014d4
	push.pri
	load.pri 000014e8
	pop.alt
	xchg
	sgrtr
	jzer 00000065
	const.pri 00000001
	jump 00000066
l.00000065
	const.pri 00000000
l.00000066
	push.pri
	;$par
	const.pri 00000003
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000010	; rM2M_GpioSet
	stack 0000000c
	;$exp
	; line 00000055
	break	; 00001950
	load.pri 000014d8
	push.pri
	load.pri 000014e8
	pop.alt
	xchg
	sgrtr
	jzer 00000067
	const.pri 00000001
	jump 00000068
l.00000067
	const.pri 00000000
l.00000068
	push.pri
	;$par
	const.pri 00000004
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000010	; rM2M_GpioSet
	stack 0000000c
	;$exp
l.00000062		; 000019c0
	const.pri 00000000
	retn


DATA 000b	; 000014e0
dump 00000000 00000001 00000020 

CODE 000b	; 000019cc
	proc	; setLight
	; line 00000059
	break	; 000019d0
	;$lcl mode 00000010
	;$lcl rgb 0000000c
	; line 0000005a
	break	; 000019d4
	; line 00000061
	break	; 000019d8
	;$lcl pattern fffffffc
	stack fffffffc
	const.pri 00000000
	stor.s fffffffc
	;$exp
	; line 00000062
	break	; 000019f4
	load.s.pri 00000010
	switch 00000069
l.0000006b		; 00001a08
	; line 00000063
	break	; 00001a08
	const.pri 46bb1ae9
	stor.s fffffffc
	;$exp
	jump 0000006a
l.0000006c		; 00001a24
	; line 00000064
	break	; 00001a24
	const.pri ffff0000
	stor.s fffffffc
	;$exp
	jump 0000006a
l.0000006d		; 00001a40
	; line 00000065
	break	; 00001a40
	const.pri 30000000
	stor.s fffffffc
	;$exp
	jump 0000006a
l.0000006e		; 00001a5c
	; line 00000066
	break	; 00001a5c
	const.pri ffffffff
	stor.s fffffffc
	;$exp
	jump 0000006a
l.00000069		; 00001a78
	casetbl
	case 00000003 0000006e
	case 00000001 0000006c
	case 00000002 0000006b
	case 00000003 0000006d
l.0000006a		; 00001a9c
	; line 00000068
	break	; 00001a9c
	; line 00000069
	break	; 00001aa0
	; line 0000006a
	break	; 00001aa4
	load.pri 000014f0
	not
	jzer 0000006f
	;$exp
	; line 0000006b
	break	; 00001abc
	const.pri 00000001
	stor 000014f0
	;$exp
	; line 0000006c
	break	; 00001ad0
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000010	; rM2M_GpioSet
	stack 0000000c
	;$exp
	; line 0000006d
	break	; 00001b08
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000003
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000010	; rM2M_GpioSet
	stack 0000000c
	;$exp
	; line 0000006e
	break	; 00001b40
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000004
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000010	; rM2M_GpioSet
	stack 0000000c
	;$exp
	; line 0000006f
	break	; 00001b78
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000011	; rM2M_GpioDir
	stack 0000000c
	;$exp
	; line 00000070
	break	; 00001bb0
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000003
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000011	; rM2M_GpioDir
	stack 0000000c
	;$exp
	; line 00000071
	break	; 00001be8
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000004
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000011	; rM2M_GpioDir
	stack 0000000c
	;$exp
l.0000006f		; 00001c20
	; line 00000074
	break	; 00001c20
	; line 00000075
	break	; 00001c24
	load.s.pri 0000000c
	push.pri
	load.pri 000014f4
	pop.alt
	eq
	jzer 00000071
	load.s.pri fffffffc
	push.pri
	load.pri 000014dc
	pop.alt
	eq
	jzer 00000071
	const.pri 00000001
	jump 00000072
l.00000071
	const.pri 00000000
l.00000072
	jzer 00000070
	;$exp
	; line 00000075
	break	; 00001c90
	const.pri 00000000
	stack 00000004
	retn
l.00000070		; 00001ca8
	; line 00000077
	break	; 00001ca8
	load.s.pri 0000000c
	push.pri
	const.pri 00000010
	pop.alt
	xchg
	sshr
	const.alt 000000ff
	and
	stor 000014d0
	;$exp
	; line 00000078
	break	; 00001ce0
	load.s.pri 0000000c
	push.pri
	const.pri 00000008
	pop.alt
	xchg
	sshr
	const.alt 000000ff
	and
	stor 000014d4
	;$exp
	; line 00000079
	break	; 00001d18
	load.s.pri 0000000c
	const.alt 000000ff
	and
	stor 000014d8
	;$exp
	; line 0000007a
	break	; 00001d38
	load.s.pri fffffffc
	stor 000014dc
	;$exp
	; line 0000007d
	break	; 00001d4c
	;$lcl on fffffff8
	stack fffffffc
	load.s.pri 0000000c
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sgrtr
	stor.s fffffff8
	;$exp
	; line 0000007e
	break	; 00001d80
	load.pri 000014ec
	not
	jzer 00000074
	load.s.pri fffffff8
	jzer 00000074
	const.pri 00000001
	jump 00000075
l.00000074
	const.pri 00000000
l.00000075
	jzer 00000073
	;$exp
	; line 0000007e
	break	; 00001dc8
	const.pri 00000003
	push.pri
	;$par
	const.pri 000014f8
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call setInterval
	;$exp
l.00000073		; 00001df8
	; line 0000007f
	break	; 00001df8
	load.pri 000014ec
	jzer 00000077
	load.s.pri fffffff8
	not
	jzer 00000077
	const.pri 00000001
	jump 00000078
l.00000077
	const.pri 00000000
l.00000078
	jzer 00000076
	;$exp
	; line 00000080
	break	; 00001e40
	const.pri 00001504
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _clearTimeoutInterval
	;$exp
	; line 00000081
	break	; 00001e64
	const.pri 00000000
	push.pri
	call lightTask
	;$exp
l.00000076		; 00001e7c
	; line 00000083
	break	; 00001e7c
	load.s.pri fffffff8
	stor 000014ec
	;$exp
	stack 00000008
	const.pri 00000000
	retn


DATA 000b	; 000014ec
dump 00000000 00000000 00000000 6c696768 74546173 6b000000 6c696768 74546173 
dump 6b000000 

CODE 000b	; 00001ea4
	proc	; buttonTask
	; line 0000008e
	break	; 00001ea8
	; line 0000008f
	break	; 00001eac
	; line 00000090
	break	; 00001eb0
	load.pri 00001510
	not
	jzer 00000079
	;$exp
	; line 00000091
	break	; 00001ec8
	const.pri 00000001
	stor 00001510
	;$exp
	; line 00000092
	break	; 00001edc
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000005
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000011	; rM2M_GpioDir
	stack 0000000c
	;$exp
l.00000079		; 00001f14
	; line 00000094
	break	; 00001f14
	; line 00000095
	break	; 00001f18
	; line 00000096
	break	; 00001f1c
	;$lcl pressed fffffffc
	stack fffffffc
	const.pri 00000005
	push.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000012	; rM2M_GpioGet
	stack 00000008
	not
	stor.s fffffffc
	;$exp
	; line 00000097
	break	; 00001f5c
	load.pri 00001514
	push.pri
	load.s.pri fffffffc
	pop.alt
	neq
	jzer 0000007a
	;$exp
	; line 00000098
	break	; 00001f84
	load.s.pri fffffffc
	stor 00001514
	;$exp
	; line 00000099
	break	; 00001f98
	load.pri 00001518
	push.pri
	;$par
	load.s.pri fffffffc
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call onButton
	;$exp
	; line 0000009a
	break	; 00001fc8
	const.pri 00000000
	stor 00001518
	;$exp
l.0000007a		; 00001fdc
	; line 0000009c
	break	; 00001fdc
	load.pri 00001518
	push.pri
	const.pri 00001518
	inc.i
	pop.pri
	;$exp
	stack 00000004
	const.pri 00000000
	retn


DATA 000b	; 00001510
dump 00000000 00000000 00000000 

CODE 000b	; 00002010
	proc	; ioInit
	; line 000000a0
	break	; 00002014
	; line 000000a1
	break	; 00002018
	const.pri 00000064
	push.pri
	;$par
	const.pri 0000151c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call setInterval
	;$exp
	const.pri 00000000
	retn


DATA 000b	; 0000151c
dump 62757474 6f6e5461 736b0000 

DATA 000c	; 00001528
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000
dump 00000000 
dump 00000000
dump 00000000
dump 00000000
dump 00000000 

CODE 000c	; 00002054
	proc	; _dde_buf_lock
	; line 00000017
	break	; 00002058
	;$lcl cid 0000000c
	; line 00000019
	break	; 0000205c
	const.pri 000015a4
	push.pri
	;$par
	const.pri 00000019
	push.pri
	;$par
	const.pri 00000000
	push.pri
	call _dde_buf_islocked
	not
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 0000001b
	break	; 000020a8
	;$lcl isize fffffffc
	stack fffffffc
	load.s.pri 0000000c
	const.alt 00000020
	and
	jzer 0000007b
	const.pri 00000000
	push.pri
	load.s.pri 0000000c
	const.alt ffffffdf
	and
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	jump 0000007c
l.0000007b
	const.pri 00000078
	push.pri
	load.s.pri 0000000c
	const.alt ffffffbf
	and
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
l.0000007c
	stor.s fffffffc
	;$exp
	; line 0000001f
	break	; 00002158
	const.pri 000015b4
	push.pri
	;$par
	const.pri 0000001f
	push.pri
	;$par
	load.s.pri fffffffc
	push.pri
	const.pri 00000068
	pop.alt
	xchg
	sleq
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 00000020
	break	; 000021ac
	const.pri 000015c4
	push.pri
	;$par
	const.pri 00000020
	push.pri
	;$par
	load.s.pri fffffffc
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sgrtr
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 00000022
	break	; 00002200
	load.s.pri fffffffc
	stor 0000159c
	;$exp
	; line 00000023
	break	; 00002214
	const.pri 00000000
	stor 00001594
	;$exp
	; line 00000024
	break	; 00002228
	load.s.pri 0000000c
	stor 00001590
	;$exp
	; line 00000025
	break	; 0000223c
	load.s.pri fffffffc
	stack 00000004
	retn


DATA 000c	; 000015a4
dump 5f646465 5f627566 5f6c6f63 6b2e3100 5f646465 5f627566 5f6c6f63 6b2e3200 
dump 5f646465 5f627566 5f6c6f63 6b2e3300 

CODE 000c	; 00002254
	proc	; _dde_buf_unlock
	; line 00000028
	break	; 00002258
	; line 00000029
	break	; 0000225c
	const.pri 000015d4
	push.pri
	;$par
	const.pri 00000029
	push.pri
	;$par
	const.pri 00000000
	push.pri
	call _dde_buf_islocked
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 0000002a
	break	; 000022a4
	const.pri 00000000
	stor 00001590
	;$exp
	const.pri 00000000
	retn


DATA 000c	; 000015d4
dump 5f646465 5f627566 5f756e6c 6f636b00 

CODE 000c	; 000022c4
	proc	; _dde_buf_islocked
	; line 0000002d
	break	; 000022c8
	; line 0000002e
	break	; 000022cc
	load.pri 00001590
	const.alt 00000000
	neq
	retn

	proc	; dde_ru8
	; line 00000036
	break	; 000022ec
	;$lcl def 00000010
	;$lcl val 0000000c
	; line 00000037
	break	; 000022f0
	load.pri 00001594
	const.alt 00000001
	add
	push.pri
	load.pri 0000159c
	pop.alt
	xchg
	sleq
	jzer 0000007d
	;$exp
	; line 00000038
	break	; 00002328
	const.pri 00001528
	push.pri
	load.pri 00001594
	bounds 00000067
	pop.alt
	add
	align.pri 00000001
	lodb.i 00000001
	sref.s 0000000c
	;$exp
	jump 0000007e
l.0000007d		; 00002370
	; line 0000003a
	break	; 00002370
	load.s.pri 00000010
	sref.s 0000000c
	;$exp
l.0000007e		; 00002384
	; line 0000003b
	break	; 00002384
	load.pri 00001594
	const.alt 00000001
	add
	stor 00001594
	;$exp
	const.pri 00000000
	retn

	proc	; dde_rs8
	; line 0000003e
	break	; 000023b4
	;$lcl def 00000010
	;$lcl val 0000000c
	; line 0000003f
	break	; 000023b8
	load.pri 00001594
	const.alt 00000001
	add
	push.pri
	load.pri 0000159c
	pop.alt
	xchg
	sleq
	jzer 0000007f
	;$exp
	; line 00000040
	break	; 000023f0
	const.pri 00001528
	push.pri
	load.pri 00001594
	bounds 00000067
	pop.alt
	add
	align.pri 00000001
	lodb.i 00000001
	sref.s 0000000c
	;$exp
	; line 00000041
	break	; 00002430
	lref.s.pri 0000000c
	push.pri
	const.pri 0000007f
	pop.alt
	xchg
	sgrtr
	jzer 00000080
	;$exp
	; line 00000041
	break	; 0000245c
	lref.s.pri 0000000c
	push.pri
	const.pri 00000100
	pop.alt
	sub
	sref.s 0000000c
	;$exp
l.00000080		; 00002484
	jump 00000081
l.0000007f		; 0000248c
	; line 00000043
	break	; 0000248c
	load.s.pri 00000010
	sref.s 0000000c
	;$exp
l.00000081		; 000024a0
	; line 00000044
	break	; 000024a0
	load.pri 00001594
	const.alt 00000001
	add
	stor 00001594
	;$exp
	const.pri 00000000
	retn

	proc	; dde_ru16
	; line 00000047
	break	; 000024d0
	;$lcl def 00000010
	;$lcl val 0000000c
	; line 00000048
	break	; 000024d4
	load.pri 00001594
	const.alt 00000002
	add
	push.pri
	load.pri 0000159c
	pop.alt
	xchg
	sleq
	jzer 00000082
	;$exp
	; line 00000049
	break	; 0000250c
	const.pri 00001528
	push.pri
	load.pri 00001594
	bounds 00000067
	pop.alt
	add
	align.pri 00000001
	lodb.i 00000001
	const.alt 00000100
	smul
	push.pri
	const.pri 00001528
	push.pri
	load.pri 00001594
	const.alt 00000001
	add
	bounds 00000067
	pop.alt
	add
	align.pri 00000001
	lodb.i 00000001
	pop.alt
	add
	sref.s 0000000c
	;$exp
	jump 00000083
l.00000082		; 000025ac
	; line 0000004b
	break	; 000025ac
	load.s.pri 00000010
	sref.s 0000000c
	;$exp
l.00000083		; 000025c0
	; line 0000004c
	break	; 000025c0
	load.pri 00001594
	const.alt 00000002
	add
	stor 00001594
	;$exp
	const.pri 00000000
	retn

	proc	; dde_rs32
	; line 00000057
	break	; 000025f0
	;$lcl def 00000010
	;$lcl val 0000000c
	; line 00000058
	break	; 000025f4
	load.pri 00001594
	const.alt 00000004
	add
	push.pri
	load.pri 0000159c
	pop.alt
	xchg
	sleq
	jzer 00000086
	;$exp
	; line 00000059
	break	; 0000262c
	const.pri 000014c8
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000004
	push.pri
	;$par
	load.s.pri 0000000c
	pushr.pri
	;$par
	load.pri 00001594
	push.pri
	;$par
	const.pri 00001528
	pushr.pri
	;$par
	const.pri 00000014
	push.pri
	sysreq 00000013	; rM2M_GetPacked
	stack 00000018
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call errchk
	;$exp
	jump 00000087
l.00000086		; 000026c0
	; line 0000005b
	break	; 000026c0
	load.s.pri 00000010
	sref.s 0000000c
	;$exp
l.00000087		; 000026d4
	; line 0000005c
	break	; 000026d4
	load.pri 00001594
	const.alt 00000004
	add
	stor 00001594
	;$exp
	const.pri 00000000
	retn

	proc	; dde_rf32
	; line 00000065
	break	; 00002704
	;$lcl def 00000010
	;$lcl val 0000000c
	; line 00000066
	break	; 00002708
	load.pri 00001594
	const.alt 00000004
	add
	push.pri
	load.pri 0000159c
	pop.alt
	xchg
	sleq
	jzer 00000088
	;$exp
	; line 00000067
	break	; 00002740
	const.pri 000014c8
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000004
	push.pri
	;$par
	load.s.pri 0000000c
	pushr.pri
	;$par
	load.pri 00001594
	push.pri
	;$par
	const.pri 00001528
	pushr.pri
	;$par
	const.pri 00000014
	push.pri
	sysreq 00000013	; rM2M_GetPacked
	stack 00000018
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call errchk
	;$exp
	jump 00000089
l.00000088		; 000027d4
	; line 00000069
	break	; 000027d4
	load.s.pri 00000010
	sref.s 0000000c
	;$exp
l.00000089		; 000027e8
	; line 0000006a
	break	; 000027e8
	load.pri 00001594
	const.alt 00000004
	add
	stor 00001594
	;$exp
	const.pri 00000000
	retn

	proc	; dde_wsu8_
	; line 0000008d
	break	; 00002818
	;$lcl ival 0000000c
	; line 0000008f
	break	; 0000281c
	const.pri 000015e4
	push.pri
	;$par
	const.pri 0000008f
	push.pri
	;$par
	load.pri 00001594
	const.alt 00000001
	add
	push.pri
	load.pri 0000159c
	pop.alt
	xchg
	sleq
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 00000090
	break	; 0000287c
	const.pri 00001528
	push.pri
	load.pri 00001594
	bounds 00000067
	pop.alt
	add
	align.pri 00000001
	push.pri
	load.s.pri 0000000c
	pop.alt
	strb.i 00000001
	;$exp
	; line 00000091
	break	; 000028c4
	load.pri 00001594
	const.alt 00000001
	add
	stor 00001594
	;$exp
	; line 00000092
	break	; 000028e4
	load.pri 00001594
	stor 00001598
	;$exp
	const.pri 00000000
	retn


DATA 000c	; 000015e4
dump 726d775f 73753800 

CODE 000c	; 00002904
	proc	; dde_wsu16_
	; line 00000097
	break	; 00002908
	;$lcl ival 0000000c
	; line 00000099
	break	; 0000290c
	const.pri 000015ec
	push.pri
	;$par
	const.pri 00000099
	push.pri
	;$par
	load.pri 00001594
	const.alt 00000002
	add
	push.pri
	load.pri 0000159c
	pop.alt
	xchg
	sleq
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 0000009a
	break	; 0000296c
	;$lcl i fffffffc
	stack fffffffc
	load.s.pri 0000000c
	stor.s fffffffc
	;$exp
	; line 0000009b
	break	; 00002988
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000002
	push.pri
	;$par
	addr.pri fffffffc
	pushr.pri
	;$par
	load.pri 00001594
	push.pri
	;$par
	const.pri 00001528
	pushr.pri
	;$par
	const.pri 00000014
	push.pri
	sysreq 00000014	; rM2M_SetPacked
	stack 00000018
	;$exp
	; line 0000009c
	break	; 000029e4
	load.pri 00001594
	const.alt 00000002
	add
	stor 00001594
	;$exp
	; line 0000009d
	break	; 00002a04
	load.pri 00001594
	stor 00001598
	;$exp
	stack 00000004
	const.pri 00000000
	retn


DATA 000c	; 000015ec
dump 726d775f 73753136 00000000 

CODE 000c	; 00002a2c
	proc	; dde_wsu32_
	; line 000000a4
	break	; 00002a30
	;$lcl ival 0000000c
	; line 000000a6
	break	; 00002a34
	const.pri 000015f8
	push.pri
	;$par
	const.pri 000000a6
	push.pri
	;$par
	load.pri 00001594
	const.alt 00000004
	add
	push.pri
	load.pri 0000159c
	pop.alt
	xchg
	sleq
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 000000a7
	break	; 00002a94
	;$lcl i fffffffc
	stack fffffffc
	load.s.pri 0000000c
	stor.s fffffffc
	;$exp
	; line 000000a8
	break	; 00002ab0
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000004
	push.pri
	;$par
	addr.pri fffffffc
	pushr.pri
	;$par
	load.pri 00001594
	push.pri
	;$par
	const.pri 00001528
	pushr.pri
	;$par
	const.pri 00000014
	push.pri
	sysreq 00000014	; rM2M_SetPacked
	stack 00000018
	;$exp
	; line 000000a9
	break	; 00002b0c
	load.pri 00001594
	const.alt 00000004
	add
	stor 00001594
	;$exp
	; line 000000aa
	break	; 00002b2c
	load.pri 00001594
	stor 00001598
	;$exp
	stack 00000004
	const.pri 00000000
	retn


DATA 000c	; 000015f8
dump 726d775f 73753332 00000000 

CODE 000c	; 00002b54
	proc	; dde_wastr
	; line 000000bb
	break	; 00002b58
	;$lcl ilen_max 00000010
	;$lcl src 0000000c
	; line 000000bd
	break	; 00002b5c
	;$lcl ilen fffffffc
	stack fffffffc
	const.pri 00000000
	stor.s fffffffc
	;$exp
	; line 000000be
	break	; 00002b78
	const.pri 00000000
	stor.s fffffffc
	;$exp
	jump 00000091
l.0000008f		; 00002b94
	; line 000000be
	break	; 00002b94
l.00000091
	load.s.pri fffffffc
	push.pri
	load.s.pri 00000010
	pop.alt
	xchg
	sless
	jzer 00000092
	load.s.pri 0000000c
	push.pri
	load.s.pri fffffffc
	pop.alt
	add
	align.pri 00000001
	lodb.i 00000001
	jzer 00000092
	const.pri 00000001
	jump 00000093
l.00000092
	const.pri 00000000
l.00000093
	jzer 00000090
	;$exp
	; line 000000be
	break	; 00002c14
	load.s.pri fffffffc
	push.pri
	addr.pri fffffffc
	inc.i
	pop.pri
	;$exp
	jump 0000008f
l.00000090		; 00002c3c
	; line 000000bf
	break	; 00002c3c
	load.s.pri fffffffc
	push.pri
	load.s.pri 00000010
	pop.alt
	xchg
	sless
	jzer 00000094
	;$exp
	; line 000000bf
	break	; 00002c68
	load.s.pri fffffffc
	push.pri
	addr.pri fffffffc
	inc.i
	pop.pri
	;$exp
l.00000094		; 00002c88
	; line 000000c1
	break	; 00002c88
	const.pri 00001604
	push.pri
	;$par
	const.pri 000000c1
	push.pri
	;$par
	load.pri 00001594
	push.pri
	load.s.pri fffffffc
	pop.alt
	add
	push.pri
	load.pri 0000159c
	pop.alt
	xchg
	sleq
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 000000c2
	break	; 00002cf0
	load.s.pri fffffffc
	push.pri
	;$par
	load.s.pri 0000000c
	pushr.pri
	;$par
	load.pri 00001594
	push.pri
	;$par
	const.pri 00001528
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000015	; rM2M_SetPackedB
	stack 00000014
	;$exp
	; line 000000c4
	break	; 00002d40
	load.pri 00001594
	push.pri
	load.s.pri fffffffc
	pop.alt
	add
	stor 00001598
	;$exp
	; line 000000c5
	break	; 00002d68
	load.pri 00001594
	push.pri
	load.s.pri 00000010
	pop.alt
	add
	stor 00001594
	;$exp
	stack 00000004
	const.pri 00000000
	retn


DATA 000c	; 00001604
dump 6464655f 77617374 72000000 

CODE 000c	; 00002da4
	proc	; dde_wbegin
	; line 000000c8
	break	; 00002da8
	;$lcl cid 0000000c
	; line 000000c9
	break	; 00002dac
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _dde_buf_lock
	;$exp
	; line 000000cb
	break	; 00002dd0
	load.s.pri 0000000c
	const.alt 00000040
	and
	jzer 00000095
	;$exp
	; line 000000cc
	break	; 00002df0
	const.pri 00001528
	align.pri 00000001
	push.pri
	load.s.pri 0000000c
	const.alt ffffffbf
	and
	pop.alt
	strb.i 00000001
	;$exp
	; line 000000cd
	break	; 00002e28
	load.pri 00001594
	push.pri
	const.pri 00001594
	inc.i
	pop.pri
	;$exp
l.00000095		; 00002e48
	const.pri 00000000
	retn

	proc	; dde_wend
	; line 000000d5
	break	; 00002e58
	;$lcl stamp 0000000c
	; line 000000da
	break	; 00002e5c
	const.pri 00001610
	push.pri
	;$par
	const.pri 000000da
	push.pri
	;$par
	const.pri 00000000
	push.pri
	call _dde_buf_islocked
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 000000dc
	break	; 00002ea4
	;$lcl e fffffffc
	stack fffffffc
	const.pri 00000000
	stor.s fffffffc
	;$exp
	; line 000000dd
	break	; 00002ec0
	;$lcl cid fffffff8
	stack fffffffc
	load.pri 00001590
	stor.s fffffff8
	;$exp
	; line 000000df
	break	; 00002edc
	load.s.pri fffffff8
	const.alt 00000020
	and
	jzer 00000096
	;$exp
	; line 000000e0
	break	; 00002efc
	;$lcl cx fffffff4
	stack fffffffc
	load.s.pri fffffff8
	const.alt ffffffdf
	and
	stor.s fffffff4
	;$exp
	; line 000000e1
	break	; 00002f24
	const.pri 0000161c
	push.pri
	;$par
	const.pri 000000e1
	push.pri
	;$par
	load.s.pri fffffff4
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sgeq
	jzer 00000097
	load.s.pri fffffff4
	push.pri
	const.pri 00000009
	pop.alt
	xchg
	sleq
	jzer 00000097
	const.pri 00000001
	jump 00000098
l.00000097
	const.pri 00000000
l.00000098
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 000000e3
	break	; 00002fc0
	;$lcl bytes fffffff0
	stack fffffffc
	const.pri 00000050
	push.pri
	load.s.pri fffffff4
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	jzer 00000099
	load.pri 00001598
	jump 0000009a
l.00000099
	load.pri 00001594
l.0000009a
	stor.s fffffff0
	;$exp
	; line 000000e6
	break	; 00003024
	const.pri 00001628
	push.pri
	;$par
	const.pri 000000e6
	push.pri
	;$par
	const.pri 00000050
	push.pri
	load.s.pri fffffff4
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	jnz 0000009b
	load.s.pri fffffff0
	push.pri
	load.pri 0000159c
	pop.alt
	eq
	jnz 0000009b
	const.pri 00000000
	jump 0000009c
l.0000009b
	const.pri 00000001
l.0000009c
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 000000e8
	break	; 000030cc
	;$lcl wanna_rec ffffffec
	stack fffffffc
	load.pri 000015a0
	push.pri
	load.s.pri fffffff4
	const.alt 00000001
	xchg
	shl
	pop.alt
	and
	stor.s ffffffec
	;$exp
	; line 000000e9
	break	; 0000310c
	load.s.pri ffffffec
	not
	jzer 0000009d
	;$exp
	; line 000000ea
	break	; 00003124
	;$lcl tmp fffffef0
	stack ffffff04
	const.pri 00000000
	addr.alt fffffef0
	fill 000000fc
	; line 000000eb
	break	; 00003148
	;$lcl si fffffeec
	stack fffffffc
	const.pri 00000000
	stor.s fffffeec
	;$exp
	jump 000000a0
l.0000009e		; 0000316c
	; line 000000eb
	break	; 0000316c
	load.s.pri fffffeec
	const.alt 000000fa
	add
	stor.s fffffeec
	;$exp
l.000000a0
	load.s.pri fffffeec
	push.pri
	load.pri 0000159c
	pop.alt
	xchg
	sless
	jzer 0000009f
	;$exp
	; line 000000ed
	break	; 000031b4
	;$lcl tmpcnt fffffee8
	stack fffffffc
	load.pri 0000159c
	push.pri
	load.s.pri fffffeec
	pop.alt
	sub
	push.pri
	;$par
	const.pri 000000fa
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000016	; min
	stack 0000000c
	stor.s fffffee8
	;$exp
	; line 000000ee
	break	; 00003210
	load.s.pri fffffee8
	push.pri
	;$par
	addr.pri fffffef0
	pushr.pri
	;$par
	load.s.pri fffffeec
	push.pri
	;$par
	load.s.pri fffffff8
	push.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000017	; rM2M_CfgRead
	stack 00000014
	stor.s fffffffc
	;$exp
	; line 000000ef
	break	; 00003268
	load.s.pri ffffffec
	jnz 000000a1
	load.s.pri fffffffc
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sleq
	jnz 000000a1
	const.pri 00000000
	jump 000000a2
l.000000a1
	const.pri 00000001
l.000000a2
	stor.s ffffffec
	;$exp
	; line 000000f0
	break	; 000032c4
	load.s.pri ffffffec
	jnz 000000a3
	load.s.pri fffffffc
	push.pri
	load.s.pri fffffee8
	pop.alt
	neq
	jnz 000000a3
	const.pri 00000000
	jump 000000a4
l.000000a3
	const.pri 00000001
l.000000a4
	stor.s ffffffec
	;$exp
	; line 000000f1
	break	; 0000331c
	load.s.pri ffffffec
	jnz 000000a5
	const.pri 0000001a
	push.pri
	;$par
	const.pri 0000003f
	push.pri
	;$par
	load.s.pri fffffee8
	push.pri
	;$par
	load.s.pri fffffeec
	push.pri
	;$par
	const.pri 00001528
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	addr.pri fffffef0
	push.pri
	;$par
	const.pri 0000001c
	push.pri
	call memcmp
	jnz 000000a5
	const.pri 00000000
	jump 000000a6
l.000000a5
	const.pri 00000001
l.000000a6
	stor.s ffffffec
	;$exp
	; line 000000f2
	break	; 000033c0
	load.s.pri ffffffec
	jzer 000000a7
	;$exp
	; line 000000f2
	break	; 000033d4
	stack 00000004
	jump 0000009f
l.000000a7		; 000033e8
	stack 00000004
	jump 0000009e
l.0000009f		; 000033f8
	stack 00000004
	stack 000000fc
l.0000009d		; 00003408
	; line 000000f5
	break	; 00003408
	load.s.pri ffffffec
	jzer 000000a8
	;$exp
	; line 000000f5
	break	; 0000341c
	const.pri 000014c8
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	load.s.pri fffffff0
	push.pri
	;$par
	const.pri 00001528
	pushr.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	load.s.pri fffffff4
	push.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000018	; rM2M_CfgWrite
	stack 00000014
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call errchk
	stor.s fffffffc
	;$exp
l.000000a8		; 000034a4
	stack 0000000c
	jump 000000a9
l.00000096		; 000034b4
	; line 000000f7
	break	; 000034b4
	load.s.pri fffffff8
	const.alt 00000040
	and
	jzer 000000aa
	;$exp
	; line 000000f8
	break	; 000034d4
	;$lcl hx fffffff4
	stack fffffffc
	load.s.pri fffffff8
	const.alt ffffffbf
	and
	stor.s fffffff4
	;$exp
	; line 000000f9
	break	; 000034fc
	const.pri 00001634
	push.pri
	;$par
	const.pri 000000f9
	push.pri
	;$par
	load.s.pri fffffff4
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sgeq
	jzer 000000ab
	load.s.pri fffffff4
	push.pri
	const.pri 00000009
	pop.alt
	xchg
	sleq
	jzer 000000ab
	const.pri 00000001
	jump 000000ac
l.000000ab
	const.pri 00000000
l.000000ac
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 000000fb
	break	; 00003598
	;$lcl bytes fffffff0
	stack fffffffc
	const.pri 000000a0
	push.pri
	load.s.pri fffffff4
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	jzer 000000ad
	load.pri 00001598
	jump 000000ae
l.000000ad
	load.pri 00001594
l.000000ae
	stor.s fffffff0
	;$exp
	; line 000000fe
	break	; 000035fc
	const.pri 00001640
	push.pri
	;$par
	const.pri 000000fe
	push.pri
	;$par
	const.pri 000000a0
	push.pri
	load.s.pri fffffff4
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	jnz 000000af
	load.s.pri fffffff0
	push.pri
	load.pri 0000159c
	pop.alt
	eq
	jnz 000000af
	const.pri 00000000
	jump 000000b0
l.000000af
	const.pri 00000001
l.000000b0
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 00000100
	break	; 000036a4
	load.s.pri 0000000c
	not
	jzer 000000b1
	;$exp
	; line 00000100
	break	; 000036bc
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000019	; rM2M_GetTime
	stack 00000014
	heap fffffff4
	stor.s 0000000c
	;$exp
l.000000b1		; 0000374c
	; line 00000102
	break	; 0000374c
	const.pri 0000164c
	push.pri
	;$par
	const.pri fffffffe
	push.pri
	;$par
	load.s.pri fffffff0
	push.pri
	;$par
	const.pri 00001528
	pushr.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	sysreq 0000001a	; rM2M_RecData
	stack 00000010
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call errchk
	stor.s fffffffc
	;$exp
	stack 00000008
	jump 000000b2
l.000000aa		; 000037d8
	; line 00000107
	break	; 000037d8
	const.pri 0000166c
	push.pri
	;$par
	const.pri 00000107
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
l.000000b2		; 00003814
l.000000a9		; 00003814
	; line 00000109
	break	; 00003814
	const.pri 00000000
	push.pri
	call _dde_buf_unlock
	;$exp
	; line 0000010b
	break	; 0000382c
	load.s.pri fffffffc
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sless
	jzer 000000b3
	load.s.pri fffffffc
	jump 000000b4
l.000000b3
	const.pri 00000000
l.000000b4
	stack 00000008
	retn


DATA 000c	; 00001610
dump 6464655f 77656e64 2e310000 6464655f 77656e64 2e330000 6464655f 77656e64 
dump 2e326300 6464655f 77656e64 2e340000 6464655f 77656e64 2e326800 21646465 
dump 5f77656e 642e6869 73746461 74612062 75666665 72206675 6c6c0000 6464655f 
dump 77656e64 2e350000 

CODE 000c	; 0000387c
	proc	; dde_rbegin
	; line 0000011b
	break	; 00003880
	;$lcl version 00000010
	;$lcl cid 0000000c
	; line 0000011d
	break	; 00003884
	;$lcl cx fffffffc
	stack fffffffc
	load.s.pri 0000000c
	const.alt ffffffdf
	and
	stor.s fffffffc
	;$exp
	; line 0000011e
	break	; 000038ac
	const.pri 00001678
	push.pri
	;$par
	const.pri 0000011e
	push.pri
	;$par
	load.s.pri fffffffc
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sgeq
	jzer 000000b5
	load.s.pri fffffffc
	push.pri
	const.pri 00000009
	pop.alt
	xchg
	sleq
	jzer 000000b5
	const.pri 00000001
	jump 000000b6
l.000000b5
	const.pri 00000000
l.000000b6
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 00000120
	break	; 00003948
	;$lcl size fffffff8
	stack fffffffc
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _dde_buf_lock
	stor.s fffffff8
	;$exp
	; line 00000122
	break	; 0000397c
	const.pri 00001694
	push.pri
	;$par
	const.pri 00000122
	push.pri
	;$par
	load.s.pri fffffff8
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sgrtr
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 00000124
	break	; 000039d0
	;$lcl tolerant fffffff4
	stack fffffffc
	const.pri 00000028
	push.pri
	load.s.pri fffffffc
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	not
	stor.s fffffff4
	;$exp
	; line 00000127
	break	; 00003a18
	;$lcl rlen fffffff0
	stack fffffffc
	load.s.pri fffffff8
	push.pri
	;$par
	const.pri 00001528
	pushr.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	load.s.pri fffffffc
	push.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000017	; rM2M_CfgRead
	stack 00000014
	stor.s fffffff0
	;$exp
	; line 00000129
	break	; 00003a78
	load.s.pri fffffff0
	const.alt ffffffff
	eq
	jzer 000000b7
	;$exp
	; line 00000129
	break	; 00003a98
	const.pri 00000000
	stor.s fffffff0
	;$exp
l.000000b7		; 00003aac
	; line 0000012a
	break	; 00003aac
	load.s.pri fffffff0
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sless
	jzer 000000b8
	;$exp
	; line 0000012b
	break	; 00003ad8
	const.pri 00000000
	stor 0000159c
	;$exp
	; line 0000012d
	break	; 00003aec
	load.s.pri fffffff4
	not
	jzer 000000b9
	;$exp
	; line 0000012e
	break	; 00003b04
	const.pri 00000000
	push.pri
	call _dde_buf_unlock
	;$exp
	; line 0000012f
	break	; 00003b1c
	const.pri 000014c8
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	load.s.pri fffffff0
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call errchk
	stack 00000010
	retn
l.000000b9		; 00003b64
l.000000b8		; 00003b64
	; line 00000135
	break	; 00003b64
	load.s.pri 00000010
	jzer 000000bb
	load.s.pri fffffff0
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sgrtr
	jzer 000000bb
	const.pri 00000001
	jump 000000bc
l.000000bb
	const.pri 00000000
l.000000bc
	jzer 000000ba
	;$exp
	; line 00000136
	break	; 00003bc0
	;$lcl rver ffffffec
	stack fffffffc
	const.pri 00001528
	align.pri 00000001
	lodb.i 00000001
	stor.s ffffffec
	;$exp
	; line 00000137
	break	; 00003bec
	const.pri 00000001
	stor 00001594
	;$exp
	; line 00000139
	break	; 00003c00
	load.s.pri ffffffec
	push.pri
	load.s.pri 00000010
	pop.alt
	neq
	jzer 000000bd
	;$exp
	; line 0000013d
	break	; 00003c28
	load.s.pri 00000010
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	addr.pri ffffffec
	pushr.pri
	;$par
	addr.pri fffffff8
	pushr.pri
	;$par
	addr.pri fffffff0
	pushr.pri
	;$par
	addr.pri fffffffc
	pushr.pri
	;$par
	const.pri 000016b0
	pushr.pri
	;$par
	const.pri 00000018
	push.pri
	sysreq 00000002	; printf
	stack 0000001c
	heap fffffffc
	;$exp
	; line 0000013e
	break	; 00003ca8
	load.s.pri 00000010
	push.pri
	load.s.pri ffffffec
	pop.alt
	xchg
	sless
	jzer 000000be
	;$exp
	; line 0000013e
	break	; 00003cd4
	const.pri 000016dc
	pushr.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000002	; printf
	stack 00000008
	;$exp
l.000000be		; 00003d00
	; line 0000013f
	break	; 00003d00
	const.pri 00000000
	stor.s fffffff0
	;$exp
l.000000bd		; 00003d14
	stack 00000004
l.000000ba		; 00003d1c
	; line 00000144
	break	; 00003d1c
	load.s.pri fffffff8
	push.pri
	load.s.pri fffffff0
	pop.alt
	neq
	jzer 000000bf
	;$exp
	; line 00000146
	break	; 00003d44
	load.s.pri fffffff4
	jzer 000000c0
	const.pri 0000174c
	jump 000000c1
l.000000c0
	const.pri 00001754
l.000000c1
	pushr.pri
	;$par
	addr.pri fffffff0
	pushr.pri
	;$par
	addr.pri fffffff8
	pushr.pri
	;$par
	addr.pri fffffffc
	pushr.pri
	;$par
	const.pri 00001714
	pushr.pri
	;$par
	const.pri 00000014
	push.pri
	sysreq 00000002	; printf
	stack 00000018
	;$exp
	; line 00000147
	break	; 00003dc0
	load.s.pri fffffff0
	stor 0000159c
	;$exp
	; line 00000148
	break	; 00003dd4
	load.s.pri fffffff4
	not
	jzer 000000c2
	;$exp
	; line 00000149
	break	; 00003dec
	const.pri 00000000
	push.pri
	call _dde_buf_unlock
	;$exp
	; line 0000014a
	break	; 00003e04
	const.pri ffffffff
	stack 00000010
	retn
l.000000c2		; 00003e1c
l.000000bf		; 00003e1c
	; line 0000014e
	break	; 00003e1c
	const.pri 00000000
	stack 00000010
	retn


DATA 000c	; 00001678
dump 6464655f 72626567 696e3a63 6964206d 75737420 62652030 2e2e3900 6464655f 
dump 72626567 696e3a73 697a6520 6d757374 20626520 3e300000 43256420 76657273 
dump 696f6e20 6d69736d 61746368 206c656e 3a25643e 3e256420 7665723a 25643e3e 
dump 25640a00 20207665 7273696f 6e20444f 574e4752 41444520 7761726e 696e6720 
dump 2d206c6f 67696320 75706461 74652072 65717569 7265643f 0a000000 43256420 
dump 73697a65 206d6973 6d617463 682c2065 78706563 74656420 25642062 75742067 
dump 6f742025 64206279 74657320 2e2e2e20 25730a00 69676e6f 72656400 6572726f 
dump 72210000 

CODE 000c	; 00003e34
	proc	; dde_rend
	; line 00000151
	break	; 00003e38
	; line 00000152
	break	; 00003e3c
	const.pri 00000000
	push.pri
	call _dde_buf_unlock
	;$exp
	const.pri 00000000
	retn


DATA 000d	; 0000175c
dump ffffffff 
dump 00000000
dump 00000000

CODE 000d	; 00003e60
	proc	; _onUplinkConfig
	; line 00000033
	break	; 00003e64
	;$lcl cx 0000000c
	; line 00000035
	break	; 00003e68
	const.pri 00000028
	push.pri
	load.s.pri 0000000c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	not
	jzer 000000cb
	;$exp
	; line 00000035
	break	; 00003ea8
	const.pri 00000000
	retn
l.000000cb		; 00003eb8
	; line 00000037
	break	; 00003eb8
	;$lcl is_init fffffffc
	stack fffffffc
	load.pri 00001764
	not
	not
	stor.s fffffffc
	;$exp
	; line 00000039
	break	; 00003edc
	load.pri 00001764
	const.alt ffff7fff
	and
	stor 00001764
	;$exp
	; line 0000003d
	break	; 00003efc
	load.s.pri 0000000c
	const.alt 00000020
	add
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call onUplinkReceived
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sgeq
	jzer 000000cc
	;$exp
	; line 0000003d
	break	; 00003f4c
	load.pri 00001764
	push.pri
	load.s.pri 0000000c
	const.alt 00000001
	xchg
	shl
	invert
	pop.alt
	and
	stor 00001764
	;$exp
l.000000cc		; 00003f88
	; line 0000003e
	break	; 00003f88
	load.s.pri fffffffc
	jzer 000000ce
	load.pri 00001764
	not
	jzer 000000ce
	const.pri 00000001
	jump 000000cf
l.000000ce
	const.pri 00000000
l.000000cf
	jzer 000000cd
	;$exp
	; line 0000003e
	break	; 00003fd0
	const.pri 00000000
	push.pri
	call onUplinkReady
	;$exp
l.000000cd		; 00003fe8
	stack 00000004
	const.pri 00000000
	retn


DATA 000d	; 00001768
dump ffffffff 

CODE 000d	; 00003ffc
	proc	; _on_upl_init
	; line 00000044
	break	; 00004000
	; line 00000046
	break	; 00004004
	push.pri
	const.pri 00001768
	inc.i
	pop.pri
	load.pri 00001768
	;$exp
	; line 00000049
	break	; 00004024
	load.pri 00001768
	push.pri
	const.pri 0000000a
	pop.alt
	xchg
	sless
	jzer 000000d0
	;$exp
	; line 0000004a
	break	; 00004050
	;$lcl cx fffffffc
	stack fffffffc
	load.pri 00001768
	stor.s fffffffc
	;$exp
	; line 0000004c
	break	; 0000406c
	const.pri 00000028
	push.pri
	load.s.pri fffffffc
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	jzer 000000d1
	;$exp
	; line 0000004d
	break	; 000040a8
	;$lcl err fffffff8
	stack fffffffc
	load.s.pri fffffffc
	const.alt 00000020
	add
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call onUplinkReceived
	stor.s fffffff8
	;$exp
	; line 0000004f
	break	; 000040e8
	load.s.pri fffffff8
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sless
	jzer 000000d2
	;$exp
	; line 0000004f
	break	; 00004114
	load.pri 00001764
	push.pri
	load.s.pri fffffffc
	const.alt 00000001
	xchg
	shl
	pop.alt
	or
	stor 00001764
	;$exp
l.000000d2		; 0000414c
	stack 00000004
l.000000d1		; 00004154
	; line 00000051
	break	; 00004154
	const.pri 00000064
	push.pri
	;$par
	const.pri 0000176c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call setTimeout
	;$exp
	stack 00000004
	jump 000000d3
l.000000d0		; 00004194
	; line 00000055
	break	; 00004194
	load.pri 00001764
	jzer 000000d4
	;$exp
	; line 00000057
	break	; 000041a8
	const.pri 00000002
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call uplinkMode
	;$exp
	; line 00000058
	break	; 000041cc
	const.pri 00000000
	push.pri
	call onUplinkWaiting
	;$exp
	jump 000000d5
l.000000d4		; 000041ec
	; line 0000005d
	break	; 000041ec
	const.pri 00000000
	push.pri
	call onUplinkReady
	;$exp
l.000000d5		; 00004204
l.000000d3		; 00004204
	const.pri 00000000
	retn


DATA 000d	; 0000176c
dump 5f6f6e5f 75706c5f 696e6974 00000000 

CODE 000d	; 00004210
	proc	; initUplink
	; line 0000006c
	break	; 00004214
	; line 0000006e
	break	; 00004218
	const.pri 0000177c
	push.pri
	;$par
	const.pri 0000006e
	push.pri
	;$par
	load.pri 0000175c
	const.alt ffffffff
	eq
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 00000071
	break	; 00004260
	const.pri 00000068
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00001788
	pushr.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000002	; printf
	stack 0000000c
	heap fffffffc
	;$exp
	; line 00000072
	break	; 000042b0
	const.pri 000014c8
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	const.pri 000017a8
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _funcidx
	push.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 0000001b	; rM2M_CfgOnChg
	stack 00000008
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call errchk
	;$exp
	; line 00000075
	break	; 00004324
	const.pri 00000000
	stor 00001764
	;$exp
	; line 00000079
	break	; 00004338
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000019	; rM2M_GetTime
	stack 00000014
	heap fffffff4
	push.pri
	const.pri 1c320480
	pop.alt
	xchg
	sless
	jzer 000000d6
	;$exp
	; line 0000007a
	break	; 000043e0
	load.pri 00001764
	const.alt 00008000
	or
	stor 00001764
	;$exp
l.000000d6		; 00004400
	; line 0000007e
	break	; 00004400
	const.pri ffffffff
	stor 00001768
	;$exp
	; line 0000007f
	break	; 00004414
	const.pri 00000000
	push.pri
	call _on_upl_init
	;$exp
	const.pri 00000000
	retn


DATA 000d	; 0000177c
dump 696e6974 55706c69 6e6b0000 696e6974 55706c69 6e6b2062 75666665 72202f77 
dump 20256420 62797465 730a0000 5f6f6e55 706c696e 6b436f6e 66696700 

CODE 000d	; 00004438
	proc	; flushUplink
	; line 00000088
	break	; 0000443c
	; line 0000008a
	break	; 00004440
	const.pri 000017b8
	push.pri
	;$par
	const.pri 0000008a
	push.pri
	;$par
	load.pri 0000175c
	const.alt ffffffff
	neq
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call __assert
	;$exp
	; line 0000008b
	break	; 00004488
	const.pri 000014c8
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	load.pri 00001760
	push.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 0000001c	; rM2M_TxStart
	stack 00000008
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call errchk
	;$exp
	const.pri 00000000
	retn


DATA 000d	; 000017b8
dump 75706c69 6e6b466c 75736800 

CODE 000d	; 000044f0
	proc	; uplinkMode
	; line 00000093
	break	; 000044f4
	;$lcl upl_mode 0000000c
	; line 00000094
	break	; 000044f8
	load.s.pri 0000000c
	const.alt ffffffff
	neq
	jzer 000000d7
	;$exp
	; line 00000096
	break	; 00004518
	;$lcl fl fffffffc
	stack fffffffc
	load.s.pri 0000000c
	const.alt 00001000
	and
	jzer 000000d8
	const.pri 00000000
	jump 000000d9
l.000000d8
	const.pri 00000001
l.000000d9
	stor.s fffffffc
	;$exp
	; line 00000097
	break	; 00004560
	;$lcl mo fffffff8
	stack fffffffc
	load.s.pri 0000000c
	const.alt ffffefff
	and
	stor.s fffffff8
	;$exp
	; line 00000099
	break	; 00004588
	load.pri 0000175c
	push.pri
	load.s.pri fffffff8
	pop.alt
	neq
	jnz 000000db
	load.pri 00001760
	push.pri
	load.s.pri fffffffc
	pop.alt
	neq
	jnz 000000db
	const.pri 00000000
	jump 000000dc
l.000000db
	const.pri 00000001
l.000000dc
	jzer 000000da
	;$exp
	; line 0000009a
	break	; 000045f4
	const.pri 000014c8
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	load.s.pri fffffff8
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 0000001d	; rM2M_TxSetMode
	stack 0000000c
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call errchk
	;$exp
	; line 0000009b
	break	; 0000465c
	load.s.pri fffffff8
	stor 0000175c
	;$exp
	; line 0000009c
	break	; 00004670
	load.s.pri fffffffc
	stor 00001760
	;$exp
	; line 0000009d
	break	; 00004684
	load.s.pri fffffff8
	const.alt 00000002
	eq
	jzer 000000dd
	;$exp
	; line 0000009d
	break	; 000046a4
	const.pri 00000000
	push.pri
	call flushUplink
	;$exp
l.000000dd		; 000046bc
l.000000da		; 000046bc
	stack 00000008
l.000000d7		; 000046c4
	; line 000000a0
	break	; 000046c4
	load.pri 0000175c
	retn


CODE 000e	; 000046d4
	proc	; DDE_status_write
	; line 0000001f
	break	; 000046d8
	;$lcl o 0000000c
	; line 00000020
	break	; 000046dc
	const.pri 00000020
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wbegin
	;$exp
	; line 00000021
	break	; 00004700
	load.s.pri 0000000c
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000022
	break	; 00004728
	load.s.pri 0000000c
	const.alt 00000004
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000023
	break	; 0000475c
	load.s.pri 0000000c
	const.alt 00000008
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000024
	break	; 00004790
	load.s.pri 0000000c
	const.alt 0000000c
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000025
	break	; 000047c4
	load.s.pri 0000000c
	const.alt 00000010
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000026
	break	; 000047f8
	load.s.pri 0000000c
	const.alt 00000014
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000027
	break	; 0000482c
	load.s.pri 0000000c
	const.alt 00000018
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000028
	break	; 00004860
	load.s.pri 0000000c
	const.alt 0000001c
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000029
	break	; 00004894
	load.s.pri 0000000c
	const.alt 00000020
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu16_
	;$exp
	; line 0000002a
	break	; 000048c8
	load.s.pri 0000000c
	const.alt 00000024
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 0000002b
	break	; 000048fc
	load.s.pri 0000000c
	const.alt 00000028
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 0000002c
	break	; 00004930
	load.s.pri 0000000c
	const.alt 0000002c
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 0000002d
	break	; 00004964
	load.s.pri 0000000c
	const.alt 00000030
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu32_
	;$exp
	; line 0000002e
	break	; 00004998
	load.s.pri 0000000c
	const.alt 00000034
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu16_
	;$exp
	; line 0000002f
	break	; 000049cc
	load.s.pri 0000000c
	const.alt 00000038
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu16_
	;$exp
	; line 00000030
	break	; 00004a00
	load.s.pri 0000000c
	const.alt 0000003c
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu16_
	;$exp
	; line 00000031
	break	; 00004a34
	load.s.pri 0000000c
	const.alt 00000040
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu16_
	;$exp
	; line 00000032
	break	; 00004a68
	load.s.pri 0000000c
	const.alt 00000044
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000033
	break	; 00004a9c
	load.s.pri 0000000c
	const.alt 00000048
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000034
	break	; 00004ad0
	load.s.pri 0000000c
	const.alt 0000004c
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000035
	break	; 00004b04
	load.s.pri 0000000c
	const.alt 00000050
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000036
	break	; 00004b38
	load.s.pri 0000000c
	const.alt 00000054
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000037
	break	; 00004b6c
	load.s.pri 0000000c
	const.alt 00000058
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000038
	break	; 00004ba0
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wend
	;$exp
	const.pri 00000000
	retn

	proc	; DDE_status_read
	; line 0000003a
	break	; 00004bd4
	;$lcl o 0000000c
	; line 0000003b
	break	; 00004bd8
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000020
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rbegin
	jzer 000000de
	;$exp
	; line 0000003b
	break	; 00004c10
	const.pri ffffffff
	retn
l.000000de		; 00004c20
	; line 0000003c
	break	; 00004c20
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru8
	;$exp
	; line 0000003d
	break	; 00004c50
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000004
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru8
	;$exp
	; line 0000003e
	break	; 00004c8c
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000008
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru8
	;$exp
	; line 0000003f
	break	; 00004cc8
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 0000000c
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru8
	;$exp
	; line 00000040
	break	; 00004d04
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000010
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rs8
	;$exp
	; line 00000041
	break	; 00004d40
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000014
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rs8
	;$exp
	; line 00000042
	break	; 00004d7c
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000018
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rs8
	;$exp
	; line 00000043
	break	; 00004db8
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 0000001c
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rs8
	;$exp
	; line 00000044
	break	; 00004df4
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000020
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru16
	;$exp
	; line 00000045
	break	; 00004e30
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000024
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru8
	;$exp
	; line 00000046
	break	; 00004e6c
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000028
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru8
	;$exp
	; line 00000047
	break	; 00004ea8
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 0000002c
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru8
	;$exp
	; line 00000048
	break	; 00004ee4
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000030
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rs32
	;$exp
	; line 00000049
	break	; 00004f20
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000034
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru16
	;$exp
	; line 0000004a
	break	; 00004f5c
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000038
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru16
	;$exp
	; line 0000004b
	break	; 00004f98
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 0000003c
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru16
	;$exp
	; line 0000004c
	break	; 00004fd4
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000040
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru16
	;$exp
	; line 0000004d
	break	; 00005010
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000044
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rs8
	;$exp
	; line 0000004e
	break	; 0000504c
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000048
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rs8
	;$exp
	; line 0000004f
	break	; 00005088
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 0000004c
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru8
	;$exp
	; line 00000050
	break	; 000050c4
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000050
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru8
	;$exp
	; line 00000051
	break	; 00005100
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000054
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru8
	;$exp
	; line 00000052
	break	; 0000513c
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000058
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru8
	;$exp
	; line 00000053
	break	; 00005178
	const.pri 00000000
	push.pri
	call dde_rend
	;$exp
	; line 00000054
	break	; 00005190
	const.pri 00000000
	retn

	proc	; DDE_trend_write
	; line 0000006a
	break	; 000051a4
	;$lcl o 00000010
	;$lcl stamp 0000000c
	; line 0000006b
	break	; 000051a8
	const.pri 00000040
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wbegin
	;$exp
	; line 0000006c
	break	; 000051cc
	load.s.pri 00000010
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu32_
	;$exp
	; line 0000006d
	break	; 000051f4
	load.s.pri 00000010
	const.alt 00000004
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu16_
	;$exp
	; line 0000006e
	break	; 00005228
	load.s.pri 00000010
	const.alt 00000008
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 0000006f
	break	; 0000525c
	load.s.pri 00000010
	const.alt 0000000c
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000070
	break	; 00005290
	load.s.pri 00000010
	const.alt 00000010
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000071
	break	; 000052c4
	load.s.pri 00000010
	const.alt 00000014
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu32_
	;$exp
	; line 00000072
	break	; 000052f8
	load.s.pri 00000010
	const.alt 00000018
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu16_
	;$exp
	; line 00000073
	break	; 0000532c
	load.s.pri 00000010
	const.alt 0000001c
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu16_
	;$exp
	; line 00000074
	break	; 00005360
	load.s.pri 00000010
	const.alt 00000020
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu16_
	;$exp
	; line 00000075
	break	; 00005394
	load.s.pri 00000010
	const.alt 00000024
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu16_
	;$exp
	; line 00000076
	break	; 000053c8
	load.s.pri 00000010
	const.alt 00000028
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu16_
	;$exp
	; line 00000077
	break	; 000053fc
	load.s.pri 00000010
	const.alt 0000002c
	add
	load.i
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wsu8_
	;$exp
	; line 00000078
	break	; 00005430
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wend
	;$exp
	const.pri 00000000
	retn

	proc	; DDE_events_write
	; line 00000084
	break	; 00005464
	;$lcl params 00000014
	;$lcl code 00000010
	;$lcl stamp 0000000c
	; line 00000085
	break	; 00005468
	const.pri 00000041
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wbegin
	;$exp
	; line 00000086
	break	; 0000548c
	const.pri 0000000c
	push.pri
	;$par
	load.s.pri 00000010
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_wastr
	;$exp
	; line 00000087
	break	; 000054bc
	const.pri 00000032
	push.pri
	;$par
	load.s.pri 00000014
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_wastr
	;$exp
	; line 00000088
	break	; 000054ec
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_wend
	;$exp
	const.pri 00000000
	retn

	proc	; DDE_cmds_read
	; line 00000096
	break	; 00005520
	;$lcl o 0000000c
	; line 00000097
	break	; 00005524
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000025
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rbegin
	jzer 000000df
	;$exp
	; line 00000097
	break	; 0000555c
	const.pri ffffffff
	retn
l.000000df		; 0000556c
	; line 00000098
	break	; 0000556c
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru8
	;$exp
	; line 00000099
	break	; 0000559c
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000004
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru8
	;$exp
	; line 0000009a
	break	; 000055d8
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000008
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru8
	;$exp
	; line 0000009b
	break	; 00005614
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 0000000c
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru8
	;$exp
	; line 0000009c
	break	; 00005650
	const.pri 00000000
	push.pri
	call dde_rend
	;$exp
	; line 0000009d
	break	; 00005668
	const.pri 00000000
	retn

	proc	; DDE_setup_read
	; line 000000ab
	break	; 0000567c
	;$lcl o 0000000c
	; line 000000ac
	break	; 00005680
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000026
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rbegin
	jzer 000000e0
	;$exp
	; line 000000ac
	break	; 000056b8
	const.pri ffffffff
	retn
l.000000e0		; 000056c8
	; line 000000ad
	break	; 000056c8
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rs32
	;$exp
	; line 000000ae
	break	; 000056f8
	;$lcl j fffffffc
	stack fffffffc
	const.pri 00000000
	stor.s fffffffc
	;$exp
	jump 000000e3
l.000000e1		; 0000571c
	; line 000000ae
	break	; 0000571c
	load.s.pri fffffffc
	push.pri
	addr.pri fffffffc
	inc.i
	pop.pri
	;$exp
l.000000e3
	load.s.pri fffffffc
	push.pri
	const.pri 0000000a
	pop.alt
	xchg
	sless
	jzer 000000e2
	;$exp
	; line 000000ae
	break	; 00005764
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000004
	add
	push.pri
	load.s.pri fffffffc
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rs32
	;$exp
	jump 000000e1
l.000000e2		; 000057cc
	stack 00000004
	; line 000000af
	break	; 000057d4
	;$lcl j fffffffc
	stack fffffffc
	const.pri 00000000
	stor.s fffffffc
	;$exp
	jump 000000e6
l.000000e4		; 000057f8
	; line 000000af
	break	; 000057f8
	load.s.pri fffffffc
	push.pri
	addr.pri fffffffc
	inc.i
	pop.pri
	;$exp
l.000000e6
	load.s.pri fffffffc
	push.pri
	const.pri 0000000a
	pop.alt
	xchg
	sless
	jzer 000000e5
	;$exp
	; line 000000af
	break	; 00005840
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 0000002c
	add
	push.pri
	load.s.pri fffffffc
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rs32
	;$exp
	jump 000000e4
l.000000e5		; 000058a8
	stack 00000004
	; line 000000b0
	break	; 000058b0
	;$lcl j fffffffc
	stack fffffffc
	const.pri 00000000
	stor.s fffffffc
	;$exp
	jump 000000e9
l.000000e7		; 000058d4
	; line 000000b0
	break	; 000058d4
	load.s.pri fffffffc
	push.pri
	addr.pri fffffffc
	inc.i
	pop.pri
	;$exp
l.000000e9
	load.s.pri fffffffc
	push.pri
	const.pri 0000000a
	pop.alt
	xchg
	sless
	jzer 000000e8
	;$exp
	; line 000000b0
	break	; 0000591c
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000054
	add
	push.pri
	load.s.pri fffffffc
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rs8
	;$exp
	jump 000000e7
l.000000e8		; 00005984
	stack 00000004
	; line 000000b1
	break	; 0000598c
	const.pri 00000000
	push.pri
	call dde_rend
	;$exp
	; line 000000b2
	break	; 000059a4
	const.pri 00000000
	retn

	proc	; DDE_profile_read
	; line 000000c1
	break	; 000059b8
	;$lcl o 0000000c
	; line 000000c2
	break	; 000059bc
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000028
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rbegin
	jzer 000000ea
	;$exp
	; line 000000c2
	break	; 000059f4
	const.pri ffffffff
	retn
l.000000ea		; 00005a04
	; line 000000c3
	break	; 00005a04
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_rf32
	;$exp
	; line 000000c4
	break	; 00005a34
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000004
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru16
	;$exp
	; line 000000c5
	break	; 00005a70
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000008
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru16
	;$exp
	; line 000000c6
	break	; 00005aac
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 0000000c
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru16
	;$exp
	; line 000000c7
	break	; 00005ae8
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000010
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_ru16
	;$exp
	; line 000000c8
	break	; 00005b24
	const.pri 00000000
	push.pri
	call dde_rend
	;$exp
	; line 000000c9
	break	; 00005b3c
	const.pri 00000000
	retn


DATA 0000	; 000017c4
dump 00000000
dump 00000000

CODE 000f	; 00005b4c
	proc	; dde_event
	; line 00000006
	break	; 00005b50
	;$lcl params 00000010
	;$lcl code 0000000c
	; line 00000007
	break	; 00005b54
	load.s.pri 00000010
	pushr.pri
	;$par
	load.s.pri 0000000c
	pushr.pri
	;$par
	const.pri 000017cc
	pushr.pri
	;$par
	const.pri 0000000c
	push.pri
	sysreq 00000002	; printf
	stack 00000010
	;$exp
	; line 00000008
	break	; 00005b98
	load.s.pri 00000010
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call DDE_events_write
	;$exp
	const.pri 00000000
	retn


DATA 000f	; 000017cc
dump 4444455f 4556454e 54202573 202d2025 730a0000 
dump 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000

CODE 000f	; 00005be0
	proc	; _dde_status_write
	; line 0000001a
	break	; 00005be4
	; line 0000001b
	break	; 00005be8
	const.pri 00000000
	stor 00001850
	;$exp
	; line 0000001c
	break	; 00005bfc
	const.pri 00001854
	pushr.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000002	; printf
	stack 00000008
	;$exp
	; line 0000001d
	break	; 00005c28
	const.pri 000017f4
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call DDE_status_write
	;$exp
	const.pri 00000000
	retn


DATA 000f	; 00001854
dump 4444455f 53544154 55532077 72697465 0a000000 

CODE 000f	; 00005c58
	proc	; dde_status_write_task_500ms
	; line 00000021
	break	; 00005c5c
	; line 00000022
	break	; 00005c60
	load.pri 00001850
	not
	jzer 000000eb
	;$exp
	; line 00000022
	break	; 00005c78
	const.pri 00000000
	retn
l.000000eb		; 00005c88
	; line 00000024
	break	; 00005c88
	load.pri 00001850
	push.pri
	const.pri 000001f4
	pop.alt
	sub
	stor 00001850
	;$exp
	; line 00000025
	break	; 00005cb0
	load.pri 00001850
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sleq
	jzer 000000ec
	;$exp
	; line 00000025
	break	; 00005cdc
	const.pri 00000000
	push.pri
	call _dde_status_write
	;$exp
l.000000ec		; 00005cf4
	const.pri 00000000
	retn

	proc	; dde_status_dirty
	; line 00000029
	break	; 00005d04
	;$lcl prio_src 0000000c
	; line 0000002a
	break	; 00005d08
	;$lcl delay fffffffc
	stack fffffffc
	const.pri 00000000
	stor.s fffffffc
	;$exp
	; line 0000002b
	break	; 00005d24
	;$lcl pronto fffffff8
	stack fffffffc
	load.s.pri 0000000c
	push.pri
	const.pri 00000064
	pop.alt
	xchg
	sgeq
	stor.s fffffff8
	;$exp
	; line 0000002d
	break	; 00005d58
	load.s.pri fffffff8
	jzer 000000ed
	;$exp
	; line 0000002d
	break	; 00005d6c
	const.pri 000001f4
	stor.s fffffffc
	;$exp
	jump 000000ee
l.000000ed		; 00005d88
	; line 0000002f
	break	; 00005d88
	load.pri 000017c8
	jzer 000000ef
	;$exp
	; line 0000002f
	break	; 00005d9c
	const.pri 00000bb8
	stor.s fffffffc
	;$exp
	jump 000000f0
l.000000ef		; 00005db8
	; line 00000030
	break	; 00005db8
	const.pri 7fffffff
	stor.s fffffffc
	;$exp
l.000000f0		; 00005dcc
l.000000ee		; 00005dcc
	; line 00000032
	break	; 00005dcc
	load.pri 00001850
	jzer 000000f1
	load.s.pri fffffffc
	push.pri
	;$par
	load.pri 00001850
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000016	; min
	stack 0000000c
	jump 000000f2
l.000000f1
	load.s.pri fffffffc
l.000000f2
	stor 00001850
	;$exp
	; line 00000034
	break	; 00005e2c
	load.s.pri 0000000c
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00001868
	pushr.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000002	; printf
	stack 0000000c
	heap fffffffc
	;$exp
	stack 00000008
	const.pri 00000000
	retn


DATA 000f	; 00001868
dump 4444455f 53544154 55532064 69727479 2025640a 00000000 

CODE 000f	; 00005e90
	proc	; dde_status_set
	; line 0000003f
	break	; 00005e94
	;$lcl eventfmt 0000001c
	;$lcl eventcode 00000018
	;$lcl val 00000014
	;$lcl ref 00000010
	;$lcl prio_src 0000000c
	; line 00000041
	break	; 00005e98
	lref.s.pri 00000010
	push.pri
	load.s.pri 00000014
	pop.alt
	eq
	jzer 000000f3
	;$exp
	; line 00000041
	break	; 00005ec0
	const.pri 00000000
	retn
l.000000f3		; 00005ed0
	; line 00000042
	break	; 00005ed0
	load.s.pri 00000014
	sref.s 00000010
	;$exp
	; line 00000043
	break	; 00005ee4
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_status_dirty
	;$exp
	; line 00000045
	break	; 00005f08
	load.s.pri 00000018
	align.pri 00000001
	lodb.i 00000001
	jzer 000000f4
	;$exp
	; line 00000046
	break	; 00005f2c
	;$lcl s ffffffcc
	stack ffffffcc
	const.pri 00000000
	addr.alt ffffffcc
	fill 00000034
	; line 00000047
	break	; 00005f50
	load.s.pri 0000001c
	align.pri 00000001
	lodb.i 00000001
	jzer 000000f5
	;$exp
	; line 00000047
	break	; 00005f74
	load.s.pri 00000010
	pushr.pri
	;$par
	load.s.pri 00000014
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	load.s.pri 0000001c
	pushr.pri
	;$par
	const.pri 0000000d
	push.pri
	;$par
	addr.pri ffffffcc
	pushr.pri
	;$par
	const.pri 00000014
	push.pri
	sysreq 00000003	; sprintf
	stack 00000018
	heap fffffffc
	;$exp
	jump 000000f6
l.000000f5		; 00005ff0
	; line 00000048
	break	; 00005ff0
	load.s.pri 00000010
	pushr.pri
	;$par
	load.s.pri 00000014
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00001880
	pushr.pri
	;$par
	const.pri 0000000d
	push.pri
	;$par
	addr.pri ffffffcc
	pushr.pri
	;$par
	const.pri 00000014
	push.pri
	sysreq 00000003	; sprintf
	stack 00000018
	heap fffffffc
	;$exp
l.000000f6		; 00006064
	; line 00000049
	break	; 00006064
	addr.pri ffffffcc
	push.pri
	;$par
	load.s.pri 00000018
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	stack 00000034
l.000000f4		; 0000609c
	; line 0000004b
	break	; 0000609c
	const.pri 00000001
	retn


DATA 000f	; 00001880
dump 25642028 25642900 
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000

CODE 000f	; 000060ac
	proc	; dde_setup_current_target
	; line 0000005c
	break	; 000060b0
	; line 0000005e
	break	; 000060b4
	;$lcl prognum fffffffc
	stack fffffffc
	const.pri fffffffe
	stor.s fffffffc
	;$exp
	; line 0000005f
	break	; 000060d0
	;$lcl targ fffffff8
	stack fffffffc
	const.pri 00000000
	stor.s fffffff8
	;$exp
	; line 00000061
	break	; 000060ec
	const.pri 000017f4
	const.alt 00000024
	add
	load.i
	not
	jzer 000000f7
	;$exp
	; line 00000063
	break	; 00006114
	const.pri ffffffff
	stor.s fffffff8
	;$exp
	; line 00000064
	break	; 00006128
	const.pri ffffffff
	stor.s fffffffc
	;$exp
	; line 00000065
	break	; 0000613c
	;$lcl p_idx fffffff4
	stack fffffffc
	const.pri 00000000
	stor.s fffffff4
	;$exp
	jump 000000fa
l.000000f8		; 00006160
	; line 00000065
	break	; 00006160
	load.s.pri fffffff4
	push.pri
	addr.pri fffffff4
	inc.i
	pop.pri
	;$exp
l.000000fa
	load.s.pri fffffff4
	push.pri
	const.pri 0000000a
	pop.alt
	xchg
	sless
	jzer 000000f9
	;$exp
	; line 00000066
	break	; 000061a8
	;$lcl p_target fffffff0
	stack fffffffc
	const.pri 00001888
	const.alt 00000054
	add
	push.pri
	load.s.pri fffffff4
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	stor.s fffffff0
	;$exp
	; line 00000067
	break	; 000061f8
	;$lcl p_start ffffffec
	stack fffffffc
	const.pri 00001888
	const.alt 00000004
	add
	push.pri
	load.s.pri fffffff4
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	stor.s ffffffec
	;$exp
	; line 00000068
	break	; 00006248
	;$lcl p_end ffffffe8
	stack fffffffc
	const.pri 00001888
	const.alt 0000002c
	add
	push.pri
	load.s.pri fffffff4
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	stor.s ffffffe8
	;$exp
	; line 00000069
	break	; 00006298
	;$lcl now ffffffe4
	stack fffffffc
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000019	; rM2M_GetTime
	stack 00000014
	heap fffffff4
	stor.s ffffffe4
	;$exp
	; line 0000006b
	break	; 00006330
	load.s.pri ffffffec
	not
	jnz 000000fc
	load.s.pri ffffffe8
	not
	jnz 000000fc
	load.s.pri fffffff0
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sless
	jnz 000000fc
	const.pri 00000000
	jump 000000fd
l.000000fc
	const.pri 00000001
l.000000fd
	jzer 000000fb
	;$exp
	; line 0000006b
	break	; 000063a4
	stack 00000010
	jump 000000f8
l.000000fb		; 000063b8
	; line 0000006d
	break	; 000063b8
	load.s.pri ffffffe4
	push.pri
	load.s.pri ffffffe8
	pop.alt
	xchg
	sgrtr
	jzer 000000fe
	;$exp
	; line 0000006d
	break	; 000063e4
	stack 00000010
	jump 000000f8
l.000000fe		; 000063f8
	; line 0000006f
	break	; 000063f8
	;$lcl tx ffffffe0
	stack fffffffc
	const.pri ffffffff
	stor.s ffffffe0
	;$exp
	; line 00000072
	break	; 00006414
	load.s.pri ffffffe4
	push.pri
	load.s.pri ffffffec
	pop.alt
	xchg
	sgeq
	jzer 000000ff
	;$exp
	; line 00000073
	break	; 00006440
	load.s.pri fffffff0
	stor.s ffffffe0
	;$exp
	jump 00000100
l.000000ff		; 0000645c
	; line 00000078
	break	; 0000645c
	load.s.pri ffffffe4
	push.pri
	load.s.pri ffffffec
	pop.alt
	xchg
	sless
	jzer 00000102
	load.s.pri fffffff0
	push.pri
	const.pri 00000005
	pop.alt
	xchg
	sgrtr
	jzer 00000102
	const.pri 00000001
	jump 00000103
l.00000102
	const.pri 00000000
l.00000103
	jzer 00000101
	;$exp
	; line 00000079
	break	; 000064d0
	load.s.pri fffffff0
	const.alt 00000e10
	smul
	const.alt 00000002
	smul
	push.pri
	load.s.pri ffffffec
	push.pri
	load.s.pri ffffffe4
	pop.alt
	sub
	const.alt 00000003
	smul
	pop.alt
	sub
	push.pri
	const.pri 00000e10
	pop.alt
	sdiv
	push.pri
	const.pri 00000002
	pop.alt
	sdiv
	stor.s ffffffe0
	;$exp
	; line 0000007a
	break	; 00006558
	load.s.pri ffffffe0
	push.pri
	const.pri 00000005
	pop.alt
	xchg
	sleq
	jzer 00000104
	;$exp
	; line 0000007a
	break	; 00006584
	const.pri ffffffff
	stor.s ffffffe0
	;$exp
l.00000104		; 00006598
l.00000101		; 00006598
l.00000100		; 00006598
	; line 0000007e
	break	; 00006598
	load.s.pri ffffffe0
	push.pri
	load.s.pri fffffff8
	pop.alt
	xchg
	sgrtr
	jzer 00000105
	;$exp
	; line 0000007f
	break	; 000065c4
	load.s.pri ffffffe0
	stor.s fffffff8
	;$exp
	; line 00000080
	break	; 000065d8
	load.s.pri fffffff4
	const.alt 00000001
	add
	stor.s fffffffc
	;$exp
l.00000105		; 000065f8
	stack 00000014
	jump 000000f8
l.000000f9		; 00006608
	stack 00000004
	; line 00000084
	break	; 00006610
	load.s.pri fffffffc
	const.alt ffffffff
	eq
	jzer 00000106
	;$exp
	; line 00000084
	break	; 00006630
	const.pri 00000008
	stor.s fffffff8
	;$exp
l.00000106		; 00006644
l.000000f7		; 00006644
	; line 00000087
	break	; 00006644
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001904
	push.pri
	;$par
	load.s.pri fffffffc
	push.pri
	;$par
	const.pri 000017f4
	const.alt 0000001c
	add
	push.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	;$exp
	; line 00000088
	break	; 000066a4
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001910
	push.pri
	;$par
	load.s.pri fffffff8
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000018
	add
	push.pri
	;$par
	const.pri 00000002
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	;$exp
	; line 0000008a
	break	; 00006704
	load.s.pri fffffff8
	stack 00000008
	retn


DATA 000f	; 00001904
dump 70726f67 6e756d00 00000000 74617267 65740000 

CODE 000f	; 0000671c
	proc	; dde_trend_append
	; line 00000090
	break	; 00006720
	;$lcl tsys 00000034
	;$lcl uusb 00000030
	;$lcl ubat 0000002c
	;$lcl htr 00000028
	;$lcl wp 00000024
	;$lcl air 00000020
	;$lcl ticks 0000001c
	;$lcl tw_cnt 00000018
	;$lcl tw_acc 00000014
	;$lcl Exx 00000010
	;$lcl stamp 0000000c
	; line 00000092
	break	; 00006724
	; line 00000093
	break	; 00006728
	;$lcl tnow fffffffc
	stack fffffffc
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000019	; rM2M_GetTime
	stack 00000014
	heap fffffff4
	stor.s fffffffc
	;$exp
	; line 00000096
	break	; 000067c0
	load.pri 00001918
	jzer 00000107
	;$exp
	; line 00000098
	break	; 000067d4
	;$lcl r ffffffcc
	stack ffffffd0
	const.pri 00000000
	addr.alt ffffffcc
	fill 00000030
	; line 0000009a
	break	; 000067f8
	addr.pri ffffffcc
	push.pri
	load.s.pri fffffffc
	push.pri
	load.pri 000017c4
	pop.alt
	sub
	pop.alt
	stor.i
	;$exp
	; line 0000009b
	break	; 0000682c
	addr.pri ffffffcc
	const.alt 00000004
	add
	push.pri
	load.s.pri fffffffc
	push.pri
	load.pri 00001918
	pop.alt
	sub
	pop.alt
	stor.i
	;$exp
	; line 0000009d
	break	; 0000686c
	addr.pri ffffffcc
	const.alt 00000008
	add
	push.pri
	load.s.pri 00000010
	pop.alt
	stor.i
	;$exp
	; line 0000009e
	break	; 00006898
	addr.pri ffffffcc
	const.alt 0000000c
	add
	push.pri
	const.pri ffffff81
	pop.alt
	stor.i
	;$exp
	; line 000000a0
	break	; 000068c4
	;$lcl cnt ffffffc8
	stack fffffffc
	load.s.pri 00000018
	push.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 0000001e	; max
	stack 0000000c
	stor.s ffffffc8
	;$exp
	; line 000000a1
	break	; 0000690c
	addr.pri ffffffcc
	const.alt 00000010
	add
	push.pri
	load.s.pri 00000014
	push.pri
	load.s.pri ffffffc8
	pop.alt
	sdiv
	pop.alt
	stor.i
	;$exp
	; line 000000a4
	break	; 0000694c
	;$lcl tks ffffffc4
	stack fffffffc
	load.s.pri 0000001c
	push.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 0000001e	; max
	stack 0000000c
	stor.s ffffffc4
	;$exp
	; line 000000a5
	break	; 00006994
	addr.pri ffffffcc
	const.alt 00000018
	add
	push.pri
	addr.pri ffffffcc
	const.alt 00000004
	add
	load.i
	push.pri
	load.s.pri 00000020
	pop.alt
	smul
	push.pri
	load.s.pri ffffffc4
	pop.alt
	sdiv
	pop.alt
	stor.i
	;$exp
	; line 000000a6
	break	; 000069f8
	addr.pri ffffffcc
	const.alt 00000020
	add
	push.pri
	addr.pri ffffffcc
	const.alt 00000004
	add
	load.i
	push.pri
	load.s.pri 00000024
	pop.alt
	smul
	push.pri
	load.s.pri ffffffc4
	pop.alt
	sdiv
	pop.alt
	stor.i
	;$exp
	; line 000000a7
	break	; 00006a5c
	addr.pri ffffffcc
	const.alt 0000001c
	add
	push.pri
	addr.pri ffffffcc
	const.alt 00000004
	add
	load.i
	push.pri
	load.s.pri 00000028
	pop.alt
	smul
	push.pri
	load.s.pri ffffffc4
	pop.alt
	sdiv
	pop.alt
	stor.i
	;$exp
	; line 000000a9
	break	; 00006ac0
	const.pri 0000191c
	pushr.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000002	; printf
	stack 00000008
	;$exp
	; line 000000aa
	break	; 00006aec
	addr.pri ffffffc4
	pushr.pri
	;$par
	addr.pri 00000020
	pushr.pri
	;$par
	addr.pri ffffffcc
	const.alt 00000004
	add
	pushr.pri
	;$par
	addr.pri ffffffcc
	const.alt 00000018
	add
	pushr.pri
	;$par
	const.pri 00001928
	pushr.pri
	;$par
	const.pri 00000014
	push.pri
	sysreq 00000002	; printf
	stack 00000018
	;$exp
	; line 000000ab
	break	; 00006b60
	addr.pri ffffffc4
	pushr.pri
	;$par
	addr.pri 00000024
	pushr.pri
	;$par
	addr.pri ffffffcc
	const.alt 00000004
	add
	pushr.pri
	;$par
	addr.pri ffffffcc
	const.alt 00000020
	add
	pushr.pri
	;$par
	const.pri 00001948
	pushr.pri
	;$par
	const.pri 00000014
	push.pri
	sysreq 00000002	; printf
	stack 00000018
	;$exp
	; line 000000ac
	break	; 00006bd4
	addr.pri ffffffc4
	pushr.pri
	;$par
	addr.pri 00000028
	pushr.pri
	;$par
	addr.pri ffffffcc
	const.alt 00000004
	add
	pushr.pri
	;$par
	addr.pri ffffffcc
	const.alt 0000001c
	add
	pushr.pri
	;$par
	const.pri 00001968
	pushr.pri
	;$par
	const.pri 00000014
	push.pri
	sysreq 00000002	; printf
	stack 00000018
	;$exp
	; line 000000af
	break	; 00006c48
	;$lcl energy_air ffffffc0
	stack fffffffc
	const.pri 000017e0
	const.alt 00000004
	add
	load.i
	push.pri
	addr.pri ffffffcc
	const.alt 00000018
	add
	load.i
	pop.alt
	smul
	stor.s ffffffc0
	;$exp
	; line 000000b0
	break	; 00006c98
	;$lcl energy_wp ffffffbc
	stack fffffffc
	const.pri 000017e0
	const.alt 0000000c
	add
	load.i
	push.pri
	addr.pri ffffffcc
	const.alt 00000020
	add
	load.i
	pop.alt
	smul
	stor.s ffffffbc
	;$exp
	; line 000000b1
	break	; 00006ce8
	;$lcl energy_htr ffffffb8
	stack fffffffc
	const.pri 000017e0
	const.alt 00000008
	add
	load.i
	push.pri
	addr.pri ffffffcc
	const.alt 0000001c
	add
	load.i
	pop.alt
	smul
	stor.s ffffffb8
	;$exp
	; line 000000b2
	break	; 00006d38
	addr.pri ffffffcc
	const.alt 00000014
	add
	push.pri
	load.s.pri ffffffc0
	push.pri
	load.s.pri ffffffbc
	pop.alt
	add
	push.pri
	load.s.pri ffffffb8
	pop.alt
	add
	pop.alt
	stor.i
	;$exp
	; line 000000b4
	break	; 00006d8c
	addr.pri ffffffcc
	const.alt 00000024
	add
	push.pri
	load.s.pri 0000002c
	pop.alt
	stor.i
	;$exp
	; line 000000b5
	break	; 00006db8
	addr.pri ffffffcc
	const.alt 00000028
	add
	push.pri
	load.s.pri 00000030
	pop.alt
	stor.i
	;$exp
	; line 000000b6
	break	; 00006de4
	addr.pri ffffffcc
	const.alt 0000002c
	add
	push.pri
	load.s.pri 00000034
	pop.alt
	stor.i
	;$exp
	; line 000000b7
	break	; 00006e10
	addr.pri ffffffcc
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call DDE_trend_write
	;$exp
	stack 00000044
l.00000107		; 00006e48
	; line 000000b9
	break	; 00006e48
	load.s.pri fffffffc
	stor 00001918
	;$exp
	stack 00000004
	const.pri 00000000
	retn


DATA 000f	; 00001918
dump 00000000 5452454e 44205245 430a0000 20202020 626c6f77 65722025 64203d20 
dump 2564202a 20256420 2f202564 0a000000 20202020 70756d70 20202025 64203d20 
dump 2564202a 20256420 2f202564 0a000000 20202020 68656174 65722025 64203d20 
dump 2564202a 20256420 2f202564 0a000000 

DATA 0010	; 00001988
dump 00000000 
dump 00000000 
dump 00000000 5f6c6179 7a305f6f 6e5f6374 6f000000 00000000 
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000
dump 00000001 5f6c6179 7a315f6f 6e5f6374 6f000000 00000000 
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000

CODE 0010	; 00006e70
	proc	; layz
	; line 00000021
	break	; 00006e74
	;$lcl port 00000010
	;$lcl z 0000000c
	; line 00000022
	break	; 00006e78
	load.s.pri 0000000c
	push.pri
	load.s.pri 00000010
	jzer 00000108
	const.pri 00001a30
	jump 00000109
l.00000108
	const.pri 00001990
l.00000109
	pop.alt
	movs 000000a0
	;$exp
	const.pri 00000000
	retn

	proc	; _layzResetHealth
	; line 00000025
	break	; 00006ecc
	;$lcl z 0000000c
	; line 00000028
	break	; 00006ed0
	load.s.pri 0000000c
	const.alt 0000007c
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 00000029
	break	; 00006efc
	load.s.pri 0000000c
	const.alt 0000009c
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 0000002a
	break	; 00006f28
	;$lcl j fffffffc
	stack fffffffc
	const.pri 00000000
	stor.s fffffffc
	;$exp
	jump 0000010c
l.0000010a		; 00006f4c
	; line 0000002a
	break	; 00006f4c
	load.s.pri fffffffc
	push.pri
	addr.pri fffffffc
	inc.i
	pop.pri
	;$exp
l.0000010c
	load.s.pri fffffffc
	push.pri
	const.pri 00000007
	pop.alt
	xchg
	sless
	jzer 0000010b
	;$exp
	; line 0000002a
	break	; 00006f94
	load.s.pri 0000000c
	const.alt 00000080
	add
	push.pri
	load.s.pri fffffffc
	bounds 00000006
	shl.c.pri 00000002
	pop.alt
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	jump 0000010a
l.0000010b		; 00006fec
	stack 00000004
	const.pri 00000000
	retn

	proc	; layzCheckHealth
	; line 0000002c
	break	; 00007004
	;$lcl port 0000000c
	; line 0000002e
	break	; 00007008
	;$lcl z ffffff60
	stack ffffff60
	const.pri 00000000
	addr.alt ffffff60
	fill 000000a0
	; line 0000002f
	break	; 0000702c
	load.s.pri 0000000c
	push.pri
	;$par
	addr.pri ffffff60
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call layz
	;$exp
	; line 00000032
	break	; 0000705c
	;$lcl wanna_log ffffff5c
	stack fffffffc
	addr.pri ffffff60
	const.alt 0000007c
	add
	load.i
	jnz 0000010d
	addr.pri ffffff60
	const.alt 0000009c
	add
	load.i
	jnz 0000010d
	const.pri 00000000
	jump 0000010e
l.0000010d
	const.pri 00000001
l.0000010e
	stor.s ffffff5c
	;$exp
	; line 00000033
	break	; 000070c8
	;$lcl j ffffff58
	stack fffffffc
	const.pri 00000000
	stor.s ffffff58
	;$exp
	jump 00000111
l.0000010f		; 000070ec
	; line 00000033
	break	; 000070ec
	load.s.pri ffffff58
	push.pri
	addr.pri ffffff58
	inc.i
	pop.pri
	;$exp
l.00000111
	load.s.pri ffffff58
	push.pri
	const.pri 00000007
	pop.alt
	xchg
	sless
	jzer 00000110
	;$exp
	; line 00000033
	break	; 00007134
	load.s.pri ffffff5c
	jnz 00000112
	addr.pri ffffff60
	const.alt 00000080
	add
	push.pri
	load.s.pri ffffff58
	bounds 00000006
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	jnz 00000112
	const.pri 00000000
	jump 00000113
l.00000112
	const.pri 00000001
l.00000113
	stor.s ffffff5c
	;$exp
	jump 0000010f
l.00000110		; 000071b4
	stack 00000004
	; line 00000035
	break	; 000071bc
	load.s.pri ffffff5c
	jzer 00000114
	;$exp
	; line 00000037
	break	; 000071d0
	;$lcl s ffffff28
	stack ffffffcc
	const.pri 00000000
	addr.alt ffffff28
	fill 00000034
	; line 00000038
	break	; 000071f4
	addr.pri ffffff60
	const.alt 00000080
	add
	const.alt 00000018
	add
	pushr.pri
	;$par
	addr.pri ffffff60
	const.alt 00000080
	add
	const.alt 00000014
	add
	pushr.pri
	;$par
	addr.pri ffffff60
	const.alt 00000080
	add
	const.alt 00000010
	add
	pushr.pri
	;$par
	addr.pri ffffff60
	const.alt 00000080
	add
	const.alt 0000000c
	add
	pushr.pri
	;$par
	addr.pri ffffff60
	const.alt 00000080
	add
	const.alt 00000008
	add
	pushr.pri
	;$par
	addr.pri ffffff60
	const.alt 00000080
	add
	const.alt 00000004
	add
	pushr.pri
	;$par
	addr.pri ffffff60
	const.alt 00000080
	add
	pushr.pri
	;$par
	addr.pri ffffff60
	const.alt 0000007c
	add
	pushr.pri
	;$par
	addr.pri ffffff60
	const.alt 0000009c
	add
	pushr.pri
	;$par
	addr.pri ffffff60
	const.alt 00000078
	add
	pushr.pri
	;$par
	addr.pri ffffff60
	const.alt 00000074
	add
	pushr.pri
	;$par
	addr.pri ffffff60
	const.alt 00000018
	add
	pushr.pri
	;$par
	const.pri 00001ad0
	pushr.pri
	;$par
	const.pri 0000000d
	push.pri
	;$par
	addr.pri ffffff28
	pushr.pri
	;$par
	const.pri 0000003c
	push.pri
	sysreq 00000003	; sprintf
	stack 00000040
	;$exp
	; line 0000003f
	break	; 000073a0
	addr.pri ffffff28
	push.pri
	;$par
	const.pri 00001b08
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	stack 00000034
l.00000114		; 000073d8
	; line 00000043
	break	; 000073d8
	load.s.pri 0000000c
	jzer 00000115
	const.pri 00001a30
	jump 00000116
l.00000115
	const.pri 00001990
l.00000116
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _layzResetHealth
	;$exp
	stack 000000a4
	const.pri 00000000
	retn


DATA 0010	; 00001ad0
dump 25732074 783d2564 2072783d 25642064 75623d25 64206374 6f3d2564 20656461 
dump 743d2564 20256420 25642025 64202564 20256420 25640000 6865616c 74682d6c 
dump 61797a00 

CODE 0010	; 00007430
	proc	; _layzHasDiff
	; line 0000004d
	break	; 00007434
	;$lcl frame 00000010
	;$lcl diff 0000000c
	; line 0000004e
	break	; 00007438
	;$lcl hasdiff fffffffc
	stack fffffffc
	const.pri 00000000
	stor.s fffffffc
	;$exp
	; line 0000004f
	break	; 00007454
	;$lcl i fffffff8
	stack fffffffc
	const.pri 00000000
	stor.s fffffff8
	;$exp
	jump 00000119
l.00000117		; 00007478
	; line 0000004f
	break	; 00007478
	load.s.pri fffffff8
	push.pri
	addr.pri fffffff8
	inc.i
	pop.pri
	;$exp
l.00000119
	load.s.pri fffffff8
	push.pri
	const.pri 00000007
	pop.alt
	xchg
	sless
	jzer 00000118
	;$exp
	; line 00000050
	break	; 000074c0
	load.s.pri 0000000c
	push.pri
	load.s.pri fffffff8
	bounds 00000007
	pop.alt
	add
	align.pri 00000001
	lodb.i 00000001
	push.pri
	load.s.pri 00000010
	push.pri
	load.s.pri fffffff8
	bounds 00000007
	pop.alt
	add
	align.pri 00000001
	lodb.i 00000001
	pop.alt
	neq
	jzer 0000011a
	;$exp
	; line 00000050
	break	; 00007540
	const.pri 00000001
	stor.s fffffffc
	;$exp
l.0000011a		; 00007554
	; line 00000051
	break	; 00007554
	load.s.pri 0000000c
	push.pri
	load.s.pri fffffff8
	bounds 00000007
	pop.alt
	add
	align.pri 00000001
	push.pri
	load.s.pri 00000010
	push.pri
	load.s.pri fffffff8
	bounds 00000007
	pop.alt
	add
	align.pri 00000001
	lodb.i 00000001
	pop.alt
	strb.i 00000001
	;$exp
	jump 00000117
l.00000118		; 000075d0
	stack 00000004
	; line 00000053
	break	; 000075d8
	load.s.pri fffffffc
	stack 00000004
	retn

	proc	; layzDumpFrame
	; line 00000055
	break	; 000075f4
	;$lcl frame 00000014
	;$lcl txrx 00000010
	;$lcl port 0000000c
	; line 00000057
	break	; 000075f8
	load.pri 0000198c
	not
	jzer 0000011b
	;$exp
	; line 00000057
	break	; 00007610
	const.pri 00000000
	retn
l.0000011b		; 00007620
	; line 00000059
	break	; 00007620
	;$lcl hasdiff fffffffc
	stack fffffffc
	const.pri 00000000
	stor.s fffffffc
	;$exp
	; line 0000005a
	break	; 0000763c
	load.s.pri 0000000c
	jzer 0000011c
	;$exp
	; line 0000005b
	break	; 00007650
	load.s.pri 00000010
	jzer 0000011d
	load.s.pri 00000014
	push.pri
	;$par
	const.pri 00001a30
	const.alt 00000060
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call _layzHasDiff
	jump 0000011e
l.0000011d
	load.s.pri 00000014
	push.pri
	;$par
	const.pri 00001a30
	const.alt 00000058
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call _layzHasDiff
l.0000011e
	stor.s fffffffc
	;$exp
	jump 0000011f
l.0000011c		; 000076ec
	; line 00000060
	break	; 000076ec
	load.s.pri 00000010
	jzer 00000120
	load.s.pri 00000014
	push.pri
	;$par
	const.pri 00001990
	const.alt 00000060
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call _layzHasDiff
	jump 00000121
l.00000120
	load.s.pri 00000014
	push.pri
	;$par
	const.pri 00001990
	const.alt 00000058
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call _layzHasDiff
l.00000121
	stor.s fffffffc
	;$exp
l.0000011f		; 00007780
	; line 00000065
	break	; 00007780
	load.s.pri fffffffc
	jzer 00000122
	;$exp
	; line 00000066
	break	; 00007794
	;$lcl s ffffffc8
	stack ffffffcc
	const.pri 00000000
	addr.alt ffffffc8
	fill 00000034
	; line 00000067
	break	; 000077b8
	load.s.pri 00000014
	const.alt 00000006
	add
	align.pri 00000001
	lodb.i 00000001
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	load.s.pri 00000014
	const.alt 00000005
	add
	align.pri 00000001
	lodb.i 00000001
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	load.s.pri 00000014
	const.alt 00000004
	add
	align.pri 00000001
	lodb.i 00000001
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	load.s.pri 00000014
	const.alt 00000003
	add
	align.pri 00000001
	lodb.i 00000001
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	load.s.pri 00000014
	const.alt 00000002
	add
	align.pri 00000001
	lodb.i 00000001
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	load.s.pri 00000014
	const.alt 00000001
	add
	align.pri 00000001
	lodb.i 00000001
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	load.s.pri 00000014
	align.pri 00000001
	lodb.i 00000001
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	addr.pri 0000000c
	pushr.pri
	;$par
	const.pri 00001b14
	pushr.pri
	;$par
	const.pri 0000000d
	push.pri
	;$par
	addr.pri ffffffc8
	pushr.pri
	;$par
	const.pri 0000002c
	push.pri
	sysreq 00000003	; sprintf
	stack 00000030
	heap ffffffe4
	;$exp
	; line 0000006b
	break	; 0000798c
	;$lcl code ffffffbc
	stack fffffff4
	const.pri 00000000
	addr.alt ffffffbc
	fill 0000000c
	; line 0000006d
	break	; 000079b0
	;$lcl i ffffffb8
	stack fffffffc
	const.pri 00000000
	stor.s ffffffb8
	;$exp
	jump 00000125
l.00000123		; 000079d4
	; line 0000006d
	break	; 000079d4
	load.s.pri ffffffb8
	push.pri
	addr.pri ffffffb8
	inc.i
	pop.pri
	;$exp
l.00000125
	load.s.pri ffffffb8
	push.pri
	const.pri 0000000a
	pop.alt
	xchg
	sless
	jzer 00000124
	;$exp
	; line 0000006d
	break	; 00007a1c
	addr.pri ffffffbc
	push.pri
	load.s.pri ffffffb8
	bounds 0000000b
	pop.alt
	add
	align.pri 00000001
	push.pri
	load.s.pri 0000000c
	jzer 00000126
	const.pri 00001a30
	const.alt 00000018
	add
	push.pri
	load.s.pri ffffffb8
	bounds 0000000b
	pop.alt
	add
	align.pri 00000001
	lodb.i 00000001
	jump 00000127
l.00000126
	const.pri 00001990
	const.alt 00000018
	add
	push.pri
	load.s.pri ffffffb8
	bounds 0000000b
	pop.alt
	add
	align.pri 00000001
	lodb.i 00000001
l.00000127
	pop.alt
	strb.i 00000001
	;$exp
	jump 00000123
l.00000124		; 00007afc
	stack 00000004
	; line 0000006e
	break	; 00007b04
	const.pri 00000003
	push.pri
	;$par
	load.s.pri 00000010
	const.alt 00000001
	eq
	jzer 00000128
	const.pri 00001b40
	jump 00000129
l.00000128
	const.pri 00001b44
l.00000129
	pushr.pri
	;$par
	addr.pri ffffffbc
	pushr.pri
	;$par
	const.pri 0000000c
	push.pri
	sysreq 0000001f	; strcat
	stack 00000010
	;$exp
	; line 0000006f
	break	; 00007b74
	addr.pri ffffffc8
	push.pri
	;$par
	addr.pri ffffffbc
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	stack 00000040
l.00000122		; 00007bac
	stack 00000004
	const.pri 00000000
	retn


DATA 0010	; 00001b14
dump 7c25647c 20253032 78202530 32782025 30327820 25303278 20253032 78202530 
dump 32782025 3032780a 00000000 2d747800 2d727800 

CODE 0010	; 00007bc0
	proc	; _layz_calc_cs
	; line 00000076
	break	; 00007bc4
	;$lcl frame 0000000c
	; line 00000077
	break	; 00007bc8
	load.s.pri 0000000c
	const.alt 00000001
	add
	align.pri 00000001
	lodb.i 00000001
	push.pri
	load.s.pri 0000000c
	const.alt 00000002
	add
	align.pri 00000001
	lodb.i 00000001
	pop.alt
	add
	push.pri
	load.s.pri 0000000c
	const.alt 00000003
	add
	align.pri 00000001
	lodb.i 00000001
	pop.alt
	add
	push.pri
	load.s.pri 0000000c
	const.alt 00000004
	add
	align.pri 00000001
	lodb.i 00000001
	pop.alt
	add
	const.alt 000000ff
	and
	retn

	proc	; _layz_setup
	; line 0000007a
	break	; 00007c94
	;$lcl txto_ms 00000024
	;$lcl txto_cb 00000020
	;$lcl onpacket 0000001c
	;$lcl rxbof 00000018
	;$lcl txbof 00000014
	;$lcl nick 00000010
	;$lcl layz 0000000c
	; line 0000007b
	break	; 00007c98
	load.s.pri 0000000c
	const.alt 00000018
	add
	push.pri
	load.s.pri 00000010
	pop.alt
	movs 0000000c
	;$exp
	; line 0000007c
	break	; 00007cc8
	load.s.pri 0000000c
	const.alt 00000024
	add
	push.pri
	load.s.pri 00000014
	pop.alt
	stor.i
	;$exp
	; line 0000007d
	break	; 00007cf4
	load.s.pri 0000000c
	const.alt 00000028
	add
	push.pri
	load.s.pri 00000018
	pop.alt
	stor.i
	;$exp
	; line 0000007e
	break	; 00007d20
	load.s.pri 0000000c
	const.alt 0000002c
	add
	push.pri
	load.s.pri 0000001c
	pop.alt
	movs 00000014
	;$exp
	; line 0000007f
	break	; 00007d50
	load.s.pri 0000000c
	const.alt 00000040
	add
	push.pri
	load.s.pri 00000020
	pop.alt
	movs 00000014
	;$exp
	; line 00000080
	break	; 00007d80
	load.s.pri 0000000c
	const.alt 00000054
	add
	push.pri
	load.s.pri 00000024
	pop.alt
	stor.i
	;$exp
	; line 00000081
	break	; 00007dac
	load.s.pri 0000000c
	const.alt 00000070
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 00000082
	break	; 00007dd8
	load.s.pri 0000000c
	const.alt 00000074
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 00000083
	break	; 00007e04
	load.s.pri 0000000c
	const.alt 00000078
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 00000084
	break	; 00007e30
	load.s.pri 0000000c
	const.alt 0000009c
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 00000085
	break	; 00007e5c
	load.s.pri 0000000c
	const.alt 0000007c
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 00000086
	break	; 00007e88
	;$lcl i fffffffc
	stack fffffffc
	const.pri 00000000
	stor.s fffffffc
	;$exp
	jump 0000012c
l.0000012a		; 00007eac
	; line 00000086
	break	; 00007eac
	load.s.pri fffffffc
	push.pri
	addr.pri fffffffc
	inc.i
	pop.pri
	;$exp
l.0000012c
	load.s.pri fffffffc
	push.pri
	const.pri 00000007
	pop.alt
	xchg
	sless
	jzer 0000012b
	;$exp
	; line 00000086
	break	; 00007ef4
	load.s.pri 0000000c
	const.alt 00000080
	add
	push.pri
	load.s.pri fffffffc
	bounds 00000006
	shl.c.pri 00000002
	pop.alt
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	jump 0000012a
l.0000012b		; 00007f4c
	stack 00000004
	const.pri 00000000
	retn

	proc	; layzInit
	; line 00000088
	break	; 00007f64
	;$lcl txto_ms 00000024
	;$lcl txto_cb 00000020
	;$lcl onpacket 0000001c
	;$lcl rxbof 00000018
	;$lcl txbof 00000014
	;$lcl nick 00000010
	;$lcl port 0000000c
	; line 0000008a
	break	; 00007f68
	; line 0000008b
	break	; 00007f6c
	load.pri 00001b48
	jzer 0000012d
	;$exp
	; line 0000008c
	break	; 00007f80
	const.pri 00000001
	stor 00001b48
	;$exp
	; line 0000008d
	break	; 00007f94
	const.pri 0000ea60
	push.pri
	;$par
	const.pri 00001b4c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call setInterval
	;$exp
l.0000012d		; 00007fc4
	; line 00000090
	break	; 00007fc4
	load.s.pri 00000024
	push.pri
	;$par
	load.s.pri 00000020
	push.pri
	;$par
	load.s.pri 0000001c
	push.pri
	;$par
	load.s.pri 00000018
	push.pri
	;$par
	load.s.pri 00000014
	push.pri
	;$par
	load.s.pri 00000010
	push.pri
	;$par
	load.s.pri 0000000c
	jzer 0000012e
	const.pri 00001a30
	jump 0000012f
l.0000012e
	const.pri 00001990
l.0000012f
	push.pri
	;$par
	const.pri 0000001c
	push.pri
	call _layz_setup
	;$exp
	; line 00000092
	break	; 00008050
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000020	; rM2M_UartClose
	stack 00000008
	;$exp
	; line 00000094
	break	; 0000807c
	;$lcl fcb fffffffc
	stack fffffffc
	load.s.pri 0000000c
	jzer 00000130
	const.pri 00001b5c
	jump 00000131
l.00000130
	const.pri 00001b6c
l.00000131
	pushr.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000004	; funcidx
	stack 00000008
	stor.s fffffffc
	;$exp
	; line 00000095
	break	; 000080d8
	load.s.pri fffffffc
	push.pri
	;$par
	const.pri 00000011
	push.pri
	;$par
	const.pri 00002580
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000021	; rM2M_UartInit
	stack 00000014
	;$exp
	stack 00000004
	const.pri 00000000
	retn


DATA 0010	; 00001b48
dump 00000000 6c61797a 4d6f6e69 746f7254 61736b00 5f6c6179 7a315f6f 6e5f7278 
dump 00000000 5f6c6179 7a305f6f 6e5f7278 00000000 

CODE 0010	; 0000813c
	proc	; _layz_on_rxchunk
	; line 0000009c
	break	; 00008140
	;$lcl len 00000014
	;$lcl chunk 00000010
	;$lcl layz 0000000c
	; line 0000009e
	break	; 00008144
	load.s.pri 0000000c
	const.alt 00000004
	add
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _clearTimeoutInterval
	;$exp
	; line 000000a0
	break	; 00008174
	;$lcl err fffffffc
	stack fffffffc
	const.pri 00000000
	stor.s fffffffc
	;$exp
	; line 000000a1
	break	; 00008190
	;$lcl i fffffff8
	stack fffffffc
	const.pri 00000000
	stor.s fffffff8
	;$exp
	jump 00000134
l.00000132		; 000081b4
	; line 000000a1
	break	; 000081b4
	load.s.pri fffffff8
	push.pri
	addr.pri fffffff8
	inc.i
	pop.pri
	;$exp
l.00000134
	load.s.pri fffffff8
	push.pri
	load.s.pri 00000014
	pop.alt
	xchg
	sless
	jzer 00000133
	;$exp
	; line 000000a2
	break	; 000081fc
	;$lcl c fffffff4
	stack fffffffc
	load.s.pri 00000010
	push.pri
	load.s.pri fffffff8
	pop.alt
	add
	align.pri 00000001
	lodb.i 00000001
	stor.s fffffff4
	;$exp
	; line 000000a3
	break	; 0000823c
	load.s.pri 0000000c
	const.alt 00000068
	add
	push.pri
	load.s.pri 0000000c
	const.alt 00000070
	add
	push.pri
	load.i
	swap.pri
	inc.i
	pop.pri
	bounds 00000007
	pop.alt
	add
	align.pri 00000001
	push.pri
	load.s.pri fffffff4
	pop.alt
	strb.i 00000001
	;$exp
	; line 000000a5
	break	; 000082b0
	load.s.pri 0000000c
	const.alt 00000070
	add
	load.i
	switch 00000135
l.00000137		; 000082d4
	; line 000000a6
	break	; 000082d4
	load.s.pri fffffff4
	push.pri
	load.s.pri 0000000c
	const.alt 00000028
	add
	load.i
	pop.alt
	neq
	stor.s fffffffc
	;$exp
	jump 00000136
l.00000138		; 00008314
	; line 000000a7
	break	; 00008314
	load.s.pri fffffff4
	const.alt 00000003
	neq
	stor.s fffffffc
	;$exp
	jump 00000136
l.00000139		; 0000833c
	; line 000000a8
	break	; 0000833c
	const.pri 00000000
	stor.s fffffffc
	;$exp
	jump 00000136
l.0000013a		; 00008358
	; line 000000a9
	break	; 00008358
	load.s.pri fffffff4
	push.pri
	load.s.pri 0000000c
	const.alt 00000068
	add
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _layz_calc_cs
	pop.alt
	neq
	stor.s fffffffc
	;$exp
	jump 00000136
l.0000013b		; 000083ac
	; line 000000ab
	break	; 000083ac
	load.s.pri fffffff4
	const.alt 000000fd
	neq
	stor.s fffffffc
	;$exp
	; line 000000ac
	break	; 000083cc
	load.s.pri fffffffc
	not
	jzer 0000013c
	;$exp
	; line 000000ad
	break	; 000083e4
	load.s.pri 0000000c
	const.alt 00000078
	add
	push.pri
	load.i
	swap.pri
	inc.i
	pop.pri
	;$exp
	; line 000000ae
	break	; 00008410
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 0000002c
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call setTimeout
	;$exp
	; line 000000af
	break	; 0000844c
	load.s.pri 0000000c
	const.alt 00000070
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 000000b1
	break	; 00008478
	load.s.pri 0000000c
	const.alt 00000040
	add
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _clearTimeoutInterval
	;$exp
l.0000013c		; 000084a8
	jump 00000136
l.00000135		; 000084b0
	casetbl
	case 00000007 00000136
	case 00000001 00000137
	case 00000002 00000138
	case 00000003 00000139
	case 00000004 00000139
	case 00000005 00000139
	case 00000006 0000013a
	case 00000007 0000013b
l.00000136		; 000084f4
	stack 00000004
	jump 00000132
l.00000133		; 00008504
	stack 00000004
	; line 000000b7
	break	; 0000850c
	load.s.pri fffffffc
	jzer 0000013d
	;$exp
	; line 000000b8
	break	; 00008520
	load.s.pri 0000000c
	const.alt 00000080
	add
	push.pri
	load.s.pri 0000000c
	const.alt 00000070
	add
	load.i
	push.pri
	const.pri 00000001
	pop.alt
	sub
	bounds 00000006
	shl.c.pri 00000002
	pop.alt
	add
	push.pri
	load.i
	swap.pri
	inc.i
	pop.pri
	;$exp
	; line 000000b9
	break	; 00008594
	load.s.pri 0000000c
	const.alt 00000070
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
l.0000013d		; 000085c0
	; line 000000bd
	break	; 000085c0
	load.s.pri 0000000c
	const.alt 00000070
	add
	load.i
	jzer 0000013e
	;$exp
	; line 000000bd
	break	; 000085e4
	const.pri 00000032
	push.pri
	;$par
	load.s.pri 0000000c
	const.alt 00000004
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call setTimeout
	;$exp
l.0000013e		; 00008620
	stack 00000004
	const.pri 00000000
	retn

	proc	; _layz0_on_cto
	; line 000000c1
	break	; 00008638
	; line 000000c2
	break	; 0000863c
	const.pri 00001990
	const.alt 0000007c
	add
	push.pri
	load.i
	swap.pri
	inc.i
	pop.pri
	;$exp
	; line 000000c3
	break	; 00008668
	const.pri 00001990
	const.alt 00000070
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	const.pri 00000000
	retn

	proc	; _layz1_on_cto
	; line 000000c6
	break	; 000086a4
	; line 000000c7
	break	; 000086a8
	const.pri 00001a30
	const.alt 0000007c
	add
	push.pri
	load.i
	swap.pri
	inc.i
	pop.pri
	;$exp
	; line 000000c8
	break	; 000086d4
	const.pri 00001a30
	const.alt 00000070
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	const.pri 00000000
	retn

	proc	; _layz0_on_rx
	; line 000000cc
	break	; 00008710
	;$lcl len 00000010
	;$lcl chunk 0000000c
	; line 000000cd
	break	; 00008714
	load.pri 00001988
	jzer 0000013f
	;$exp
	; line 000000cd
	break	; 00008728
	load.s.pri 00000010
	push.pri
	;$par
	load.s.pri 0000000c
	pushr.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	sysreq 00000022	; rM2M_UartWrite
	stack 00000010
	;$exp
l.0000013f		; 0000876c
	; line 000000ce
	break	; 0000876c
	load.s.pri 00000010
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00001990
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call _layz_on_rxchunk
	;$exp
	const.pri 00000000
	retn

	proc	; _layz1_on_rx
	; line 000000d1
	break	; 000087b8
	;$lcl len 00000010
	;$lcl chunk 0000000c
	; line 000000d2
	break	; 000087bc
	load.pri 00001988
	jzer 00000140
	;$exp
	; line 000000d2
	break	; 000087d0
	load.s.pri 00000010
	push.pri
	;$par
	load.s.pri 0000000c
	pushr.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	sysreq 00000022	; rM2M_UartWrite
	stack 00000010
	;$exp
l.00000140		; 00008814
	; line 000000d3
	break	; 00008814
	load.s.pri 00000010
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00001a30
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call _layz_on_rxchunk
	;$exp
	const.pri 00000000
	retn

	proc	; _layz_inc_cnt_txframes
	; line 000000d7
	break	; 00008860
	;$lcl layz 0000000c
	; line 000000d8
	break	; 00008864
	load.s.pri 0000000c
	const.alt 00000074
	add
	push.pri
	load.i
	swap.pri
	inc.i
	pop.pri
	;$exp
	const.pri 00000000
	retn

	proc	; layzSend
	; line 000000db
	break	; 000088a0
	;$lcl f4 00000018
	;$lcl f3 00000014
	;$lcl f2 00000010
	;$lcl port 0000000c
	; line 000000dc
	break	; 000088a4
	load.pri 00001988
	jzer 00000141
	;$exp
	; line 000000dd
	break	; 000088b8
	const.pri 00001b84
	push.pri
	;$par
	const.pri 00001b7c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	; line 000000de
	break	; 000088e8
	const.pri 00000000
	retn
l.00000141		; 000088f8
	; line 000000e0
	break	; 000088f8
	;$lcl z ffffff60
	stack ffffff60
	const.pri 00000000
	addr.alt ffffff60
	fill 000000a0
	; line 000000e1
	break	; 0000891c
	load.s.pri 0000000c
	push.pri
	;$par
	addr.pri ffffff60
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call layz
	;$exp
	; line 000000e2
	break	; 0000894c
	;$lcl txframe ffffff58
	stack fffffff8
	const.pri 00000000
	addr.alt ffffff58
	fill 00000008
	; line 000000e3
	break	; 00008970
	addr.pri ffffff58
	align.pri 00000001
	push.pri
	addr.pri ffffff60
	const.alt 00000024
	add
	load.i
	pop.alt
	strb.i 00000001
	;$exp
	; line 000000e4
	break	; 000089ac
	addr.pri ffffff58
	const.alt 00000001
	add
	align.pri 00000001
	push.pri
	const.pri 00000003
	pop.alt
	strb.i 00000001
	;$exp
	; line 000000e5
	break	; 000089e4
	addr.pri ffffff58
	const.alt 00000002
	add
	align.pri 00000001
	push.pri
	load.s.pri 00000010
	pop.alt
	strb.i 00000001
	;$exp
	; line 000000e6
	break	; 00008a1c
	addr.pri ffffff58
	const.alt 00000003
	add
	align.pri 00000001
	push.pri
	load.s.pri 00000014
	pop.alt
	strb.i 00000001
	;$exp
	; line 000000e7
	break	; 00008a54
	addr.pri ffffff58
	const.alt 00000004
	add
	align.pri 00000001
	push.pri
	load.s.pri 00000018
	pop.alt
	strb.i 00000001
	;$exp
	; line 000000e8
	break	; 00008a8c
	addr.pri ffffff58
	const.alt 00000005
	add
	align.pri 00000001
	push.pri
	addr.pri ffffff58
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _layz_calc_cs
	pop.alt
	strb.i 00000001
	;$exp
	; line 000000e9
	break	; 00008adc
	addr.pri ffffff58
	const.alt 00000006
	add
	align.pri 00000001
	push.pri
	const.pri 000000fd
	pop.alt
	strb.i 00000001
	;$exp
	; line 000000eb
	break	; 00008b14
	load.s.pri 0000000c
	jzer 00000142
	const.pri 00001a30
	jump 00000143
l.00000142
	const.pri 00001990
l.00000143
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _layz_inc_cnt_txframes
	;$exp
	; line 000000ed
	break	; 00008b58
	const.pri 00000007
	push.pri
	;$par
	addr.pri ffffff58
	pushr.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	sysreq 00000022	; rM2M_UartWrite
	stack 00000010
	;$exp
	; line 000000ee
	break	; 00008b9c
	addr.pri ffffff58
	push.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call layzDumpFrame
	;$exp
	; line 000000f1
	break	; 00008bd8
	addr.pri ffffff60
	const.alt 00000054
	add
	load.i
	push.pri
	;$par
	addr.pri ffffff60
	const.alt 00000040
	add
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call setTimeout
	;$exp
	stack 000000a8
	const.pri 00000000
	retn


DATA 0010	; 00001b7c
dump 69666175 6c740000 6c61797a 53656e64 206e6f74 20617661 696c6162 6c652064 
dump 75652074 6f206272 69646765 206d6f64 65206163 74697665 00000000 

DATA 0011	; 00001bb8
dump 00000000 00000000 00000000 
dump 00000000 

CODE 0011	; 00008c38
	proc	; on_rx_ioc
	; line 0000000b
	break	; 00008c3c
	; line 0000000d
	break	; 00008c40
	load.pri 00001bc4
	push.pri
	const.pri 00000003
	pop.alt
	xchg
	sgeq
	jzer 00000144
	;$exp
	; line 0000000e
	break	; 00008c6c
	;$lcl s ffffffcc
	stack ffffffcc
	const.pri 00000000
	addr.alt ffffffcc
	fill 00000034
	; line 0000000f
	break	; 00008c90
	const.pri 00001bc4
	pushr.pri
	;$par
	const.pri 00001bc8
	pushr.pri
	;$par
	const.pri 0000000d
	push.pri
	;$par
	addr.pri ffffffcc
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000003	; sprintf
	stack 00000014
	;$exp
	; line 00000010
	break	; 00008ce0
	addr.pri ffffffcc
	push.pri
	;$par
	const.pri 00001bdc
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	; line 00000011
	break	; 00008d10
	const.pri 00000000
	stor 00001bc4
	;$exp
	stack 00000034
l.00000144		; 00008d2c
	; line 00000014
	break	; 00008d2c
	;$lcl z ffffff60
	stack ffffff60
	const.pri 00000000
	addr.alt ffffff60
	fill 000000a0
	; line 00000015
	break	; 00008d50
	const.pri 00000000
	push.pri
	;$par
	addr.pri ffffff60
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call layz
	;$exp
	; line 00000016
	break	; 00008d80
	addr.pri ffffff60
	const.alt 00000068
	add
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call layzDumpFrame
	;$exp
	; line 0000001a
	break	; 00008dc8
	;$lcl ok ffffff5c
	stack fffffffc
	addr.pri ffffff60
	const.alt 00000068
	add
	const.alt 00000002
	add
	align.pri 00000001
	lodb.i 00000001
	const.alt 000000c4
	and
	const.alt 00000000
	eq
	jnz 00000145
	addr.pri ffffff60
	const.alt 00000068
	add
	const.alt 00000003
	add
	align.pri 00000001
	lodb.i 00000001
	const.alt 00000000
	eq
	jnz 00000145
	addr.pri ffffff60
	const.alt 00000068
	add
	const.alt 00000004
	add
	align.pri 00000001
	lodb.i 00000001
	const.alt 000000fe
	and
	const.alt 00000000
	eq
	jnz 00000145
	const.pri 00000000
	jump 00000146
l.00000145
	const.pri 00000001
l.00000146
	stor.s ffffff5c
	;$exp
	; line 0000001d
	break	; 00008ed8
	load.s.pri ffffff5c
	not
	jzer 00000147
	;$exp
	; line 0000001e
	break	; 00008ef0
	const.pri 00001990
	const.alt 0000009c
	add
	push.pri
	load.i
	swap.pri
	inc.i
	pop.pri
	;$exp
	; line 0000001f
	break	; 00008f1c
	const.pri 00000000
	stack 000000a4
	retn
l.00000147		; 00008f34
	; line 00000022
	break	; 00008f34
	load.pri 00001988
	jzer 00000148
	;$exp
	; line 00000022
	break	; 00008f48
	const.pri 00000000
	stack 000000a4
	retn
l.00000148		; 00008f60
	; line 00000026
	break	; 00008f60
	const.pri 00001bb8
	const.alt 00000004
	add
	load.i
	jzer 00000149
	const.pri 00000001
	jump 0000014a
l.00000149
	const.pri 00000000
l.0000014a
	push.pri
	;$par
	const.pri 00001bb8
	const.alt 00000008
	add
	load.i
	push.pri
	;$par
	const.pri 00001bb8
	load.i
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000010
	push.pri
	call layzSend
	;$exp
	stack 000000a4
	const.pri 00000000
	retn


DATA 0011	; 00001bc8
dump 6261636b 20616674 65722025 64206661 696c7300 696f632d 7478746f 00000000 

CODE 0011	; 00009000
	proc	; on_txto_ioc
	; line 0000002c
	break	; 00009004
	; line 0000002d
	break	; 00009008
	push.pri
	const.pri 00001bc4
	inc.i
	pop.pri
	load.pri 00001bc4
	const.alt 00000003
	eq
	jzer 0000014b
	;$exp
	; line 0000002e
	break	; 0000903c
	const.pri 00001bf4
	push.pri
	;$par
	const.pri 00001be8
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
l.0000014b		; 0000906c
	const.pri 00000000
	retn


DATA 0011	; 00001be8
dump 696f632d 7478746f 00000000 494f4320 74782074 696d656f 7574202d 20706879 
dump 73696361 6c206469 73706c61 7920636f 6e6e6563 7465643f 00000000 

DATA 0012	; 00001c24
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000
dump 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000
dump 00000000

CODE 0012	; 00009078
	proc	; _dsp_set_Exx
	; line 00000046
	break	; 0000907c
	;$lcl exx 0000000c
	; line 00000047
	break	; 00009080
	const.pri 00001c40
	const.alt 00000004
	add
	push.pri
	load.s.pri 0000000c
	pop.alt
	stor.i
	;$exp
	; line 00000048
	break	; 000090ac
	const.pri 00001c70
	push.pri
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00001c70
	load.i
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 0000001e	; max
	stack 0000000c
	pop.alt
	stor.i
	;$exp
	; line 00000049
	break	; 000090fc
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001ca4
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 000017f4
	const.alt 0000002c
	add
	load.i
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 0000001e	; max
	stack 0000000c
	push.pri
	;$par
	const.pri 000017f4
	const.alt 0000002c
	add
	push.pri
	;$par
	const.pri 00000029
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	;$exp
	; line 0000004b
	break	; 00009198
	const.pri 00001cac
	push.pri
	;$par
	const.pri 00001ca8
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 000017f4
	const.alt 0000000c
	add
	push.pri
	;$par
	const.pri 00000077
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	jzer 0000014c
	;$exp
	; line 0000004d
	break	; 00009200
	load.s.pri 0000000c
	jzer 0000014d
	;$exp
	; line 0000004d
	break	; 00009214
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000010
	push.pri
	call layzSend
	;$exp
l.0000014d		; 0000925c
	; line 0000004e
	break	; 0000925c
	const.pri 0000005a
	stor 000017c8
	;$exp
l.0000014c		; 00009270
	const.pri 00000000
	retn


DATA 0012	; 00001ca4
dump 00000000 45787800 45253032 64206672 6f6d2070 68797369 63616c20 636f6e74 
dump 726f6c6c 65720000 

CODE 0012	; 0000927c
	proc	; setPHctrlr
	; line 00000057
	break	; 00009280
	;$lcl ph 0000000c
	; line 00000058
	break	; 00009284
	load.s.pri 0000000c
	push.pri
	const.pri 00001c64
	load.i
	pop.alt
	eq
	jzer 0000014e
	;$exp
	; line 00000058
	break	; 000092b0
	const.pri 00000000
	retn
l.0000014e		; 000092c0
	; line 0000005a
	break	; 000092c0
	;$lcl s ffffffcc
	stack ffffffcc
	const.pri 00000000
	addr.alt ffffffcc
	fill 00000034
	; line 0000005b
	break	; 000092e4
	const.pri 00001c64
	pushr.pri
	;$par
	addr.pri 0000000c
	pushr.pri
	;$par
	const.pri 00001ccc
	pushr.pri
	;$par
	const.pri 0000000d
	push.pri
	;$par
	addr.pri ffffffcc
	pushr.pri
	;$par
	const.pri 00000014
	push.pri
	sysreq 00000003	; sprintf
	stack 00000018
	;$exp
	; line 0000005c
	break	; 00009340
	addr.pri ffffffcc
	push.pri
	;$par
	const.pri 00001cd4
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	; line 0000005e
	break	; 00009370
	const.pri 00001c64
	push.pri
	load.s.pri 0000000c
	pop.alt
	stor.i
	;$exp
	; line 00000062
	break	; 00009390
	load.s.pri 0000000c
	const.alt 00000000
	eq
	jzer 0000014f
	;$exp
	; line 00000064
	break	; 000093b0
	const.pri 00001ce4
	push.pri
	;$par
	const.pri 00001cdc
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	; line 00000065
	break	; 000093e0
	const.pri 00001c64
	const.alt 00000004
	add
	push.pri
	const.pri ffffffff
	pop.alt
	stor.i
	;$exp
	; line 00000067
	break	; 0000940c
	const.pri 00001c24
	const.alt 00000010
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 00000068
	break	; 00009438
	const.pri 00001c24
	const.alt 00000014
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 00000069
	break	; 00009464
	const.pri 00001c24
	const.alt 00000018
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 0000006c
	break	; 00009490
	const.pri 00001cf4
	push.pri
	;$par
	const.pri 00001cec
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	; line 0000006d
	break	; 000094c0
	const.pri 00001c64
	const.alt 00000008
	add
	push.pri
	const.pri ffffffff
	pop.alt
	stor.i
	;$exp
	; line 0000006f
	break	; 000094ec
	const.pri 00001c24
	const.alt 00000008
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	jump 00000150
l.0000014f		; 00009520
	; line 00000078
	break	; 00009520
	const.pri 00001d04
	push.pri
	;$par
	const.pri 00001cfc
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	; line 00000079
	break	; 00009550
	const.pri 00001c64
	const.alt 00000008
	add
	push.pri
	const.pri 00000001
	pop.alt
	stor.i
	;$exp
	; line 0000007b
	break	; 0000957c
	const.pri 00001c24
	const.alt 00000004
	add
	push.pri
	const.pri 00000001
	pop.alt
	stor.i
	;$exp
	; line 0000007c
	break	; 000095a8
	const.pri 00001c24
	const.alt 00000008
	add
	push.pri
	const.pri 00000001
	pop.alt
	stor.i
	;$exp
	; line 00000081
	break	; 000095d4
	load.s.pri 0000000c
	const.alt 00000002
	eq
	jzer 00000151
	;$exp
	; line 00000082
	break	; 000095f4
	const.pri 00001d14
	push.pri
	;$par
	const.pri 00001d0c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	; line 00000083
	break	; 00009624
	const.pri 00001c64
	const.alt 00000004
	add
	push.pri
	const.pri 00000001
	pop.alt
	stor.i
	;$exp
	; line 00000085
	break	; 00009650
	const.pri 00001c24
	const.alt 00000010
	add
	push.pri
	const.pri 00000001
	pop.alt
	stor.i
	;$exp
	; line 00000086
	break	; 0000967c
	const.pri 00001c24
	const.alt 00000014
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 00000087
	break	; 000096a8
	const.pri 00001c24
	const.alt 00000018
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 00000088
	break	; 000096d4
	const.pri 00001c24
	const.alt 0000000c
	add
	push.pri
	const.pri 00000001
	pop.alt
	stor.i
	;$exp
l.00000151		; 00009700
l.00000150		; 00009700
	stack 00000034
	const.pri 00000000
	retn


DATA 0012	; 00001ccc
dump 25642028 25642900 70686374 726c0000 70686374 726c7200 6874722d 6f666600 
dump 70686374 726c7200 77702d6f 66660000 70686374 726c7200 77702d6f 6e000000 
dump 70686374 726c7200 6874722d 6f6e0000 

CODE 0012	; 00009714
	proc	; dsp_PHctrlr_500ms
	; line 00000090
	break	; 00009718
	; line 00000095
	break	; 0000971c
	const.pri 00001c64
	const.alt 00000008
	add
	load.i
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sless
	jzer 00000152
	;$exp
	; line 00000096
	break	; 00009758
	const.pri 00001c64
	const.alt 00000008
	add
	push.pri
	const.pri fffffc18
	push.pri
	;$par
	const.pri 00001c64
	const.alt 00000008
	add
	dec.i
	load.i
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 0000001e	; max
	stack 0000000c
	pop.alt
	stor.i
	;$exp
	; line 00000098
	break	; 000097c4
	const.pri 00001c64
	const.alt 00000008
	add
	load.i
	push.pri
	const.pri fffffffa
	pop.alt
	xchg
	sless
	jzer 00000153
	;$exp
	; line 00000098
	break	; 00009800
	const.pri 00001c24
	const.alt 00000004
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
l.00000153		; 0000982c
l.00000152		; 0000982c
	; line 0000009c
	break	; 0000982c
	const.pri 00001c64
	const.alt 00000004
	add
	load.i
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sgrtr
	jzer 00000154
	;$exp
	; line 0000009d
	break	; 00009868
	const.pri 00001c64
	const.alt 00000004
	add
	push.pri
	const.pri 000003e8
	push.pri
	;$par
	const.pri 00001c64
	const.alt 00000004
	add
	inc.i
	load.i
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000016	; min
	stack 0000000c
	pop.alt
	stor.i
	;$exp
	; line 0000009f
	break	; 000098d4
	const.pri 00001c64
	const.alt 00000004
	add
	load.i
	push.pri
	const.pri 00000004
	pop.alt
	xchg
	sgeq
	jzer 00000155
	;$exp
	; line 0000009f
	break	; 00009910
	const.pri 00001c24
	const.alt 00000014
	add
	push.pri
	const.pri 00000001
	pop.alt
	stor.i
	;$exp
l.00000155		; 0000993c
	; line 000000a0
	break	; 0000993c
	const.pri 00001c64
	const.alt 00000004
	add
	load.i
	push.pri
	const.pri 00000028
	pop.alt
	xchg
	sgeq
	jzer 00000156
	;$exp
	; line 000000a0
	break	; 00009978
	const.pri 00001c24
	const.alt 00000018
	add
	push.pri
	const.pri 00000001
	pop.alt
	stor.i
	;$exp
l.00000156		; 000099a4
l.00000154		; 000099a4
	; line 000000a4
	break	; 000099a4
	const.pri 00001c64
	const.alt 00000004
	add
	load.i
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sless
	jzer 00000157
	;$exp
	; line 000000a5
	break	; 000099e0
	const.pri 00001c64
	const.alt 00000004
	add
	push.pri
	const.pri fffffc18
	push.pri
	;$par
	const.pri 00001c64
	const.alt 00000004
	add
	dec.i
	load.i
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 0000001e	; max
	stack 0000000c
	pop.alt
	stor.i
	;$exp
	; line 000000a7
	break	; 00009a4c
	const.pri 00001c64
	const.alt 00000004
	add
	load.i
	push.pri
	const.pri ffffffb0
	pop.alt
	xchg
	sless
	jzer 00000158
	;$exp
	; line 000000a7
	break	; 00009a88
	const.pri 00001c24
	const.alt 0000000c
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
l.00000158		; 00009ab4
l.00000157		; 00009ab4
	const.pri 00000000
	retn


DATA 0012	; 00001d1c
dump 00000000 

CODE 0012	; 00009ac0
	proc	; on_txto_dsp
	; line 000000af
	break	; 00009ac4
	; line 000000b3
	break	; 00009ac8
	push.pri
	const.pri 00001d1c
	inc.i
	pop.pri
	load.pri 00001d1c
	push.pri
	const.pri 00000003
	pop.alt
	xchg
	sgrtr
	jzer 00000159
	;$exp
	; line 000000b4
	break	; 00009b08
	const.pri 000000ff
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _dsp_set_Exx
	;$exp
l.00000159		; 00009b2c
	const.pri 00000000
	retn

	proc	; on_rx_dsp
	; line 000000bb
	break	; 00009b3c
	; line 000000bd
	break	; 00009b40
	;$lcl z ffffff60
	stack ffffff60
	const.pri 00000000
	addr.alt ffffff60
	fill 000000a0
	; line 000000be
	break	; 00009b64
	const.pri 00000001
	push.pri
	;$par
	addr.pri ffffff60
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call layz
	;$exp
	; line 000000bf
	break	; 00009b94
	addr.pri ffffff60
	const.alt 00000068
	add
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call layzDumpFrame
	;$exp
	; line 000000c1
	break	; 00009bdc
	;$lcl tw ffffff5c
	stack fffffffc
	addr.pri ffffff60
	const.alt 00000068
	add
	const.alt 00000002
	add
	align.pri 00000001
	lodb.i 00000001
	stor.s ffffff5c
	;$exp
	; line 000000c2
	break	; 00009c20
	;$lcl Exx ffffff58
	stack fffffffc
	addr.pri ffffff60
	const.alt 00000068
	add
	const.alt 00000003
	add
	align.pri 00000001
	lodb.i 00000001
	stor.s ffffff58
	;$exp
	; line 000000c3
	break	; 00009c64
	;$lcl booted ffffff54
	stack fffffffc
	addr.pri ffffff60
	const.alt 00000068
	add
	const.alt 00000004
	add
	align.pri 00000001
	lodb.i 00000001
	stor.s ffffff54
	;$exp
	; line 000000c7
	break	; 00009ca8
	;$lcl ok ffffff50
	stack fffffffc
	load.s.pri ffffff5c
	push.pri
	const.pri 00000032
	pop.alt
	xchg
	sless
	jnz 0000015a
	load.s.pri ffffff58
	push.pri
	const.pri 00000014
	pop.alt
	xchg
	sless
	jnz 0000015a
	load.s.pri ffffff54
	const.alt 000000fe
	and
	const.alt 00000000
	eq
	jnz 0000015a
	const.pri 00000000
	jump 0000015b
l.0000015a
	const.pri 00000001
l.0000015b
	stor.s ffffff50
	;$exp
	; line 000000ca
	break	; 00009d4c
	load.s.pri ffffff50
	not
	jzer 0000015c
	;$exp
	; line 000000cb
	break	; 00009d64
	const.pri 00001a30
	const.alt 0000009c
	add
	push.pri
	load.i
	swap.pri
	inc.i
	pop.pri
	;$exp
	; line 000000cc
	break	; 00009d90
	const.pri 00000000
	stack 000000b0
	retn
l.0000015c		; 00009da8
	; line 000000cf
	break	; 00009da8
	const.pri 00000000
	stor 00001d1c
	;$exp
	; line 000000d1
	break	; 00009dbc
	const.pri 00001c40
	const.alt 00000008
	add
	push.pri
	load.s.pri ffffff5c
	pop.alt
	stor.i
	;$exp
	; line 000000d2
	break	; 00009de8
	const.pri 00001c40
	push.pri
	load.s.pri ffffff54
	pop.alt
	stor.i
	;$exp
	; line 000000d4
	break	; 00009e08
	load.s.pri ffffff58
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _dsp_set_Exx
	;$exp
	; line 000000d7
	break	; 00009e2c
	const.pri 00001ca0
	load.i
	push.pri
	const.pri 00001c40
	load.i
	pop.alt
	neq
	jzer 0000015d
	;$exp
	; line 000000d8
	break	; 00009e5c
	const.pri 00001ca0
	push.pri
	const.pri 00001c40
	load.i
	pop.alt
	stor.i
	;$exp
	; line 000000d9
	break	; 00009e80
	load.s.pri ffffff54
	jzer 0000015e
	;$exp
	; line 000000d9
	break	; 00009e94
	const.pri 00001d28
	push.pri
	;$par
	const.pri 00001d20
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	jump 0000015f
l.0000015e		; 00009ecc
	; line 000000da
	break	; 00009ecc
	const.pri 00001d38
	push.pri
	;$par
	const.pri 00001d30
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
l.0000015f		; 00009efc
l.0000015d		; 00009efc
	; line 000000e2
	break	; 00009efc
	;$lcl sum ffffff4c
	stack fffffffc
	load.s.pri ffffff5c
	stor.s ffffff4c
	;$exp
	; line 000000e3
	break	; 00009f18
	;$lcl i ffffff48
	stack fffffffc
	const.pri 00000001
	stor.s ffffff48
	;$exp
	jump 00000162
l.00000160		; 00009f3c
	; line 000000e3
	break	; 00009f3c
	load.s.pri ffffff48
	push.pri
	addr.pri ffffff48
	inc.i
	pop.pri
	;$exp
l.00000162
	load.s.pri ffffff48
	push.pri
	const.pri 00000004
	pop.alt
	xchg
	sless
	jzer 00000161
	;$exp
	; line 000000e4
	break	; 00009f84
	;$lcl t ffffff44
	stack fffffffc
	const.pri 00001c40
	const.alt 0000000c
	add
	push.pri
	load.s.pri ffffff48
	push.pri
	const.pri 00000001
	pop.alt
	sub
	bounds 00000003
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	stor.s ffffff44
	;$exp
	; line 000000e5
	break	; 00009fe8
	load.s.pri ffffff44
	const.alt 00000000
	eq
	jzer 00000163
	;$exp
	; line 000000e5
	break	; 0000a008
	load.s.pri ffffff5c
	stor.s ffffff44
	;$exp
l.00000163		; 0000a01c
	; line 000000e6
	break	; 0000a01c
	const.pri 00001c40
	const.alt 0000000c
	add
	push.pri
	load.s.pri ffffff48
	bounds 00000003
	shl.c.pri 00000002
	pop.alt
	add
	push.pri
	load.s.pri ffffff44
	pop.alt
	stor.i
	;$exp
	; line 000000e7
	break	; 0000a06c
	load.s.pri ffffff4c
	push.pri
	load.s.pri ffffff44
	pop.alt
	add
	stor.s ffffff4c
	;$exp
	stack 00000004
	jump 00000160
l.00000161		; 0000a0a4
	stack 00000004
	; line 000000e9
	break	; 0000a0ac
	const.pri 00001c40
	const.alt 0000000c
	add
	push.pri
	load.s.pri ffffff5c
	pop.alt
	stor.i
	;$exp
	; line 000000eb
	break	; 0000a0d8
	const.pri 00001c40
	const.alt 0000001c
	add
	load.i
	push.pri
	load.s.pri ffffff4c
	pop.alt
	sub
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sless
	jzer 00000165
	const.pri 00001c40
	const.alt 0000001c
	add
	load.i
	push.pri
	load.s.pri ffffff4c
	pop.alt
	sub
	neg
	jump 00000166
l.00000165
	const.pri 00001c40
	const.alt 0000001c
	add
	load.i
	push.pri
	load.s.pri ffffff4c
	pop.alt
	sub
l.00000166
	push.pri
	const.pri 00000002
	pop.alt
	xchg
	sgrtr
	jzer 00000164
	;$exp
	; line 000000ec
	break	; 0000a1ac
	const.pri 00001c40
	const.alt 0000001c
	add
	push.pri
	load.s.pri ffffff4c
	pop.alt
	stor.i
	;$exp
	; line 000000ed
	break	; 0000a1d8
	const.pri 00001c40
	const.alt 00000020
	add
	push.pri
	load.s.pri ffffff4c
	push.pri
	const.pri 00000004
	pop.alt
	sdiv
	push.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000023	; Float:operator=(_:)
	stack 00000008
	push.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000024	; fround
	stack 00000008
	pop.alt
	stor.i
	;$exp
l.00000164		; 0000a258
	; line 000000f1
	break	; 0000a258
	const.pri 000017f4
	const.alt 00000014
	add
	load.i
	push.pri
	const.pri 00000006
	pop.alt
	xchg
	sgrtr
	jzer 00000168
	const.pri 00001c40
	const.alt 00000020
	add
	load.i
	push.pri
	const.pri 00000006
	pop.alt
	xchg
	sleq
	jzer 00000168
	const.pri 00000001
	jump 00000169
l.00000168
	const.pri 00000000
l.00000169
	jzer 00000167
	;$exp
	; line 000000f2
	break	; 0000a2ec
	const.pri 0000005a
	stor 000017c8
	;$exp
l.00000167		; 0000a300
	; line 000000f5
	break	; 0000a300
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001d54
	push.pri
	;$par
	const.pri 00001c40
	const.alt 00000020
	add
	load.i
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000014
	add
	push.pri
	;$par
	const.pri 00000003
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	;$exp
	; line 000000f8
	break	; 0000a370
	const.pri 000017f4
	const.alt 00000010
	add
	push.pri
	const.pri ffffff81
	pop.alt
	stor.i
	;$exp
	; line 000000fb
	break	; 0000a39c
	;$lcl twmin ffffff48
	stack fffffffc
	const.pri 000017f4
	const.alt 00000044
	add
	load.i
	push.pri
	;$par
	load.s.pri ffffff5c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000016	; min
	stack 0000000c
	stor.s ffffff48
	;$exp
	; line 000000fc
	break	; 0000a3f4
	;$lcl twmax ffffff44
	stack fffffffc
	const.pri 000017f4
	const.alt 00000048
	add
	load.i
	push.pri
	;$par
	load.s.pri ffffff5c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 0000001e	; max
	stack 0000000c
	stor.s ffffff44
	;$exp
	; line 000000fd
	break	; 0000a44c
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001ca4
	push.pri
	;$par
	load.s.pri ffffff48
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000044
	add
	push.pri
	;$par
	const.pri 00000004
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	;$exp
	; line 000000fe
	break	; 0000a4ac
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001ca4
	push.pri
	;$par
	load.s.pri ffffff44
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000048
	add
	push.pri
	;$par
	const.pri 00000002
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	;$exp
	; line 00000100
	break	; 0000a50c
	const.pri 00001c70
	const.alt 00000018
	add
	push.pri
	load.i
	push.pri
	load.s.pri ffffff5c
	pop.alt
	add
	pop.alt
	stor.i
	;$exp
	; line 00000101
	break	; 0000a548
	const.pri 00001c70
	const.alt 0000001c
	add
	push.pri
	load.i
	swap.pri
	inc.i
	pop.pri
	;$exp
	; line 00000108
	break	; 0000a574
	;$lcl targ ffffff40
	stack fffffffc
	const.pri 00000000
	push.pri
	call dde_setup_current_target
	stor.s ffffff40
	;$exp
	; line 0000010b
	break	; 0000a59c
	load.s.pri ffffff40
	const.alt 00000000
	eq
	jzer 0000016a
	;$exp
	; line 0000010b
	break	; 0000a5bc
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call setPHctrlr
	;$exp
	jump 0000016b
l.0000016a		; 0000a5e8
	; line 0000010c
	break	; 0000a5e8
	load.s.pri ffffff40
	push.pri
	const.pri 00000006
	pop.alt
	xchg
	sless
	jzer 0000016c
	;$exp
	; line 0000010c
	break	; 0000a614
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call setPHctrlr
	;$exp
	jump 0000016d
l.0000016c		; 0000a640
	; line 0000010e
	break	; 0000a640
	load.s.pri ffffff40
	push.pri
	const.pri 00000028
	pop.alt
	xchg
	sgrtr
	jzer 0000016e
	;$exp
	; line 0000010e
	break	; 0000a66c
	const.pri 00000028
	stor.s ffffff40
	;$exp
l.0000016e		; 0000a680
	; line 0000010f
	break	; 0000a680
	const.pri 00001c40
	const.alt 00000020
	add
	load.i
	push.pri
	load.s.pri ffffff40
	pop.alt
	xchg
	sgrtr
	jzer 0000016f
	;$exp
	; line 0000010f
	break	; 0000a6bc
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call setPHctrlr
	;$exp
l.0000016f		; 0000a6e0
	; line 00000110
	break	; 0000a6e0
	const.pri 00001c40
	const.alt 00000020
	add
	load.i
	push.pri
	load.s.pri ffffff40
	pop.alt
	xchg
	sless
	jzer 00000170
	;$exp
	; line 00000110
	break	; 0000a71c
	const.pri 00000002
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call setPHctrlr
	;$exp
l.00000170		; 0000a740
l.0000016d		; 0000a740
l.0000016b		; 0000a740
	stack 000000c0
	const.pri 00000000
	retn


DATA 0012	; 00001d20
dump 626f6f74 65640000 696f632d 70687900 7761726e 00000000 696f632d 70687920 
dump 636c6561 72656420 626f6f74 65642066 6c616700 74770000 

CODE 0012	; 0000a754
	proc	; dsp_emu_task_500ms
	; line 00000114
	break	; 0000a758
	; line 00000116
	break	; 0000a75c
	; line 00000118
	break	; 0000a760
	;$lcl exx fffffffc
	stack fffffffc
	const.pri 00001c40
	const.alt 00000004
	add
	load.i
	stor.s fffffffc
	;$exp
	; line 0000011d
	break	; 0000a78c
	const.pri 00001c40
	load.i
	not
	jzer 00000171
	;$exp
	; line 0000011d
	break	; 0000a7a8
	const.pri 0000005a
	stor.s fffffffc
	;$exp
l.00000171		; 0000a7bc
	; line 0000011f
	break	; 0000a7bc
	load.pri 00001d58
	not
	jzer 00000173
	load.s.pri fffffffc
	jzer 00000173
	const.pri 00000001
	jump 00000174
l.00000173
	const.pri 00000000
l.00000174
	jzer 00000172
	;$exp
	; line 0000011f
	break	; 0000a804
	const.pri 00001d60
	push.pri
	;$par
	const.pri 00001d5c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	jump 00000175
l.00000172		; 0000a83c
	; line 00000120
	break	; 0000a83c
	load.pri 00001d58
	jzer 00000177
	load.s.pri fffffffc
	not
	jzer 00000177
	const.pri 00000001
	jump 00000178
l.00000177
	const.pri 00000000
l.00000178
	jzer 00000176
	;$exp
	; line 00000120
	break	; 0000a884
	const.pri 00001d7c
	push.pri
	;$par
	const.pri 00001d78
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
l.00000176		; 0000a8b4
l.00000175		; 0000a8b4
	; line 00000121
	break	; 0000a8b4
	load.s.pri fffffffc
	stor 00001d58
	;$exp
	; line 00000123
	break	; 0000a8c8
	;$lcl f2 fffffff8
	stack fffffffc
	const.pri 00000000
	stor.s fffffff8
	;$exp
	; line 00000124
	break	; 0000a8e4
	;$lcl f4 fffffff4
	stack fffffffc
	const.pri 00000000
	stor.s fffffff4
	;$exp
	; line 00000126
	break	; 0000a900
	load.s.pri fffffffc
	jzer 00000179
	;$exp
	jump 0000017a
l.00000179		; 0000a91c
	; line 00000129
	break	; 0000a91c
	const.pri 00001c24
	load.i
	jzer 0000017b
	;$exp
	; line 0000012a
	break	; 0000a934
	load.s.pri fffffff8
	const.alt 00000020
	or
	stor.s fffffff8
	;$exp
	jump 0000017c
l.0000017b		; 0000a95c
	; line 0000012e
	break	; 0000a95c
	const.pri 00001c24
	const.alt 00000010
	add
	load.i
	jzer 0000017d
	;$exp
	; line 0000012e
	break	; 0000a980
	load.s.pri fffffff8
	const.alt 00000001
	or
	stor.s fffffff8
	;$exp
l.0000017d		; 0000a9a0
	; line 0000012f
	break	; 0000a9a0
	const.pri 00001c24
	const.alt 00000014
	add
	load.i
	jzer 0000017e
	;$exp
	; line 0000012f
	break	; 0000a9c4
	load.s.pri fffffff8
	const.alt 00000002
	or
	stor.s fffffff8
	;$exp
l.0000017e		; 0000a9e4
	; line 00000130
	break	; 0000a9e4
	const.pri 00001c24
	const.alt 00000018
	add
	load.i
	jzer 0000017f
	;$exp
	; line 00000130
	break	; 0000aa08
	load.s.pri fffffff8
	const.alt 00000008
	or
	stor.s fffffff8
	;$exp
l.0000017f		; 0000aa28
	; line 00000133
	break	; 0000aa28
	;$lcl htron fffffff0
	stack fffffffc
	const.pri 00001c24
	const.alt 0000000c
	add
	load.i
	jnz 00000180
	const.pri 00001c24
	const.alt 00000010
	add
	load.i
	jnz 00000180
	const.pri 00001c24
	const.alt 00000014
	add
	load.i
	jnz 00000180
	const.pri 00001c24
	const.alt 00000018
	add
	load.i
	jnz 00000180
	const.pri 00000000
	jump 00000181
l.00000180
	const.pri 00000001
l.00000181
	stor.s fffffff0
	;$exp
	; line 00000134
	break	; 0000aad4
	load.s.pri fffffff0
	jnz 00000183
	const.pri 00001c24
	const.alt 00000004
	add
	load.i
	jnz 00000183
	const.pri 00000000
	jump 00000184
l.00000183
	const.pri 00000001
l.00000184
	jzer 00000182
	;$exp
	; line 00000134
	break	; 0000ab28
	load.s.pri fffffff8
	const.alt 00000010
	or
	stor.s fffffff8
	;$exp
l.00000182		; 0000ab48
	; line 00000135
	break	; 0000ab48
	load.s.pri fffffff0
	jnz 00000186
	const.pri 00001c24
	const.alt 00000008
	add
	load.i
	jnz 00000186
	const.pri 00000000
	jump 00000187
l.00000186
	const.pri 00000001
l.00000187
	jzer 00000185
	;$exp
	; line 00000135
	break	; 0000ab9c
	load.s.pri fffffff4
	const.alt 00000001
	or
	stor.s fffffff4
	;$exp
l.00000185		; 0000abbc
	stack 00000004
l.0000017c		; 0000abc4
l.0000017a		; 0000abc4
	; line 00000137
	break	; 0000abc4
	load.s.pri fffffff4
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	load.s.pri fffffff8
	push.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000010
	push.pri
	call layzSend
	;$exp
	; line 00000139
	break	; 0000ac0c
	;$lcl air fffffff0
	stack fffffffc
	load.s.pri fffffff8
	const.alt 00000020
	and
	jzer 00000188
	const.pri 00000001
	jump 00000189
l.00000188
	const.pri 00000000
l.00000189
	stor.s fffffff0
	;$exp
	; line 0000013a
	break	; 0000ac54
	;$lcl wp ffffffec
	stack fffffffc
	load.s.pri fffffff8
	const.alt 00000010
	and
	jnz 0000018a
	load.s.pri fffffff4
	const.alt 00000001
	and
	jnz 0000018a
	const.pri 00000000
	jump 0000018b
l.0000018a
	const.pri 00000001
l.0000018b
	jzer 0000018c
	const.pri 00000001
	jump 0000018d
l.0000018c
	const.pri 00000000
l.0000018d
	stor.s ffffffec
	;$exp
	; line 0000013b
	break	; 0000acd8
	;$lcl htr1 ffffffe8
	stack fffffffc
	load.s.pri fffffff8
	const.alt 00000002
	and
	jzer 0000018e
	const.pri 00000001
	jump 0000018f
l.0000018e
	const.pri 00000000
l.0000018f
	stor.s ffffffe8
	;$exp
	; line 0000013c
	break	; 0000ad20
	;$lcl htr2 ffffffe4
	stack fffffffc
	load.s.pri fffffff8
	const.alt 00000008
	and
	jzer 00000190
	const.pri 00000001
	jump 00000191
l.00000190
	const.pri 00000000
l.00000191
	stor.s ffffffe4
	;$exp
	; line 00000140
	break	; 0000ad68
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001ca4
	push.pri
	;$par
	load.s.pri fffffff0
	push.pri
	;$par
	const.pri 000017f4
	push.pri
	;$par
	const.pri 00000015
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	;$exp
	; line 00000141
	break	; 0000adbc
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001ca4
	push.pri
	;$par
	load.s.pri ffffffec
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000008
	add
	push.pri
	;$par
	const.pri 00000016
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	;$exp
	; line 00000142
	break	; 0000ae1c
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001ca4
	push.pri
	;$par
	load.s.pri ffffffe8
	push.pri
	load.s.pri ffffffe4
	pop.alt
	add
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000004
	add
	push.pri
	;$par
	const.pri 00000017
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	;$exp
	; line 00000145
	break	; 0000ae90
	;$lcl load ffffffe0
	stack fffffffc
	const.pri 00000000
	stor.s ffffffe0
	;$exp
	; line 00000146
	break	; 0000aeac
	const.pri 000017f4
	load.i
	jzer 00000192
	;$exp
	; line 00000146
	break	; 0000aec4
	load.s.pri ffffffe0
	push.pri
	const.pri 000017e0
	const.alt 00000004
	add
	load.i
	pop.alt
	add
	stor.s ffffffe0
	;$exp
l.00000192		; 0000aefc
	; line 00000147
	break	; 0000aefc
	const.pri 000017f4
	const.alt 00000008
	add
	load.i
	jzer 00000193
	;$exp
	; line 00000147
	break	; 0000af20
	load.s.pri ffffffe0
	push.pri
	const.pri 000017e0
	const.alt 0000000c
	add
	load.i
	pop.alt
	add
	stor.s ffffffe0
	;$exp
l.00000193		; 0000af58
	; line 00000148
	break	; 0000af58
	const.pri 000017f4
	const.alt 00000004
	add
	load.i
	jzer 00000194
	;$exp
	; line 00000148
	break	; 0000af7c
	load.s.pri ffffffe0
	push.pri
	const.pri 000017e0
	const.alt 00000008
	add
	load.i
	pop.alt
	add
	stor.s ffffffe0
	;$exp
l.00000194		; 0000afb4
	; line 00000149
	break	; 0000afb4
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001ca4
	push.pri
	;$par
	load.s.pri ffffffe0
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000020
	add
	push.pri
	;$par
	const.pri 0000001d
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	;$exp
	; line 0000014c
	break	; 0000b014
	const.pri 00001c70
	const.alt 00000014
	add
	push.pri
	load.i
	swap.pri
	inc.i
	pop.pri
	;$exp
	; line 0000014d
	break	; 0000b040
	const.pri 00001c70
	const.alt 00000004
	add
	push.pri
	load.i
	push.pri
	load.s.pri fffffff0
	pop.alt
	add
	pop.alt
	stor.i
	;$exp
	; line 0000014e
	break	; 0000b07c
	const.pri 00001c70
	const.alt 00000008
	add
	push.pri
	load.i
	push.pri
	load.s.pri ffffffec
	pop.alt
	add
	pop.alt
	stor.i
	;$exp
	; line 0000014f
	break	; 0000b0b8
	const.pri 00001c70
	const.alt 0000000c
	add
	push.pri
	load.i
	push.pri
	load.s.pri ffffffe8
	pop.alt
	add
	pop.alt
	stor.i
	;$exp
	; line 00000150
	break	; 0000b0f4
	const.pri 00001c70
	const.alt 00000010
	add
	push.pri
	load.i
	push.pri
	load.s.pri ffffffe4
	pop.alt
	add
	pop.alt
	stor.i
	;$exp
	; line 00000152
	break	; 0000b130
	const.pri 00001c90
	push.pri
	load.i
	swap.pri
	inc.i
	pop.pri
	;$exp
	; line 00000153
	break	; 0000b150
	const.pri 00001c90
	const.alt 00000004
	add
	push.pri
	load.i
	push.pri
	load.s.pri fffffff0
	pop.alt
	add
	pop.alt
	stor.i
	;$exp
	; line 00000154
	break	; 0000b18c
	const.pri 00001c90
	const.alt 00000008
	add
	push.pri
	load.i
	push.pri
	load.s.pri ffffffec
	pop.alt
	add
	pop.alt
	stor.i
	;$exp
	; line 00000155
	break	; 0000b1c8
	const.pri 00001c90
	const.alt 0000000c
	add
	push.pri
	load.i
	push.pri
	load.s.pri ffffffe8
	jnz 00000195
	load.s.pri ffffffe4
	jnz 00000195
	const.pri 00000000
	jump 00000196
l.00000195
	const.pri 00000001
l.00000196
	jzer 00000197
	const.pri 00000001
	jump 00000198
l.00000197
	const.pri 00000000
l.00000198
	pop.alt
	add
	pop.alt
	stor.i
	;$exp
	; line 0000015a
	break	; 0000b254
	;$lcl secs ffffffdc
	stack fffffffc
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000019	; rM2M_GetTime
	stack 00000014
	heap fffffff4
	push.pri
	const.pri 000017f4
	const.alt 00000030
	add
	load.i
	pop.alt
	sub
	stor.s ffffffdc
	;$exp
	; line 0000015b
	break	; 0000b310
	;$lcl air_secs ffffffd8
	stack fffffffc
	const.pri 00001c90
	const.alt 00000004
	add
	load.i
	push.pri
	load.s.pri ffffffdc
	pop.alt
	smul
	push.pri
	const.pri 00001c90
	load.i
	const.alt 00000001
	add
	pop.alt
	sdiv
	stor.s ffffffd8
	;$exp
	; line 0000015c
	break	; 0000b374
	;$lcl wp_secs ffffffd4
	stack fffffffc
	const.pri 00001c90
	const.alt 00000008
	add
	load.i
	push.pri
	load.s.pri ffffffdc
	pop.alt
	smul
	push.pri
	const.pri 00001c90
	load.i
	const.alt 00000001
	add
	pop.alt
	sdiv
	stor.s ffffffd4
	;$exp
	; line 0000015d
	break	; 0000b3d8
	;$lcl htr_secs ffffffd0
	stack fffffffc
	const.pri 00001c90
	const.alt 0000000c
	add
	load.i
	push.pri
	load.s.pri ffffffdc
	pop.alt
	smul
	push.pri
	const.pri 00001c90
	load.i
	const.alt 00000001
	add
	pop.alt
	sdiv
	stor.s ffffffd0
	;$exp
	; line 0000015f
	break	; 0000b43c
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001ca4
	push.pri
	;$par
	load.s.pri ffffffd8
	const.alt 00000004
	smul
	push.pri
	const.pri 00000e10
	pop.alt
	sdiv
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000038
	add
	push.pri
	;$par
	const.pri 0000001f
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	;$exp
	; line 00000160
	break	; 0000b4bc
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001ca4
	push.pri
	;$par
	load.s.pri ffffffd0
	const.alt 00000004
	smul
	push.pri
	const.pri 00000e10
	pop.alt
	sdiv
	push.pri
	;$par
	const.pri 000017f4
	const.alt 0000003c
	add
	push.pri
	;$par
	const.pri 00000020
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	;$exp
	; line 00000161
	break	; 0000b53c
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001ca4
	push.pri
	;$par
	load.s.pri ffffffd4
	const.alt 00000004
	smul
	push.pri
	const.pri 00000e10
	pop.alt
	sdiv
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000040
	add
	push.pri
	;$par
	const.pri 00000021
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	;$exp
	; line 00000163
	break	; 0000b5bc
	;$lcl en ffffffcc
	stack fffffffc
	const.pri 000017e0
	const.alt 00000004
	add
	load.i
	push.pri
	load.s.pri ffffffd8
	pop.alt
	smul
	push.pri
	const.pri 000017e0
	const.alt 0000000c
	add
	load.i
	push.pri
	load.s.pri ffffffd4
	pop.alt
	smul
	pop.alt
	add
	push.pri
	const.pri 000017e0
	const.alt 00000008
	add
	load.i
	push.pri
	load.s.pri ffffffd0
	pop.alt
	smul
	pop.alt
	add
	stor.s ffffffcc
	;$exp
	; line 00000168
	break	; 0000b66c
	load.s.pri ffffffcc
	const.alt 00000002
	smul
	push.pri
	const.pri 00000e10
	pop.alt
	sdiv
	push.pri
	const.pri 000003e8
	pop.alt
	sdiv
	stor.s ffffffcc
	;$exp
	; line 00000169
	break	; 0000b6b4
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001ca4
	push.pri
	;$par
	load.s.pri ffffffcc
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000034
	add
	push.pri
	;$par
	const.pri 00000005
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	;$exp
	stack 00000034
	const.pri 00000000
	retn


DATA 0012	; 00001d58
dump 00000000 65787800 656e7465 7220656d 65726765 6e637920 6d6f6465 00000000 
dump 65787800 6c656176 6520656d 65726765 6e637920 6d6f6465 00000000 

CODE 0000	; 0000b728
	proc	; _setLight
	; line 00000042
	break	; 0000b72c
	;$lcl mode 00000010
	;$lcl rgb 0000000c
	; line 00000043
	break	; 0000b730
	load.s.pri 00000010
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call setLight
	;$exp
	; line 00000044
	break	; 0000b760
	const.pri 00000000
	push.pri
	;$par
	load.s.pri 00000010
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 0000000c
	push.pri
	call setSysLed
	;$exp
	const.pri 00000000
	retn


DATA 0000	; 00001d94
dump 00000000 

CODE 0000	; 0000b7a8
	proc	; timeout_blower_1s
	; line 0000004d
	break	; 0000b7ac
	; line 0000004e
	break	; 0000b7b0
	load.pri 00001d94
	not
	jzer 00000199
	;$exp
	; line 0000004e
	break	; 0000b7c8
	const.pri 00000000
	retn
l.00000199		; 0000b7d8
	; line 0000004f
	break	; 0000b7d8
	push.pri
	const.pri 00001d94
	dec.i
	pop.pri
	load.pri 00001d94
	jzer 0000019a
	;$exp
	; line 0000004f
	break	; 0000b800
	const.pri 00000000
	retn
l.0000019a		; 0000b810
	; line 00000052
	break	; 0000b810
	const.pri 000017f4
	const.alt 00000028
	add
	load.i
	jzer 0000019b
	;$exp
	; line 00000052
	break	; 0000b834
	const.pri 00000000
	push.pri
	;$par
	const.pri 00001d98
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call cmd_toggle_blower
	;$exp
l.0000019b		; 0000b864
	const.pri 00000000
	retn


DATA 0000	; 00001d98
dump 74696d65 6f757400 

CODE 0000	; 0000b870
	proc	; cmd_toggle_blower
	; line 00000054
	break	; 0000b874
	;$lcl new_state 00000010
	;$lcl src 0000000c
	; line 00000055
	break	; 0000b878
	load.s.pri 00000010
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sless
	jzer 0000019c
	;$exp
	; line 00000055
	break	; 0000b8a4
	const.pri 000017f4
	const.alt 00000028
	add
	load.i
	not
	stor.s 00000010
	;$exp
l.0000019c		; 0000b8cc
	; line 00000057
	break	; 0000b8cc
	load.s.pri 00000010
	jzer 0000019d
	const.pri 00000384
	jump 0000019e
l.0000019d
	const.pri 00000000
l.0000019e
	stor 00001d94
	;$exp
	; line 00000059
	break	; 0000b900
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000028
	add
	load.i
	jzer 000001a0
	const.pri 00001da0
	jump 000001a1
l.000001a0
	const.pri 00001dac
l.000001a1
	push.pri
	;$par
	load.s.pri 00000010
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000028
	add
	push.pri
	;$par
	const.pri 00000075
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	jzer 0000019f
	;$exp
	; line 0000005c
	break	; 0000b998
	const.pri 00001c24
	push.pri
	const.pri 000017f4
	const.alt 00000028
	add
	load.i
	pop.alt
	stor.i
	;$exp
l.0000019f		; 0000b9c8
	const.pri 00000000
	retn


DATA 0000	; 00001da0
dump 626c6f77 65722d6f 6e000000 626c6f77 65722d6f 66660000 
dump 00000000 

CODE 0000	; 0000b9d4
	proc	; timeout_silent_1s
	; line 00000062
	break	; 0000b9d8
	; line 00000063
	break	; 0000b9dc
	load.pri 00001db8
	not
	jzer 000001a2
	;$exp
	; line 00000063
	break	; 0000b9f4
	const.pri 00000000
	retn
l.000001a2		; 0000ba04
	; line 00000064
	break	; 0000ba04
	push.pri
	const.pri 00001db8
	dec.i
	pop.pri
	load.pri 00001db8
	jzer 000001a3
	;$exp
	; line 00000064
	break	; 0000ba2c
	const.pri 00000000
	retn
l.000001a3		; 0000ba3c
	; line 00000067
	break	; 0000ba3c
	const.pri 000017f4
	const.alt 00000024
	add
	load.i
	jzer 000001a4
	;$exp
	; line 00000067
	break	; 0000ba60
	const.pri 00000000
	push.pri
	;$par
	const.pri 00001dbc
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call cmd_toggle_silent
	;$exp
l.000001a4		; 0000ba90
	const.pri 00000000
	retn


DATA 0000	; 00001dbc
dump 74696d65 6f757400 

CODE 0000	; 0000ba9c
	proc	; cmd_toggle_silent
	; line 00000069
	break	; 0000baa0
	;$lcl new_state 00000010
	;$lcl src 0000000c
	; line 0000006a
	break	; 0000baa4
	load.s.pri 00000010
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sless
	jzer 000001a5
	;$exp
	; line 0000006a
	break	; 0000bad0
	const.pri 000017f4
	const.alt 00000024
	add
	load.i
	not
	stor.s 00000010
	;$exp
l.000001a5		; 0000baf8
	; line 0000006c
	break	; 0000baf8
	load.s.pri 00000010
	jzer 000001a6
	const.pri 00002a30
	jump 000001a7
l.000001a6
	const.pri 00000000
l.000001a7
	stor 00001db8
	;$exp
	; line 0000006e
	break	; 0000bb2c
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000024
	add
	load.i
	jzer 000001a8
	const.pri 00001dc4
	jump 000001a9
l.000001a8
	const.pri 00001dd0
l.000001a9
	push.pri
	;$par
	load.s.pri 00000010
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000024
	add
	push.pri
	;$par
	const.pri 00000074
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	;$exp
	const.pri 00000000
	retn


DATA 0000	; 00001dc4
dump 73696c65 6e742d6f 6e000000 73696c65 6e742d6f 66660000 

CODE 0000	; 0000bbc8
	proc	; cmd_stats_reset
	; line 00000072
	break	; 0000bbcc
	;$lcl src 0000000c
	; line 00000073
	break	; 0000bbd0
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 00001ddc
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	; line 00000075
	break	; 0000bc00
	const.pri 00001c90
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 00000076
	break	; 0000bc20
	const.pri 00001c90
	const.alt 00000004
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 00000077
	break	; 0000bc4c
	const.pri 00001c90
	const.alt 00000008
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 00000078
	break	; 0000bc78
	const.pri 00001c90
	const.alt 0000000c
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 0000007a
	break	; 0000bca4
	const.pri 000017f4
	const.alt 0000002c
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 0000007b
	break	; 0000bcd0
	const.pri 000017f4
	const.alt 00000030
	add
	push.pri
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000019	; rM2M_GetTime
	stack 00000014
	heap fffffff4
	pop.alt
	stor.i
	;$exp
	; line 0000007c
	break	; 0000bd78
	const.pri 000017f4
	const.alt 00000034
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 0000007d
	break	; 0000bda4
	const.pri 000017f4
	const.alt 00000038
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 0000007e
	break	; 0000bdd0
	const.pri 000017f4
	const.alt 0000003c
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 0000007f
	break	; 0000bdfc
	const.pri 000017f4
	const.alt 00000040
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 00000080
	break	; 0000be28
	const.pri 000017f4
	const.alt 00000044
	add
	push.pri
	const.pri 7fffffff
	pop.alt
	stor.i
	;$exp
	; line 00000081
	break	; 0000be54
	const.pri 000017f4
	const.alt 00000048
	add
	push.pri
	const.pri 80000000
	pop.alt
	stor.i
	;$exp
	; line 00000083
	break	; 0000be80
	const.pri 00000070
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call dde_status_dirty
	;$exp
	const.pri 00000000
	retn


DATA 0000	; 00001ddc
dump 72657365 74737461 74730000 

CODE 0000	; 0000beb0
	proc	; on_btnhold
	; line 0000008b
	break	; 0000beb4
	; line 0000008c
	break	; 0000beb8
	const.pri 00000000
	push.pri
	;$par
	const.pri 00001de8
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call cmd_toggle_blower
	;$exp
	; line 0000008d
	break	; 0000bee8
	const.pri 00000001
	push.pri
	;$par
	const.pri 00001df0
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call cmd_toggle_silent
	;$exp
	; line 0000008e
	break	; 0000bf18
	const.pri 00000000
	push.pri
	;$par
	const.pri 00202020
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call _setLight
	;$exp
	const.pri 00000000
	retn


DATA 0000	; 00001de8
dump 6c6f6361 6c000000 6c6f6361 6c000000 

CODE 0000	; 0000bf54
	proc	; onButton
	; line 00000090
	break	; 0000bf58
	;$lcl time_ 00000010
	;$lcl pressed 0000000c
	; line 00000094
	break	; 0000bf5c
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000019	; rM2M_GetTime
	stack 00000014
	heap fffffff4
	push.pri
	load.pri 000017c4
	pop.alt
	sub
	push.pri
	const.pri 00000005
	pop.alt
	xchg
	sless
	jzer 000001aa
	;$exp
	; line 00000094
	break	; 0000c018
	const.pri 00000000
	retn
l.000001aa		; 0000c028
	; line 00000096
	break	; 0000c028
	load.s.pri 0000000c
	jzer 000001ab
	;$exp
	; line 00000097
	break	; 0000c03c
	const.pri 000007d0
	push.pri
	;$par
	const.pri 00001df8
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call setTimeout
	;$exp
	; line 00000098
	break	; 0000c06c
	const.pri 00000000
	push.pri
	;$par
	const.pri 00001888
	load.i
	const.alt 00ffffff
	sub
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call _setLight
	;$exp
	jump 000001ac
l.000001ab		; 0000c0b4
	; line 0000009b
	break	; 0000c0b4
	const.pri 00001e04
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call _clearTimeoutInterval
	;$exp
	; line 0000009c
	break	; 0000c0d8
	load.s.pri 00000010
	push.pri
	const.pri 000003e8
	pop.alt
	xchg
	sless
	jzer 000001ad
	;$exp
	; line 0000009d
	break	; 0000c104
	const.pri 000017f4
	const.alt 00000024
	add
	load.i
	jzer 000001ae
	;$exp
	; line 0000009e
	break	; 0000c128
	const.pri 00000000
	push.pri
	;$par
	const.pri 00001e10
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call cmd_toggle_silent
	;$exp
	jump 000001af
l.000001ae		; 0000c160
	; line 000000a0
	break	; 0000c160
	const.pri ffffffff
	push.pri
	;$par
	const.pri 00001e18
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call cmd_toggle_blower
	;$exp
l.000001af		; 0000c190
l.000001ad		; 0000c190
	; line 000000a2
	break	; 0000c190
	const.pri 00000000
	push.pri
	;$par
	const.pri 00001888
	load.i
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call _setLight
	;$exp
l.000001ac		; 0000c1c4
	const.pri 00000000
	retn


DATA 0000	; 00001df8
dump 6f6e5f62 746e686f 6c640000 6f6e5f62 746e686f 6c640000 6c6f6361 6c000000 
dump 6c6f6361 6c000000 
dump 00000000 

CODE 0000	; 0000c1d0
	proc	; signal_task_1s
	; line 000000b5
	break	; 0000c1d4
	; line 000000b7
	break	; 0000c1d8
	load.pri 00001e20
	push.pri
	const.pri 00000001
	pop.alt
	xchg
	sleq
	jzer 000001b0
	;$exp
	; line 000000b7
	break	; 0000c204
	const.pri 00000002
	push.pri
	;$par
	const.pri 00ffffff
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call _setLight
	;$exp
	jump 000001b1
l.000001b0		; 0000c23c
	; line 000000b8
	break	; 0000c23c
	const.pri 000017f4
	const.alt 0000000c
	add
	load.i
	jzer 000001b2
	;$exp
	; line 000000b8
	break	; 0000c260
	const.pri 00000001
	push.pri
	;$par
	const.pri 00ff0000
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call _setLight
	;$exp
	jump 000001b3
l.000001b2		; 0000c298
	; line 000000ba
	break	; 0000c298
	;$lcl upl fffffffc
	stack fffffffc
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000025	; rM2M_TxGetStatus
	stack 00000008
	heap fffffffc
	stor.s fffffffc
	;$exp
	; line 000000bb
	break	; 0000c2ec
	load.s.pri fffffffc
	const.alt 00000001
	and
	jzer 000001b4
	;$exp
	; line 000000bb
	break	; 0000c30c
	const.pri 00000002
	push.pri
	;$par
	const.pri 00ff0000
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call _setLight
	;$exp
	jump 000001b5
l.000001b4		; 0000c344
	; line 000000bc
	break	; 0000c344
	load.s.pri fffffffc
	const.alt 00000002
	and
	not
	jzer 000001b6
	;$exp
	; line 000000bc
	break	; 0000c368
	const.pri 00000002
	push.pri
	;$par
	const.pri 000000ff
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call _setLight
	;$exp
	jump 000001b7
l.000001b6		; 0000c3a0
	; line 000000bd
	break	; 0000c3a0
	const.pri 00000000
	push.pri
	;$par
	const.pri 00001888
	load.i
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call _setLight
	;$exp
l.000001b7		; 0000c3d4
l.000001b5		; 0000c3d4
	stack 00000004
l.000001b3		; 0000c3dc
l.000001b1		; 0000c3dc
	const.pri 00000000
	retn

	proc	; fast_task_500ms
	; line 000000c5
	break	; 0000c3ec
	; line 000000c6
	break	; 0000c3f0
	const.pri 00000000
	push.pri
	call dsp_emu_task_500ms
	;$exp
	; line 000000c7
	break	; 0000c408
	const.pri 00000000
	push.pri
	call dsp_PHctrlr_500ms
	;$exp
	; line 000000c8
	break	; 0000c420
	const.pri 00000000
	push.pri
	call dde_status_write_task_500ms
	;$exp
	const.pri 00000000
	retn

	proc	; main_record_trend
	; line 000000ce
	break	; 0000c448
	;$lcl stamp 0000000c
	; line 000000d0
	break	; 0000c44c
	;$lcl sv fffffff4
	stack fffffff4
	const.pri 00000000
	addr.alt fffffff4
	fill 0000000c
	; line 000000d1
	break	; 0000c470
	const.pri 00000003
	push.pri
	;$par
	addr.pri fffffff4
	pushr.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000026	; IoTbox_GetSysValues
	stack 0000000c
	;$exp
	; line 000000d2
	break	; 0000c4a8
	addr.pri fffffff4
	const.alt 00000008
	add
	load.i
	push.pri
	const.pri 0000000a
	pop.alt
	sdiv
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	addr.pri fffffff4
	const.alt 00000004
	add
	pushr.pri
	;$par
	addr.pri fffffff4
	pushr.pri
	;$par
	const.pri 00001e24
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000002	; printf
	stack 00000014
	heap fffffffc
	;$exp
	; line 000000d3
	break	; 0000c540
	; line 000000d4
	break	; 0000c544
	;$lcl ubat_low fffffff0
	stack fffffffc
	addr.pri fffffff4
	load.i
	push.pri
	const.pri 00000ed8
	pop.alt
	xchg
	sless
	stor.s fffffff0
	;$exp
	; line 000000d5
	break	; 0000c57c
	load.pri 00001e44
	push.pri
	load.s.pri fffffff0
	pop.alt
	neq
	jzer 000001b8
	;$exp
	; line 000000d6
	break	; 0000c5a4
	load.s.pri fffffff0
	stor 00001e44
	;$exp
	; line 000000d7
	break	; 0000c5b8
	;$lcl s ffffffbc
	stack ffffffcc
	const.pri 00000000
	addr.alt ffffffbc
	fill 00000034
	; line 000000d8
	break	; 0000c5dc
	addr.pri fffffff4
	pushr.pri
	;$par
	load.s.pri fffffff0
	jzer 000001b9
	const.pri 00001e50
	jump 000001ba
l.000001b9
	const.pri 00001e54
l.000001ba
	pushr.pri
	;$par
	const.pri 00001e48
	pushr.pri
	;$par
	const.pri 0000000d
	push.pri
	;$par
	addr.pri ffffffbc
	pushr.pri
	;$par
	const.pri 00000014
	push.pri
	sysreq 00000003	; sprintf
	stack 00000018
	;$exp
	; line 000000d9
	break	; 0000c658
	addr.pri ffffffbc
	push.pri
	;$par
	const.pri 00001e58
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	stack 00000034
l.000001b8		; 0000c690
	; line 000000dc
	break	; 0000c690
	addr.pri fffffff4
	const.alt 00000008
	add
	load.i
	push.pri
	const.pri 0000000a
	pop.alt
	sdiv
	push.pri
	;$par
	addr.pri fffffff4
	const.alt 00000004
	add
	load.i
	push.pri
	;$par
	addr.pri fffffff4
	load.i
	push.pri
	;$par
	const.pri 00001c70
	const.alt 0000000c
	add
	load.i
	push.pri
	const.pri 00001c70
	const.alt 00000010
	add
	load.i
	pop.alt
	add
	push.pri
	const.pri 00000002
	pop.alt
	sdiv
	push.pri
	;$par
	const.pri 00001c70
	const.alt 00000008
	add
	load.i
	push.pri
	;$par
	const.pri 00001c70
	const.alt 00000004
	add
	load.i
	push.pri
	;$par
	const.pri 00001c70
	const.alt 00000014
	add
	load.i
	push.pri
	;$par
	const.pri 00001c70
	const.alt 0000001c
	add
	load.i
	push.pri
	;$par
	const.pri 00001c70
	const.alt 00000018
	add
	load.i
	push.pri
	;$par
	const.pri 00001c70
	load.i
	push.pri
	;$par
	load.s.pri 0000000c
	push.pri
	;$par
	const.pri 0000002c
	push.pri
	call dde_trend_append
	;$exp
	; line 000000ea
	break	; 0000c800
	const.pri 00001c70
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 000000eb
	break	; 0000c820
	const.pri 00001c70
	const.alt 00000018
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 000000ec
	break	; 0000c84c
	const.pri 00001c70
	const.alt 0000001c
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 000000ee
	break	; 0000c878
	const.pri 00001c70
	const.alt 00000004
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 000000ef
	break	; 0000c8a4
	const.pri 00001c70
	const.alt 00000008
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 000000f0
	break	; 0000c8d0
	const.pri 00001c70
	const.alt 0000000c
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 000000f1
	break	; 0000c8fc
	const.pri 00001c70
	const.alt 00000010
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 000000f2
	break	; 0000c928
	const.pri 00001c70
	const.alt 00000014
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	stack 00000010
	const.pri 00000000
	retn


DATA 0000	; 00001e24
dump 56626174 3d25646d 56205675 73623d25 646d5620 54737973 3d2564b0 430a0000 
dump 00000000 25732025 64000000 6c6f7700 6f6b0000 75626174 00000000 

CODE 0000	; 0000c968
	proc	; main_task_1s
	; line 000000f6
	break	; 0000c96c
	; line 000000f7
	break	; 0000c970
	;$lcl t fffffffc
	stack fffffffc
	const.pri 00000000
	stor.s fffffffc
	;$exp
	; line 000000f9
	break	; 0000c98c
	const.pri 00000000
	push.pri
	call timeout_silent_1s
	;$exp
	; line 000000fa
	break	; 0000c9a4
	const.pri 00000000
	push.pri
	call timeout_blower_1s
	;$exp
	; line 000000ff
	break	; 0000c9bc
	load.pri 000017c8
	jzer 000001bb
	;$exp
	; line 00000100
	break	; 0000c9d0
	push.pri
	const.pri 000017c8
	dec.i
	pop.pri
	load.pri 000017c8
	;$exp
	; line 00000101
	break	; 0000c9f0
	load.pri 000017c8
	not
	jzer 000001bc
	;$exp
	; line 00000101
	break	; 0000ca08
	const.pri 00001e68
	push.pri
	;$par
	const.pri 00001e60
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
l.000001bc		; 0000ca38
l.000001bb		; 0000ca38
	; line 00000107
	break	; 0000ca38
	; line 00000108
	break	; 0000ca3c
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000019	; rM2M_GetTime
	stack 00000014
	heap fffffff4
	push.pri
	const.pri 0000012c
	pop.alt
	sdiv
	stor.s fffffffc
	;$exp
	; line 00000109
	break	; 0000cae0
	load.s.pri fffffffc
	push.pri
	load.pri 00001e70
	pop.alt
	xchg
	sgrtr
	jzer 000001bd
	;$exp
	; line 0000010a
	break	; 0000cb0c
	load.s.pri fffffffc
	stor 00001e70
	;$exp
	; line 0000010b
	break	; 0000cb20
	load.s.pri fffffffc
	push.pri
	const.pri 00000001
	pop.alt
	sub
	const.alt 0000012c
	smul
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call main_record_trend
	;$exp
	; line 0000010d
	break	; 0000cb64
	load.pri 00001850
	push.pri
	const.pri 3fffffff
	pop.alt
	xchg
	sgrtr
	jzer 000001be
	;$exp
	; line 0000010d
	break	; 0000cb90
	const.pri 00000000
	push.pri
	call _dde_status_write
	;$exp
l.000001be		; 0000cba8
l.000001bd		; 0000cba8
	; line 00000113
	break	; 0000cba8
	; line 00000114
	break	; 0000cbac
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000019	; rM2M_GetTime
	stack 00000014
	heap fffffff4
	push.pri
	const.pri 00002a30
	pop.alt
	sdiv
	stor.s fffffffc
	;$exp
	; line 00000115
	break	; 0000cc50
	load.s.pri fffffffc
	push.pri
	load.pri 00001e74
	pop.alt
	xchg
	sgrtr
	jzer 000001bf
	;$exp
	; line 00000116
	break	; 0000cc7c
	load.s.pri fffffffc
	stor 00001e74
	;$exp
	; line 00000117
	break	; 0000cc90
	const.pri 00000001
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call layzCheckHealth
	;$exp
	; line 00000118
	break	; 0000ccb4
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call layzCheckHealth
	;$exp
l.000001bf		; 0000ccd8
	; line 0000011e
	break	; 0000ccd8
	; line 0000011f
	break	; 0000ccdc
	push.pri
	const.pri 00001e78
	inc.i
	pop.pri
	load.pri 00001e78
	const.alt 00000003
	and
	stor 00001e78
	;$exp
	; line 00000122
	break	; 0000cd10
	const.pri 00001c40
	const.alt 00000004
	add
	load.i
	jzer 000001c0
	;$exp
	; line 00000122
	break	; 0000cd34
	const.pri 00001bb8
	push.pri
	const.pri 00001c40
	const.alt 00000004
	add
	load.i
	pop.alt
	stor.i
	;$exp
	jump 000001c1
l.000001c0		; 0000cd6c
	; line 00000124
	break	; 0000cd6c
	load.pri 00001e78
	const.alt 00000000
	eq
	jzer 000001c2
	;$exp
	; line 00000124
	break	; 0000cd8c
	const.pri 00001bb8
	push.pri
	const.pri 000017f4
	const.alt 0000001c
	add
	load.i
	pop.alt
	stor.i
	;$exp
	jump 000001c3
l.000001c2		; 0000cdc4
	; line 00000125
	break	; 0000cdc4
	load.pri 00001e78
	const.alt 00000001
	eq
	jzer 000001c4
	;$exp
	; line 00000125
	break	; 0000cde4
	const.pri 00001bb8
	push.pri
	const.pri 000017f4
	const.alt 00000018
	add
	load.i
	pop.alt
	stor.i
	;$exp
	jump 000001c5
l.000001c4		; 0000ce1c
	; line 00000126
	break	; 0000ce1c
	const.pri 00001bb8
	push.pri
	const.pri 00001c40
	const.alt 00000020
	add
	load.i
	pop.alt
	stor.i
	;$exp
l.000001c5		; 0000ce4c
l.000001c3		; 0000ce4c
l.000001c1		; 0000ce4c
	; line 0000012b
	break	; 0000ce4c
	const.pri 00000000
	push.pri
	call signal_task_1s
	;$exp
	stack 00000004
	const.pri 00000000
	retn


DATA 0000	; 00001e60
dump 6c697665 00000000 656e6465 64000000 00000000 00000000 00000000 

CODE 0000	; 0000ce78
	proc	; _on_cmds
	; line 0000012f
	break	; 0000ce7c
	; line 00000131
	break	; 0000ce80
	;$lcl o fffffff0
	stack fffffff0
	const.pri 00000000
	addr.alt fffffff0
	fill 00000010
	; line 00000132
	break	; 0000cea4
	addr.pri fffffff0
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call DDE_cmds_read
	jzer 000001c6
	;$exp
	; line 00000132
	break	; 0000ced0
	const.pri ffffffff
	stack 00000010
	retn
l.000001c6		; 0000cee8
	; line 00000134
	break	; 0000cee8
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001ca4
	push.pri
	;$par
	addr.pri fffffff0
	load.i
	push.pri
	;$par
	const.pri 000017f4
	const.alt 0000004c
	add
	push.pri
	;$par
	const.pri 00000071
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	jzer 000001c7
	;$exp
	; line 00000135
	break	; 0000cf54
	const.pri ffffffff
	push.pri
	;$par
	const.pri 00001e7c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call cmd_toggle_blower
	;$exp
l.000001c7		; 0000cf84
	; line 00000137
	break	; 0000cf84
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001ca4
	push.pri
	;$par
	addr.pri fffffff0
	const.alt 00000004
	add
	load.i
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000050
	add
	push.pri
	;$par
	const.pri 00000072
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	jzer 000001c8
	;$exp
	; line 00000138
	break	; 0000cffc
	const.pri ffffffff
	push.pri
	;$par
	const.pri 00001e84
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call cmd_toggle_silent
	;$exp
l.000001c8		; 0000d02c
	; line 0000013a
	break	; 0000d02c
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001ca4
	push.pri
	;$par
	addr.pri fffffff0
	const.alt 00000008
	add
	load.i
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000054
	add
	push.pri
	;$par
	const.pri 00000073
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	jzer 000001c9
	;$exp
	; line 0000013b
	break	; 0000d0a4
	const.pri 00001e8c
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call cmd_stats_reset
	;$exp
l.000001c9		; 0000d0c8
	; line 0000013d
	break	; 0000d0c8
	const.pri 0000190c
	push.pri
	;$par
	const.pri 00001ca4
	push.pri
	;$par
	addr.pri fffffff0
	const.alt 0000000c
	add
	load.i
	push.pri
	;$par
	const.pri 000017f4
	const.alt 00000058
	add
	push.pri
	;$par
	const.pri 0000006f
	push.pri
	;$par
	const.pri 00000014
	push.pri
	call dde_status_set
	jzer 000001ca
	;$exp
	; line 0000013e
	break	; 0000d140
	const.pri 00001e94
	pushr.pri
	;$par
	const.pri 00000004
	push.pri
	sysreq 00000002	; printf
	stack 00000008
	;$exp
	; line 0000013f
	break	; 0000d16c
	load.pri 000017c8
	not
	jzer 000001cb
	;$exp
	; line 0000013f
	break	; 0000d184
	const.pri 00001eb0
	push.pri
	;$par
	const.pri 00001ea8
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
l.000001cb		; 0000d1b4
	; line 00000140
	break	; 0000d1b4
	const.pri 0000005a
	stor 000017c8
	;$exp
l.000001ca		; 0000d1c8
	; line 00000142
	break	; 0000d1c8
	const.pri 00000000
	stack 00000010
	retn


DATA 0000	; 00001e7c
dump 72656d6f 74650000 72656d6f 74650000 72656d6f 74650000 4444455f 434d4453 
dump 206c6976 65547269 670a0000 6c697665 00000000 73746172 74656400 

CODE 0000	; 0000d1e0
	proc	; _on_setup
	; line 00000144
	break	; 0000d1e4
	; line 00000145
	break	; 0000d1e8
	;$lcl o ffffff84
	stack ffffff84
	const.pri 00000000
	addr.alt ffffff84
	fill 0000007c
	; line 00000146
	break	; 0000d20c
	addr.pri ffffff84
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call DDE_setup_read
	jzer 000001cc
	;$exp
	; line 00000146
	break	; 0000d238
	const.pri ffffffff
	stack 0000007c
	retn
l.000001cc		; 0000d250
	; line 00000148
	break	; 0000d250
	const.pri 00001888
	load.i
	push.pri
	addr.pri ffffff84
	load.i
	pop.alt
	neq
	jzer 000001cd
	;$exp
	; line 00000149
	break	; 0000d280
	addr.pri ffffff84
	pushr.pri
	;$par
	const.pri 00001eb8
	pushr.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000002	; printf
	stack 0000000c
	;$exp
	; line 0000014a
	break	; 0000d2b8
	const.pri 00000000
	push.pri
	;$par
	addr.pri ffffff84
	load.i
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call _setLight
	;$exp
l.000001cd		; 0000d2ec
	; line 0000014c
	break	; 0000d2ec
	;$lcl progs_changed ffffff80
	stack fffffffc
	const.pri 00000000
	stor.s ffffff80
	;$exp
	; line 0000014d
	break	; 0000d308
	;$lcl j ffffff7c
	stack fffffffc
	const.pri 00000000
	stor.s ffffff7c
	;$exp
	jump 000001d0
l.000001ce		; 0000d32c
	; line 0000014d
	break	; 0000d32c
	load.s.pri ffffff7c
	push.pri
	addr.pri ffffff7c
	inc.i
	pop.pri
	;$exp
l.000001d0
	load.s.pri ffffff7c
	push.pri
	const.pri 0000000a
	pop.alt
	xchg
	sless
	jzer 000001cf
	;$exp
	; line 0000014e
	break	; 0000d374
	const.pri 00001888
	const.alt 00000004
	add
	push.pri
	load.s.pri ffffff7c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	push.pri
	addr.pri ffffff84
	const.alt 00000004
	add
	push.pri
	load.s.pri ffffff7c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	pop.alt
	neq
	jnz 000001d2
	const.pri 00001888
	const.alt 0000002c
	add
	push.pri
	load.s.pri ffffff7c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	push.pri
	addr.pri ffffff84
	const.alt 0000002c
	add
	push.pri
	load.s.pri ffffff7c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	pop.alt
	neq
	jnz 000001d2
	const.pri 00001888
	const.alt 00000054
	add
	push.pri
	load.s.pri ffffff7c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	push.pri
	addr.pri ffffff84
	const.alt 00000054
	add
	push.pri
	load.s.pri ffffff7c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	pop.alt
	neq
	jnz 000001d2
	const.pri 00000000
	jump 000001d3
l.000001d2
	const.pri 00000001
l.000001d3
	jzer 000001d1
	;$exp
	; line 00000150
	break	; 0000d53c
	load.s.pri ffffff80
	push.pri
	load.s.pri ffffff7c
	const.alt 00000001
	xchg
	shl
	pop.alt
	or
	stor.s ffffff80
	;$exp
l.000001d1		; 0000d574
	jump 000001ce
l.000001cf		; 0000d57c
	stack 00000004
	; line 00000152
	break	; 0000d584
	load.s.pri ffffff80
	jzer 000001d4
	;$exp
	; line 00000153
	break	; 0000d598
	addr.pri ffffff80
	pushr.pri
	;$par
	const.pri 00001ed0
	pushr.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000002	; printf
	stack 0000000c
	;$exp
	; line 00000154
	break	; 0000d5d0
	;$lcl j ffffff7c
	stack fffffffc
	const.pri 00000000
	stor.s ffffff7c
	;$exp
	jump 000001d7
l.000001d5		; 0000d5f4
	; line 00000154
	break	; 0000d5f4
	load.s.pri ffffff7c
	push.pri
	addr.pri ffffff7c
	inc.i
	pop.pri
	;$exp
l.000001d7
	load.s.pri ffffff7c
	push.pri
	const.pri 0000000a
	pop.alt
	xchg
	sless
	jzer 000001d6
	;$exp
	; line 00000155
	break	; 0000d63c
	;$lcl chgd ffffff78
	stack fffffffc
	load.s.pri ffffff80
	push.pri
	load.s.pri ffffff7c
	const.alt 00000001
	xchg
	shl
	pop.alt
	and
	jzer 000001d8
	const.pri 0000002a
	jump 000001d9
l.000001d8
	const.pri 00000020
l.000001d9
	stor.s ffffff78
	;$exp
	; line 00000157
	break	; 0000d69c
	addr.pri ffffff84
	const.alt 00000004
	add
	push.pri
	load.s.pri ffffff7c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	jzer 000001db
	addr.pri ffffff84
	const.alt 0000002c
	add
	push.pri
	load.s.pri ffffff7c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	jzer 000001db
	addr.pri ffffff84
	const.alt 00000054
	add
	push.pri
	load.s.pri ffffff7c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	push.pri
	const.pri 00000000
	pop.alt
	xchg
	sgrtr
	jzer 000001db
	const.pri 00000001
	jump 000001dc
l.000001db
	const.pri 00000000
l.000001dc
	jzer 000001da
	;$exp
	; line 00000158
	break	; 0000d7a4
	;$lcl targ ffffff6c
	stack fffffff4
	const.pri 00000000
	addr.alt ffffff6c
	fill 0000000c
	; line 00000159
	break	; 0000d7c8
	addr.pri ffffff84
	const.alt 00000054
	add
	push.pri
	load.s.pri ffffff7c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	push.pri
	const.pri 00000006
	pop.alt
	xchg
	sless
	jzer 000001dd
	;$exp
	; line 0000015a
	break	; 0000d828
	addr.pri ffffff6c
	push.pri
	const.pri 00001eec
	pop.alt
	movs 00000008
	;$exp
	jump 000001de
l.000001dd		; 0000d854
	; line 0000015d
	break	; 0000d854
	addr.pri ffffff84
	const.alt 00000054
	add
	push.pri
	load.s.pri ffffff7c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	pushr.pri
	;$par
	const.pri 00001ef4
	pushr.pri
	;$par
	const.pri 00000003
	push.pri
	;$par
	addr.pri ffffff6c
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000003	; sprintf
	stack 00000014
	;$exp
l.000001de		; 0000d8d4
	; line 0000015f
	break	; 0000d8d4
	;$lcl y ffffff68
	stack fffffffc
	const.pri 00000000
	stor.s ffffff68
	;$exp
	;$lcl m ffffff64
	stack fffffffc
	const.pri 00000000
	stor.s ffffff64
	;$exp
	;$lcl d ffffff60
	stack fffffffc
	const.pri 00000000
	stor.s ffffff60
	;$exp
	;$lcl h ffffff5c
	stack fffffffc
	const.pri 00000000
	stor.s ffffff5c
	;$exp
	;$lcl n ffffff58
	stack fffffffc
	const.pri 00000000
	stor.s ffffff58
	;$exp
	;$lcl s ffffff54
	stack fffffffc
	const.pri 00000000
	stor.s ffffff54
	;$exp
	; line 00000160
	break	; 0000d968
	addr.pri ffffff84
	const.alt 00000004
	add
	push.pri
	load.s.pri ffffff7c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	push.pri
	;$par
	addr.pri ffffff54
	pushr.pri
	;$par
	addr.pri ffffff58
	pushr.pri
	;$par
	addr.pri ffffff5c
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000019	; rM2M_GetTime
	stack 00000014
	;$exp
	; line 00000161
	break	; 0000d9ec
	addr.pri ffffff84
	const.alt 00000004
	add
	push.pri
	load.s.pri ffffff7c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	push.pri
	;$par
	addr.pri ffffff60
	pushr.pri
	;$par
	addr.pri ffffff64
	pushr.pri
	;$par
	addr.pri ffffff68
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000027	; rM2M_GetDate
	stack 00000014
	;$exp
	; line 00000162
	break	; 0000da70
	;$lcl dt ffffff50
	stack fffffffc
	addr.pri ffffff84
	const.alt 0000002c
	add
	push.pri
	load.s.pri ffffff7c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	push.pri
	addr.pri ffffff84
	const.alt 00000004
	add
	push.pri
	load.s.pri ffffff7c
	bounds 00000009
	shl.c.pri 00000002
	pop.alt
	add
	load.i
	pop.alt
	sub
	stor.s ffffff50
	;$exp
	; line 00000163
	break	; 0000db08
	load.s.pri ffffff50
	push.pri
	const.pri 0000003c
	pop.alt
	sdiv
	push.pri
	const.pri 0000003c
	pop.alt
	sdiv
	xchg
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	load.s.pri ffffff50
	push.pri
	const.pri 00000e10
	pop.alt
	sdiv
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	addr.pri ffffff58
	pushr.pri
	;$par
	addr.pri ffffff5c
	pushr.pri
	;$par
	addr.pri ffffff60
	pushr.pri
	;$par
	addr.pri ffffff64
	pushr.pri
	;$par
	addr.pri ffffff68
	pushr.pri
	;$par
	addr.pri ffffff6c
	pushr.pri
	;$par
	addr.pri ffffff7c
	pushr.pri
	;$par
	addr.pri ffffff78
	pushr.pri
	;$par
	const.pri 00001efc
	pushr.pri
	;$par
	const.pri 0000002c
	push.pri
	sysreq 00000002	; printf
	stack 00000030
	heap fffffff8
	;$exp
	stack 00000028
	jump 000001df
l.000001da		; 0000dc24
	; line 00000167
	break	; 0000dc24
	addr.pri ffffff7c
	pushr.pri
	;$par
	addr.pri ffffff78
	pushr.pri
	;$par
	const.pri 00001f38
	pushr.pri
	;$par
	const.pri 0000000c
	push.pri
	sysreq 00000002	; printf
	stack 00000010
	;$exp
l.000001df		; 0000dc68
	stack 00000004
	jump 000001d5
l.000001d6		; 0000dc78
	stack 00000004
l.000001d4		; 0000dc80
	; line 0000016b
	break	; 0000dc80
	const.pri 00001888
	push.pri
	addr.pri ffffff84
	pop.alt
	movs 0000007c
	;$exp
	; line 0000016c
	break	; 0000dca4
	const.pri 00000000
	stack 00000080
	retn


DATA 0000	; 00001eb8
dump 4444455f 53455455 50206c69 67687420 25303678 0a000000 4444455f 53455455 
dump 50207072 6f677320 6368616e 6765640a 00000000 70756d70 00000000 253264b0 
dump 43000000 20202025 63205b25 645d2025 73206672 6f6d2025 3032642d 25303264 
dump 2d253032 64202530 32643a25 30326420 666f7220 25303264 3a253032 640a0000 
dump 20202025 63205b25 645d202d 2d2d0a00 

CODE 0000	; 0000dcbc
	proc	; _on_profile
	; line 0000016e
	break	; 0000dcc0
	; line 0000016f
	break	; 0000dcc4
	;$lcl o ffffffec
	stack ffffffec
	const.pri 00000000
	addr.alt ffffffec
	fill 00000014
	; line 00000170
	break	; 0000dce8
	addr.pri ffffffec
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call DDE_profile_read
	jzer 000001e0
	;$exp
	; line 00000170
	break	; 0000dd14
	const.pri ffffffff
	stack 00000014
	retn
l.000001e0		; 0000dd2c
	; line 00000172
	break	; 0000dd2c
	const.pri 000017e0
	load.i
	push.pri
	addr.pri ffffffec
	load.i
	pop.alt
	push.pri
	push.alt
	;$par
	const.pri 00000008
	push.pri
	call 40000002!=40000002	; operator!=(Float:,Float:)
	jnz 000001e2
	const.pri 000017e0
	const.alt 00000004
	add
	load.i
	push.pri
	addr.pri ffffffec
	const.alt 00000004
	add
	load.i
	pop.alt
	neq
	jnz 000001e2
	const.pri 000017e0
	const.alt 00000008
	add
	load.i
	push.pri
	addr.pri ffffffec
	const.alt 00000008
	add
	load.i
	pop.alt
	neq
	jnz 000001e2
	const.pri 000017e0
	const.alt 0000000c
	add
	load.i
	push.pri
	addr.pri ffffffec
	const.alt 0000000c
	add
	load.i
	pop.alt
	neq
	jnz 000001e2
	const.pri 000017e0
	const.alt 00000010
	add
	load.i
	push.pri
	addr.pri ffffffec
	const.alt 00000010
	add
	load.i
	pop.alt
	neq
	jnz 000001e2
	const.pri 00000000
	jump 000001e3
l.000001e2
	const.pri 00000001
l.000001e3
	jzer 000001e1
	;$exp
	; line 00000178
	break	; 0000dea4
	addr.pri ffffffec
	const.alt 00000010
	add
	pushr.pri
	;$par
	addr.pri ffffffec
	const.alt 0000000c
	add
	pushr.pri
	;$par
	addr.pri ffffffec
	const.alt 00000008
	add
	pushr.pri
	;$par
	addr.pri ffffffec
	const.alt 00000004
	add
	pushr.pri
	;$par
	addr.pri ffffffec
	pushr.pri
	;$par
	const.pri 00001f48
	pushr.pri
	;$par
	const.pri 00000018
	push.pri
	sysreq 00000002	; printf
	stack 0000001c
	;$exp
	; line 0000017b
	break	; 0000df3c
	addr.pri ffffffec
	const.alt 00000010
	add
	load.i
	const.alt 00000001
	and
	not
	not
	stor 0000198c
	;$exp
	; line 0000017c
	break	; 0000df74
	addr.pri ffffffec
	const.alt 00000010
	add
	load.i
	const.alt 00000002
	and
	not
	not
	stor 00001988
	;$exp
l.000001e1		; 0000dfac
	; line 0000017e
	break	; 0000dfac
	const.pri 000017e0
	push.pri
	addr.pri ffffffec
	pop.alt
	movs 00000014
	;$exp
	; line 0000017f
	break	; 0000dfd0
	const.pri 00000000
	stack 00000014
	retn


DATA 0000	; 00001f48
dump 4444455f 50524f46 494c4520 6368616e 67656420 252e3266 2f6b7768 20626c6f 
dump 77657220 2564572c 20686561 74657220 2564572c 2070756d 70202564 572c2064 
dump 65627567 3d307825 3034780a 00000000 

CODE 0000	; 0000dfe8
	proc	; onUplinkReceived
	; line 00000183
	break	; 0000dfec
	;$lcl cx 0000000c
	; line 00000184
	break	; 0000dff0
	load.s.pri 0000000c
	switch 000001e4
l.000001e6		; 0000e004
	; line 00000185
	break	; 0000e004
	const.pri 00000000
	push.pri
	call _on_cmds
	retn
	jump 000001e5
l.000001e7		; 0000e028
	; line 00000186
	break	; 0000e028
	const.pri 00000000
	push.pri
	call _on_setup
	retn
	jump 000001e5
l.000001e8		; 0000e04c
	; line 00000187
	break	; 0000e04c
	const.pri 00000000
	push.pri
	call _on_profile
	retn
	jump 000001e5
l.000001e9		; 0000e070
	; line 00000189
	break	; 0000e070
	load.s.pri 0000000c
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00001f98
	pushr.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000002	; printf
	stack 0000000c
	heap fffffffc
	;$exp
	jump 000001e5
l.000001e4		; 0000e0c8
	casetbl
	case 00000003 000001e9
	case 00000025 000001e6
	case 00000026 000001e7
	case 00000028 000001e8
l.000001e5		; 0000e0ec
	; line 0000018c
	break	; 0000e0ec
	const.pri ffffffff
	retn


DATA 0000	; 00001f98
dump 21206f6e 55706c69 6e6b5265 63656976 6564202d 20756e6b 6e6f776e 20636f6e 
dump 66696725 640a0000 

CODE 0000	; 0000e0fc
	proc	; onUplinkReady
	; line 0000018f
	break	; 0000e100
	; line 00000190
	break	; 0000e104
	const.pri 00000002
	stor 00001e20
	;$exp
	; line 00000191
	break	; 0000e118
	const.pri 00001fc8
	push.pri
	;$par
	const.pri 00001fc0
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	; line 00000193
	break	; 0000e148
	const.pri 0000005a
	stor 000017c8
	;$exp
	; line 00000194
	break	; 0000e15c
	const.pri 00000002
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call uplinkMode
	;$exp
	; line 00000197
	break	; 0000e180
	const.pri 000000fa
	push.pri
	;$par
	const.pri 00001fe4
	push.pri
	;$par
	const.pri 00001fd8
	push.pri
	;$par
	const.pri 000000bc
	push.pri
	;$par
	const.pri 000000bb
	push.pri
	;$par
	const.pri 00001fd4
	push.pri
	;$par
	const.pri 00000001
	push.pri
	;$par
	const.pri 0000001c
	push.pri
	call layzInit
	;$exp
	; line 00000198
	break	; 0000e1ec
	const.pri 000006a4
	push.pri
	;$par
	const.pri 00002000
	push.pri
	;$par
	const.pri 00001ff4
	push.pri
	;$par
	const.pri 000000bb
	push.pri
	;$par
	const.pri 000000bc
	push.pri
	;$par
	const.pri 00001ff0
	push.pri
	;$par
	const.pri 00000000
	push.pri
	;$par
	const.pri 0000001c
	push.pri
	call layzInit
	;$exp
	; line 0000019a
	break	; 0000e258
	const.pri 000001f4
	push.pri
	;$par
	const.pri 0000200c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call setInterval
	;$exp
	; line 0000019b
	break	; 0000e288
	const.pri 000003e8
	push.pri
	;$par
	const.pri 0000201c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call setInterval
	;$exp
	; line 0000019d
	break	; 0000e2b8
	const.pri 00000003
	stor 00001e20
	;$exp
	; line 0000019e
	break	; 0000e2cc
	const.pri 00002034
	push.pri
	;$par
	const.pri 0000202c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	; line 0000019f
	break	; 0000e2fc
	const.pri 00000000
	push.pri
	;$par
	const.pri 00001888
	load.i
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call _setLight
	;$exp
	const.pri 00000000
	retn


DATA 0000	; 00001fc0
dump 626f6f74 00000000 696e6974 2d726561 64790000 64737000 6f6e5f72 785f6473 
dump 70000000 6f6e5f74 78746f5f 64737000 696f6300 6f6e5f72 785f696f 63000000 
dump 6f6e5f74 78746f5f 696f6300 66617374 5f746173 6b5f3530 306d7300 6d61696e 
dump 5f746173 6b5f3173 00000000 626f6f74 00000000 72756e6e 696e6700 

CODE 0000	; 0000e33c
	proc	; onUplinkWaiting
	; line 000001a2
	break	; 0000e340
	; line 000001a3
	break	; 0000e344
	const.pri 00002044
	push.pri
	;$par
	const.pri 0000203c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	; line 000001a4
	break	; 0000e374
	const.pri 00000001
	stor 00001e20
	;$exp
	const.pri 00000000
	retn


DATA 0000	; 0000203c
dump 626f6f74 00000000 696e6974 2d776169 74696e67 00000000 
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
dump 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000

CODE 0000	; 0000e394
	proc	; main
	; line 000001b8
	break	; 0000e398
	; line 000001b9
	break	; 0000e39c
	const.pri 00000000
	stor 00001e20
	;$exp
	; line 000001ba
	break	; 0000e3b0
	const.pri 00000000
	push.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000000
	heap 00000004
	stor.i
	xchg
	pushr.pri
	;$par
	const.pri 00000010
	push.pri
	sysreq 00000019	; rM2M_GetTime
	stack 00000014
	heap fffffff4
	stor 000017c4
	;$exp
	; line 000001bb
	break	; 0000e440
	const.pri 00001000
	push.pri
	;$par
	const.pri 00002054
	pushr.pri
	;$par
	const.pri 00000008
	push.pri
	sysreq 00000028	; setbuf
	stack 0000000c
	;$exp
	; line 000001be
	break	; 0000e478
	const.pri 0000305c
	push.pri
	;$par
	const.pri 00003054
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	; line 000001c0
	break	; 0000e4a8
	const.pri 00000000
	push.pri
	call ioInit
	;$exp
	; line 000001c3
	break	; 0000e4c0
	const.pri 000017f4
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call DDE_status_read
	;$exp
	; line 000001c4
	break	; 0000e4e4
	const.pri 000017f4
	const.alt 0000000c
	add
	push.pri
	const.pri 00000000
	pop.alt
	stor.i
	;$exp
	; line 000001c5
	break	; 0000e510
	const.pri 000017f4
	const.alt 00000030
	add
	load.i
	push.pri
	const.pri 000f4240
	pop.alt
	xchg
	sless
	jzer 000001ea
	;$exp
	; line 000001c5
	break	; 0000e54c
	const.pri 00003084
	push.pri
	;$par
	const.pri 00000004
	push.pri
	call cmd_stats_reset
	;$exp
l.000001ea		; 0000e570
	; line 000001ca
	break	; 0000e570
	const.pri 00000000
	push.pri
	call initUplink
	;$exp
	; line 000001cc
	break	; 0000e588
	const.pri 00003094
	push.pri
	;$par
	const.pri 0000308c
	push.pri
	;$par
	const.pri 00000008
	push.pri
	call dde_event
	;$exp
	const.pri 00000000
	retn


DATA 0000	; 00003054
dump 626f6f74 00000000 3d3d3d3d 3d3d3d3d 3d3d3d3d 3d3d3d3d 3d3d3d3d 3d3d3d3d 
dump 3d20706f 7765722d 6f6e203d 3d3d0000 626f6f74 00000000 626f6f74 00000000 
dump 696e6974 69616c69 7a696e67 00000000 

STKSIZE 00000400
